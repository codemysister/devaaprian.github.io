%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 1808.i216.037.P.m005.c20.video tutorials online training courses set [преобразованный].eps
%%Creator: Adobe Illustrator(R) 16.2
%%For: Пим
%%CreationDate: 18.08.18
%%BoundingBox: 0 0 683 418
%%HiResBoundingBox: 0 0 682.2540 417.9439
%%CropBox: 0 0 682.2540 417.9439
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.2.1 x723 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">shablon450_450</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2018-08-18T11:04:44+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-08-18T11:04:44+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-08-18T11:04:44+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O6trGm6RZNe6jMILZCF&#xA;LkMxqxoAFUMxJ9hluHDLJLhiLLCeQQFnkrWV7a31pDeWkomtp1DxSr0ZT0yE4GJMTsQmMhIWOStk&#xA;WTsVdirsVdirsVdirmZVUsxAUCpJ2AAxVjepeb442MdigkI2Mz14/QBQnLo4u9xp6juSGfzvex3C&#xA;wSahFFPJ/dwH0gx/1VYcjl409iwDTQdRK+aY2nnC/jYC5RZ07kDg34bfhlZxDo2R1B6so0/UbW/h&#xA;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&#xA;baBFighjAVERBxVVUbAACgGAm90qmBX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:028011740720681183D1D4E7C61DD9A3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:028011740720681183D1D4E7C61DD9A3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7e305632-2f2c-534a-9301-d83984cc8dd5</stRef:instanceID>
            <stRef:documentID>xmp.did:7e305632-2f2c-534a-9301-d83984cc8dd5</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62829471-ebf3-2c4e-be0f-37578a3e8e57</stEvt:instanceID>
                  <stEvt:when>2016-12-02T14:33:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e305632-2f2c-534a-9301-d83984cc8dd5</stEvt:instanceID>
                  <stEvt:when>2018-08-17T18:50:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:028011740720681183D1D4E7C61DD9A3</stEvt:instanceID>
                  <stEvt:when>2018-08-18T11:04:44+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>715.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>–У—А—Г–њ–њ–∞ –Њ–±—А–∞–Ј—Ж–Њ–≤ –њ–Њ —Г–Љ–Њ–ї—З–∞–љ–Є—О</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -417.944 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 417.944 li
682.254 417.944 li
682.254 0 li
cp
clp
119.741 99.5215 mo
14.3989 99.5215 li
12.7583 99.5215 11.4277 98.1914 11.4277 96.5503 cv
11.4277 33.8857 li
11.4277 32.2446 12.7583 30.9146 14.3989 30.9146 cv
119.741 30.9146 li
121.382 30.9146 122.712 32.2446 122.712 33.8857 cv
122.712 96.5503 li
122.712 98.1914 121.382 99.5215 119.741 99.5215 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.717647 .87451 .917647 rgb
f
114.627 94.6904 mo
19.5127 94.6904 li
18.0313 94.6904 16.8301 93.5479 16.8301 92.1377 cv
16.8301 38.2983 li
16.8301 36.8882 18.0313 35.7456 19.5127 35.7456 cv
114.627 35.7456 li
116.109 35.7456 117.31 36.8882 117.31 38.2983 cv
117.31 92.1377 li
117.31 93.5479 116.109 94.6904 114.627 94.6904 cv
cp
1 .733333 .733333 rgb
f
61.7837 57.665 mo
74.5171 65.0166 li
61.7837 72.3682 li
61.7837 57.665 li
cp
1 1 1 rgb
f
16.6436 86.7075 mo
13.6411 86.2617 11.3203 80.7656 13.4058 77.4634 cv
15.4917 74.1611 16.6436 73.1509 14.9053 69.8481 cv
13.1675 66.5459 8.12695 63.939 9.69092 59.7676 cv
11.2554 55.5962 16.2959 55.4224 15.0791 51.5986 cv
13.8623 47.7749 8.97217 46.229 11.3652 40.2466 cv
13.5259 34.8442 18.4482 37.6055 18.4482 31.3628 cv
18.4482 26.0454 10.8848 20.7383 17.5127 16.8369 cv
23.0005 13.6064 26.6211 22.1655 26.5518 26.8608 cv
26.4316 35.0244 20.1289 37.2456 22.5527 42.3867 cv
23.7593 44.9458 28.4951 46.5415 27.4521 52.9727 cv
26.4097 59.4033 20.2935 58.7246 20.2935 62.7222 cv
20.2935 66.7197 27.7046 68.8291 27.0923 76.3828 cv
26.5518 83.0459 25.5313 88.0283 16.6436 86.7075 cv
cp
.168627 .47451 .901961 rgb
f
136.514 62.6968 mo
89.1245 62.6968 li
89.1245 79.144 li
136.514 79.144 li
138.665 79.144 140.409 76.6196 140.409 73.5049 cv
140.409 68.3359 li
140.409 65.2217 138.665 62.6968 136.514 62.6968 cv
cp
.0392157 .364706 .756863 rgb
f
135.864 64.6021 mo
89.1787 64.6021 li
89.1787 77.2393 li
135.864 77.2393 li
137.517 77.2393 137.517 64.6021 135.864 64.6021 cv
cp
1 1 1 rgb
f
gsave
135.864 64.6021 mo
89.1787 64.6021 li
89.1787 77.2392 li
135.864 77.2392 li
137.517 77.2392 137.517 64.6021 135.864 64.6021 cv
clp
138.353 66.7676 mo
88.3672 66.7676 li
88.3672 66.104 li
138.353 66.104 li
138.353 66.7676 li
cp
.701961 .890196 .937255 rgb
f
138.353 68.981 mo
88.3672 68.981 li
88.3672 68.3169 li
138.353 68.3169 li
138.353 68.981 li
cp
f
138.353 71.1938 mo
88.3672 71.1938 li
88.3672 70.5298 li
138.353 70.5298 li
138.353 71.1938 li
cp
f
138.353 73.4067 mo
88.3672 73.4067 li
88.3672 72.7427 li
138.353 72.7427 li
138.353 73.4067 li
cp
f
138.353 75.6196 mo
88.3672 75.6196 li
88.3672 74.9561 li
138.353 74.9561 li
138.353 75.6196 li
cp
f
grestore
136.514 95.5913 mo
89.1245 95.5913 li
89.1245 112.039 li
136.514 112.039 li
138.665 112.039 140.409 109.514 140.409 106.4 cv
140.409 101.23 li
140.409 98.1162 138.665 95.5913 136.514 95.5913 cv
cp
.509804 .188235 .141176 rgb
f
135.864 97.4966 mo
89.1787 97.4966 li
89.1787 110.134 li
135.864 110.134 li
137.517 110.134 137.517 97.4966 135.864 97.4966 cv
cp
1 1 1 rgb
f
gsave
135.864 97.4965 mo
89.1787 97.4965 li
89.1787 110.134 li
135.864 110.134 li
137.517 110.134 137.517 97.4965 135.864 97.4965 cv
clp
138.353 99.6626 mo
88.3672 99.6626 li
88.3672 98.9985 li
138.353 98.9985 li
138.353 99.6626 li
cp
.701961 .890196 .937255 rgb
f
138.353 101.875 mo
88.3672 101.875 li
88.3672 101.211 li
138.353 101.211 li
138.353 101.875 li
cp
f
138.353 104.088 mo
88.3672 104.088 li
88.3672 103.424 li
138.353 103.424 li
138.353 104.088 li
cp
f
138.353 106.301 mo
88.3672 106.301 li
88.3672 105.638 li
138.353 105.638 li
138.353 106.301 li
cp
f
138.353 108.515 mo
88.3672 108.515 li
88.3672 107.851 li
138.353 107.851 li
138.353 108.515 li
cp
f
grestore
96.2607 95.5913 mo
143.65 95.5913 li
143.65 79.144 li
96.2607 79.144 li
94.1099 79.144 92.3662 81.6689 92.3662 84.7832 cv
92.3662 89.9526 li
92.3662 93.0669 94.1099 95.5913 96.2607 95.5913 cv
cp
.854902 .247059 .227451 rgb
f
96.9102 93.6865 mo
143.596 93.6865 li
143.596 81.0493 li
96.9102 81.0493 li
95.2573 81.0493 95.2573 93.6865 96.9102 93.6865 cv
cp
1 1 1 rgb
f
gsave
96.9102 93.6865 mo
143.596 93.6865 li
143.596 81.0494 li
96.9102 81.0494 li
95.2574 81.0494 95.2574 93.6865 96.9102 93.6865 cv
clp
94.4219 91.5205 mo
144.407 91.5205 li
144.407 92.1846 li
94.4219 92.1846 li
94.4219 91.5205 li
cp
.701961 .890196 .937255 rgb
f
94.4219 89.3076 mo
144.407 89.3076 li
144.407 89.9717 li
94.4219 89.9717 li
94.4219 89.3076 li
cp
f
94.4219 87.0947 mo
144.407 87.0947 li
144.407 87.7588 li
94.4219 87.7588 li
94.4219 87.0947 li
cp
f
94.4219 84.8818 mo
144.407 84.8818 li
144.407 85.5454 li
94.4219 85.5454 li
94.4219 84.8818 li
cp
f
94.4219 82.6685 mo
144.407 82.6685 li
144.407 83.3325 li
94.4219 83.3325 li
94.4219 82.6685 li
cp
f
grestore
77.0908 77.1626 mo
79.6865 77.6401 li
79.3203 79.6313 li
74.0552 78.6621 li
73.7075 78.5986 73.7319 77.7959 74.0669 77.6836 cv
77.0908 77.1626 li
cp
.988235 .384314 .384314 rgb
f
87.5649 79.2163 mo
90.1875 78.915 li
90.418 80.9268 li
85.0996 81.5371 li
84.7485 81.5776 84.5371 80.8027 84.8252 80.5977 cv
87.5649 79.2163 li
cp
f
103.441 61.4365 mo
105.152 58.4648 103.981 53.6929 103.981 53.6929 cv
96.5977 55.2236 li
85.3481 59.6357 li
77.5146 73.0513 li
90.9253 75.1226 li
90.7451 66.1187 li
90.7451 66.1187 100.727 66.1504 103.441 61.4365 cv
cp
.168627 .47451 .901961 rgb
f
106.417 61.8867 mo
108.128 58.915 107.228 56.5293 107.228 56.5293 cv
99.5747 55.6738 li
87.8794 60.5649 li
82.917 73.772 li
93.9019 75.5728 li
93.7217 66.5688 li
93.7217 66.5688 103.703 66.6006 106.417 61.8867 cv
cp
.0392157 .364706 .756863 rgb
f
101.448 26.3013 mo
101.448 26.3013 105.417 25.623 107.214 29.7363 cv
107.748 30.9575 107.696 31.958 107.602 32.6294 cv
107.511 33.2734 106.95 33.7441 106.3 33.7295 cv
104.116 33.6802 li
101.448 26.3013 li
cp
.164706 .156863 .45098 rgb
f
107.356 56.6924 mo
94.082 56.2588 li
96.2231 49.7593 li
93.0293 38.9849 li
92.9146 37.564 94.312 36.3784 96.0542 36.417 cv
106.472 36.6509 li
108.214 36.6899 109.557 37.937 109.379 39.3511 cv
105.427 49.9658 li
107.356 56.6924 li
cp
1 .392157 .372549 rgb
f
93.542 37.5308 mo
91.9663 39.6465 92.1011 49.0107 91.9209 49.5508 cv
91.7412 50.0913 88.9946 57.8345 88.9946 57.8345 cv
91.7412 58.0146 li
91.7412 58.0146 94.8022 50.8115 95.0723 49.8213 cv
95.3428 48.8306 96.4702 39.8096 96.1528 39.0161 cv
95.5225 37.4404 94.0503 36.8477 93.542 37.5308 cv
cp
.854902 .247059 .227451 rgb
f
101.159 38.3735 mo
103.476 38.4253 103.498 36.8496 103.506 36.4707 cv
103.564 33.9063 li
103.577 33.3257 102.709 33.355 102.194 33.3438 cv
100.535 33.3066 li
100.02 33.2949 99.1426 33.7461 99.1299 34.3271 cv
99.084 36.3716 li
99.0757 36.7461 99.2837 38.3315 101.159 38.3735 cv
cp
.968627 .584314 .552941 rgb
f
97.7119 33.2402 mo
98.3281 35.5103 100.221 35.207 102.491 34.5913 cv
104.761 33.9756 106.102 31.6362 105.486 29.3662 cv
104.87 27.0962 102.531 25.7554 100.261 26.3711 cv
97.9912 26.9868 97.0962 30.9702 97.7119 33.2402 cv
cp
.988235 .658824 .619608 rgb
f
gsave
97.7119 33.2402 mo
98.3282 35.5102 100.221 35.2071 102.491 34.5913 cv
104.761 33.9756 106.102 31.6363 105.486 29.3662 cv
104.87 27.0962 102.531 25.7553 100.261 26.371 cv
97.9912 26.9868 97.0962 30.9701 97.7119 33.2402 cv
clp
102.509 28.5269 mo
102.509 28.5269 102.476 30.0303 102.683 30.0347 cv
102.891 30.0396 103.675 29.7456 104.229 30.4844 cv
104.783 31.2231 104.145 31.9351 103.467 32.0752 cv
102.79 32.2158 103.217 33.9888 104.831 33.7139 cv
106.445 33.439 107.101 29.667 106.303 28.1968 cv
105.506 26.7266 102.898 25.0601 101.963 25.1426 cv
101.027 25.2256 94.7998 28.4009 94.7998 28.4009 cv
102.509 28.5269 li
cp
.164706 .156863 .45098 rgb
f
grestore
91.7412 58.0146 mo
88.9946 57.8345 li
88.9946 57.8345 89.1816 60.0005 90.5112 60.2466 cv
92.1777 60.5552 91.7412 58.0146 91.7412 58.0146 cv
cp
1 .572549 .513726 rgb
f
98.9443 58.1348 mo
101.03 59.8633 li
101.03 59.8633 99.4395 61.3447 98.2881 60.6362 cv
96.8447 59.7476 98.9443 58.1348 98.9443 58.1348 cv
cp
f
gsave
107.356 56.6924 mo
94.273 56.3993 li
96.2231 49.7593 li
93.0292 38.9849 li
92.9145 37.564 94.312 36.3784 96.0542 36.417 cv
106.472 36.6509 li
108.214 36.6899 109.557 37.9369 109.379 39.351 cv
105.427 49.9659 li
107.356 56.6924 li
clp
106.245 34.4995 mo
106.18 37.3994 103.777 39.6973 100.877 39.6323 cv
97.9771 39.5674 95.6787 37.1641 95.7437 34.2642 cv
95.8086 31.3643 98.2124 29.0659 101.112 29.1309 cv
104.012 29.1958 106.31 31.5996 106.245 34.4995 cv
cp
.968627 .584314 .552941 rgb
f
grestore
103.305 27.1016 mo
104.234 27.1226 106.077 24.3755 104.486 22.791 cv
102.987 21.2988 100.477 22.5786 100.35 24.1699 cv
100.135 26.8755 101.292 27.0566 103.305 27.1016 cv
cp
.164706 .156863 .45098 rgb
f
18.6284 87.668 mo
18.2681 87.668 li
18.2681 86.6084 19.1411 84.6606 20.0659 82.5986 cv
20.7427 81.0884 21.4424 79.5269 21.7563 78.3765 cv
22.9663 73.9404 19.9414 70.1807 17.7329 67.4351 cv
16.6816 66.1289 15.7739 65.0005 15.5137 64.0659 cv
14.6455 60.9556 16.561 59.2295 18.4136 57.5605 cv
19.73 56.374 21.0913 55.1475 21.5146 53.4102 cv
22.1201 50.9277 21.0146 49.6118 19.7349 48.0879 cv
18.5381 46.6636 17.1821 45.0493 16.9482 42.1821 cv
16.8042 40.4199 17.8389 39.0137 19.0366 37.3862 cv
20.3838 35.5557 21.9102 33.481 22.3516 30.2578 cv
23.0239 25.3472 20.314 21.7842 20.2866 21.7485 cv
20.5718 21.5283 li
20.5996 21.5649 23.4014 25.248 22.7085 30.3066 cv
22.2544 33.6206 20.6992 35.7344 19.3267 37.5996 cv
18.1719 39.1689 17.1738 40.5249 17.3066 42.1528 cv
17.5317 44.9058 18.8491 46.4736 20.0107 47.8564 cv
21.2974 49.3887 22.5132 50.8359 21.8643 53.4956 cv
21.4146 55.3408 20.0117 56.605 18.6543 57.8276 cv
16.8022 59.4971 15.0522 61.0737 15.8604 63.9692 cv
16.1011 64.8325 16.9873 65.9336 18.0137 67.2095 cv
20.2705 70.0151 23.3618 73.8579 22.1035 78.4712 cv
21.7827 79.6484 21.0771 81.2231 20.3945 82.7461 cv
19.5264 84.6826 18.6284 86.6855 18.6284 87.668 cv
cp
1 1 1 rgb
f
23.5703 111.919 mo
14.7998 111.919 li
12.2056 90.8965 li
12.2056 90.8965 12.5684 85.4355 19.8887 85.7471 cv
25.5313 85.9873 26.1646 90.8965 26.1646 90.8965 cv
23.5703 111.919 li
cp
.164706 .156863 .45098 rgb
f
21.1943 21.6387 mo
21.1943 22.061 20.8521 22.4038 20.4292 22.4038 cv
20.0063 22.4038 19.6636 22.061 19.6636 21.6387 cv
19.6636 21.2158 20.0063 20.873 20.4292 20.873 cv
20.8521 20.873 21.1943 21.2158 21.1943 21.6387 cv
cp
1 1 1 rgb
f
87.5649 79.2163 mo
90.1875 78.915 li
90.4355 74.9873 li
87.2388 74.5371 li
87.5649 79.2163 li
cp
1 .572549 .513726 rgb
f
77.1997 77.2383 mo
79.6865 77.6401 li
81.2061 73.5918 li
78.2349 73.1416 li
77.1997 77.2383 li
cp
f
107.048 38.0259 mo
106.123 38.8481 105.847 42.6479 106.147 44.3887 cv
106.448 46.1294 106.628 49.6709 106.628 50.3315 cv
106.628 50.9917 98.9443 58.1348 98.9443 58.1348 cv
101.045 59.8755 li
101.045 59.8755 109.929 53.3325 110.349 51.772 cv
110.77 50.2114 110.469 39.4663 109.509 38.3862 cv
108.548 37.3057 107.588 37.5454 107.048 38.0259 cv
cp
.854902 .247059 .227451 rgb
f
429.15 234.909 mo
429.023 235.245 428.882 236.26 429.3 236.392 cv
429.717 236.524 434.279 236.557 434.94 236.508 cv
435.603 236.46 435.676 235.784 434.363 235.386 cv
433.051 234.989 431.362 234.293 431.362 234.293 cv
429.15 234.909 li
cp
.968627 .584314 .552941 rgb
f
405.49 233.753 mo
405.363 234.089 404.991 236.26 405.409 236.392 cv
405.826 236.524 410.389 236.557 411.05 236.508 cv
411.712 236.46 411.786 235.784 410.473 235.386 cv
409.16 234.989 407.472 234.293 407.472 234.293 cv
405.49 233.753 li
cp
f
467.105 221.295 mo
361.764 221.295 li
360.123 221.295 358.792 219.965 358.792 218.325 cv
358.792 155.66 li
358.792 154.019 360.123 152.688 361.764 152.688 cv
467.105 152.688 li
468.746 152.688 470.076 154.019 470.076 155.66 cv
470.076 218.325 li
470.076 219.965 468.746 221.295 467.105 221.295 cv
cp
.560784 .835294 .898039 rgb
f
461.991 216.464 mo
366.877 216.464 li
365.396 216.464 364.194 215.322 364.194 213.912 cv
364.194 160.072 li
364.194 158.663 365.396 157.52 366.877 157.52 cv
461.991 157.52 li
463.474 157.52 464.675 158.663 464.675 160.072 cv
464.675 213.912 li
464.675 215.322 463.474 216.464 461.991 216.464 cv
cp
1 .623529 .623529 rgb
f
gsave
461.991 216.464 mo
366.877 216.464 li
365.395 216.464 364.194 215.322 364.194 213.912 cv
364.194 160.072 li
364.194 158.663 365.395 157.519 366.877 157.519 cv
461.991 157.519 li
463.474 157.519 464.675 158.663 464.675 160.072 cv
464.675 213.912 li
464.675 215.322 463.474 216.464 461.991 216.464 cv
clp
426.68 250.38 mo
402.189 250.38 li
393.885 250.38 387.152 243.648 387.152 235.343 cv
387.152 213.194 li
387.152 204.889 393.885 198.157 402.189 198.157 cv
426.68 198.157 li
434.984 198.157 441.717 204.889 441.717 213.194 cv
441.717 235.343 li
441.717 243.648 434.984 250.38 426.68 250.38 cv
cp
.0980392 .345098 .858824 rgb
f
grestore
421.548 199.238 mo
421.548 199.238 419.837 202.929 415.064 202.749 cv
409.033 202.521 407.741 198.367 407.741 198.367 cv
407.741 189.633 li
421.128 189.633 li
421.548 199.238 li
cp
.968627 .584314 .552941 rgb
f
414.314 163.102 mo
412.994 162.621 407.831 159.86 403.39 161.781 cv
398.947 163.702 398.827 166.103 398.707 168.984 cv
398.587 171.865 395.105 173.666 393.545 177.388 cv
391.984 181.109 392.825 186.392 396.307 189.753 cv
399.788 193.115 399.188 196.836 399.188 199.838 cv
399.188 202.839 407.051 206.021 407.741 198.367 cv
408.432 190.714 409.513 183.391 409.752 181.47 cv
409.883 180.427 416.965 173.873 418.156 169.224 cv
419.16 165.307 414.314 163.102 414.314 163.102 cv
cp
.160784 .14902 .419608 rgb
f
414.314 163.102 mo
415.635 162.621 421.125 159.86 425.567 161.781 cv
430.009 163.702 430.129 166.103 430.249 168.984 cv
430.369 171.865 433.851 173.666 435.411 177.388 cv
436.972 181.109 436.132 186.392 432.65 189.753 cv
429.169 193.115 429.769 196.836 429.769 199.838 cv
429.769 202.839 421.905 206.021 421.215 198.367 cv
420.524 190.714 418.396 183.271 418.156 181.35 cv
417.916 179.429 414.314 163.102 414.314 163.102 cv
cp
f
409.577 193.415 mo
415.846 198.431 420.032 194.889 424.332 188.108 cv
429.44 180.053 429.471 172.099 423.203 167.083 cv
416.935 162.066 407.787 163.081 402.771 169.35 cv
397.754 175.618 403.31 188.398 409.577 193.415 cv
cp
.988235 .658824 .619608 rgb
f
399.908 180.389 mo
400.283 180.927 404.891 178.769 408.672 174.987 cv
413.234 170.425 413.954 166.943 414.435 166.943 cv
414.915 166.943 416.304 170.944 418.637 174.026 cv
421.998 178.468 429.081 180.75 429.081 180.75 cv
429.081 180.75 430.642 177.028 428.601 172.946 cv
426.56 168.864 421.998 164.182 418.396 163.702 cv
414.795 163.222 412.874 163.342 409.992 163.461 cv
407.111 163.582 399.788 168.624 399.067 171.625 cv
398.348 174.626 399.908 180.389 399.908 180.389 cv
cp
.160784 .14902 .419608 rgb
f
412.63 178.739 mo
422.002 184.149 li
412.63 189.561 li
412.63 178.739 li
cp
1 1 1 rgb
f
475.235 229.671 mo
475.235 238.878 469.124 246.342 461.585 246.342 cv
454.046 246.342 447.934 238.878 447.934 229.671 cv
447.934 220.464 454.046 213 461.585 213 cv
469.124 213 475.235 220.464 475.235 229.671 cv
cp
.168627 .47451 .901961 rgb
f
466.145 266.262 mo
466.152 266.15 466.158 266.036 466.158 265.921 cv
466.158 263.414 464.125 261.379 461.616 261.379 cv
459.108 261.379 457.075 263.414 457.075 265.921 cv
457.075 266.036 457.081 266.15 457.089 266.262 cv
466.145 266.262 li
cp
f
461.759 266.262 mo
460.964 266.262 li
460.964 236.742 li
461.759 236.742 li
461.759 266.262 li
cp
f
472.13 245.954 mo
472.13 247.304 471.025 248.409 469.675 248.409 cv
453.495 248.409 li
452.145 248.409 451.039 247.304 451.039 245.954 cv
451.039 241.505 li
451.039 240.155 452.145 239.049 453.495 239.049 cv
469.675 239.049 li
471.025 239.049 472.13 240.155 472.13 241.505 cv
472.13 245.954 li
cp
f
451.792 239.74 mo
467.464 239.74 li
467.464 243.501 li
467.464 245.537 466.186 246.453 464.149 246.453 cv
452.164 246.453 li
450.128 246.453 448.105 245.537 448.105 243.501 cv
448.105 243.426 li
448.105 241.391 449.756 239.74 451.792 239.74 cv
cp
.160784 .14902 .419608 rgb
f
467.464 239.694 mo
455.77 239.694 li
454.31 222.369 li
454.179 220.816 455.403 219.484 456.961 219.484 cv
466.272 219.484 li
467.83 219.484 469.055 220.816 468.924 222.369 cv
467.464 239.694 li
cp
.0980392 .345098 .858824 rgb
f
448.27 242.933 mo
446.402 264.128 li
449.241 264.128 li
449.241 264.128 453.218 251.404 453.672 246.863 cv
454.126 242.321 451.398 241.851 451.398 241.851 cv
448.27 242.933 li
cp
.160784 .14902 .419608 rgb
f
457.302 242.646 mo
455.372 264.128 li
458.211 264.128 li
458.211 264.128 462.386 250.339 462.84 245.798 cv
463.294 241.256 460.368 241.851 460.368 241.851 cv
457.302 242.646 li
cp
f
454.577 221.074 mo
450.376 229.021 li
456.054 228.567 li
454.577 221.074 li
cp
.0980392 .345098 .858824 rgb
f
468.23 220.364 mo
475.554 230.923 li
475.892 231.647 475.632 232.801 474.872 233.052 cv
463.547 235.607 li
462.07 233.109 li
470.019 230.242 li
464.313 224.537 li
468.23 220.364 li
cp
f
446.459 264.128 mo
449.241 264.128 li
449.241 266.262 li
443.6 266.262 li
443.227 266.262 443.099 265.425 443.425 265.246 cv
446.459 264.128 li
cp
f
455.372 264.128 mo
458.153 264.128 li
458.153 266.262 li
452.512 266.262 li
452.14 266.262 452.012 265.425 452.338 265.246 cv
455.372 264.128 li
cp
f
gsave
467.464 239.694 mo
455.77 239.694 li
454.31 222.369 li
454.179 220.816 455.403 219.484 456.961 219.484 cv
466.272 219.484 li
467.83 219.484 469.055 220.816 468.924 222.369 cv
467.464 239.694 li
clp
461.861 233.226 mo
461.781 232.995 li
468.858 230.571 li
468.938 230.803 li
461.861 233.226 li
cp
.0666667 .133333 .337255 rgb
f
462.156 235.554 mo
462.135 235.309 li
470.681 234.394 li
470.701 234.638 li
462.156 235.554 li
cp
f
grestore
464.512 236.5 mo
446.258 236.5 li
446.258 234.954 li
464.512 234.954 li
464.512 236.5 li
cp
.701961 .890196 .937255 rgb
f
353.618 229.671 mo
353.618 238.878 359.73 246.342 367.27 246.342 cv
374.809 246.342 380.92 238.878 380.92 229.671 cv
380.92 220.464 374.809 213 367.27 213 cv
359.73 213 353.618 220.464 353.618 229.671 cv
cp
.0980392 .345098 .858824 rgb
f
362.71 266.262 mo
362.702 266.15 362.696 266.036 362.696 265.921 cv
362.696 263.414 364.729 261.379 367.237 261.379 cv
369.746 261.379 371.779 263.414 371.779 265.921 cv
371.779 266.036 371.773 266.15 371.765 266.262 cv
362.71 266.262 li
cp
f
367.096 266.262 mo
367.891 266.262 li
367.891 236.742 li
367.096 236.742 li
367.096 266.262 li
cp
f
356.724 245.954 mo
356.724 247.304 357.829 248.409 359.18 248.409 cv
375.359 248.409 li
376.71 248.409 377.814 247.304 377.814 245.954 cv
377.814 241.505 li
377.814 240.155 376.71 239.049 375.359 239.049 cv
359.18 239.049 li
357.829 239.049 356.724 240.155 356.724 241.505 cv
356.724 245.954 li
cp
f
377.063 239.74 mo
361.391 239.74 li
361.391 243.501 li
361.391 245.537 363.041 247.187 365.077 247.187 cv
377.063 247.187 li
379.099 247.187 380.749 245.537 380.749 243.501 cv
380.749 243.426 li
380.749 241.391 379.099 239.74 377.063 239.74 cv
cp
1 .392157 .372549 rgb
f
361.391 239.694 mo
373.085 239.694 li
374.545 222.369 li
374.676 220.816 373.451 219.484 371.894 219.484 cv
362.582 219.484 li
361.024 219.484 359.8 220.816 359.931 222.369 cv
361.391 239.694 li
cp
.160784 .14902 .419608 rgb
f
366.499 220.563 mo
368.316 220.563 li
368.881 220.563 369.338 220.047 369.338 219.412 cv
369.338 217.172 li
369.338 216.537 368.881 216.021 368.316 216.021 cv
366.499 216.021 li
365.936 216.021 365.478 216.537 365.478 217.172 cv
365.478 219.412 li
365.478 220.047 365.936 220.563 366.499 220.563 cv
cp
.968627 .584314 .552941 rgb
f
371.848 216.018 mo
371.118 218.487 369.054 218.109 366.584 217.379 cv
364.115 216.65 362.705 214.056 363.435 211.587 cv
364.164 209.118 366.758 207.708 369.227 208.438 cv
371.695 209.167 372.577 213.548 371.848 216.018 cv
cp
.988235 .658824 .619608 rgb
f
380.521 242.646 mo
382.452 264.128 li
379.613 264.128 li
379.613 264.128 375.071 250.139 374.617 245.598 cv
374.163 241.056 377.456 241.851 377.456 241.851 cv
380.521 242.646 li
cp
1 .392157 .372549 rgb
f
371.552 242.646 mo
373.482 264.128 li
370.644 264.128 li
370.644 264.128 366.103 250.139 365.648 245.598 cv
365.194 241.056 368.486 241.851 368.486 241.851 cv
371.552 242.646 li
cp
f
374.277 221.074 mo
378.478 229.021 li
372.801 228.567 li
374.277 221.074 li
cp
.160784 .14902 .419608 rgb
f
360.624 220.364 mo
353.301 230.923 li
352.962 231.647 353.223 232.801 353.981 233.052 cv
365.308 235.607 li
366.783 233.109 li
358.836 230.242 li
364.541 224.537 li
360.624 220.364 li
cp
f
382.395 264.128 mo
379.613 264.128 li
379.613 266.262 li
385.255 266.262 li
385.628 266.262 385.756 265.425 385.43 265.246 cv
382.395 264.128 li
cp
f
373.482 264.128 mo
370.7 264.128 li
370.7 266.262 li
376.342 266.262 li
376.715 266.262 376.843 265.425 376.517 265.246 cv
373.482 264.128 li
cp
f
gsave
361.391 239.694 mo
373.085 239.694 li
374.545 222.369 li
374.676 220.816 373.451 219.484 371.894 219.484 cv
362.582 219.484 li
361.024 219.484 359.8 220.816 359.931 222.369 cv
361.391 239.694 li
clp
366.992 233.226 mo
359.917 230.803 li
359.996 230.571 li
367.072 232.995 li
366.992 233.226 li
cp
1 .392157 .372549 rgb
f
366.281 235.317 mo
358.153 234.638 li
358.173 234.394 li
366.302 235.072 li
366.281 235.317 li
cp
f
grestore
364.342 236.5 mo
382.597 236.5 li
382.597 234.954 li
364.342 234.954 li
364.342 236.5 li
cp
.701961 .890196 .937255 rgb
f
463.591 237.685 mo
365.278 237.685 li
365.278 236.441 li
463.591 236.441 li
463.591 237.685 li
cp
.509804 .188235 .141176 rgb
f
365.732 266.185 mo
365.278 266.185 li
365.278 236.666 li
365.732 236.666 li
365.732 266.185 li
cp
f
463.59 266.185 mo
463.136 266.185 li
463.136 236.666 li
463.59 236.666 li
463.59 266.185 li
cp
f
463.36 234.998 mo
458.705 234.998 li
458.365 232.955 li
461.879 232.955 li
462.537 232.955 463.1 233.43 463.208 234.08 cv
463.36 234.998 li
cp
.968627 .584314 .552941 rgb
f
460.928 235.018 mo
446.271 235.018 li
444.26 225.943 li
458.917 225.943 li
460.928 235.018 li
cp
.701961 .890196 .937255 rgb
f
453.271 230.724 mo
453.271 231.257 452.84 231.689 452.307 231.689 cv
451.773 231.689 451.342 231.257 451.342 230.724 cv
451.342 230.191 451.773 229.759 452.307 229.759 cv
452.84 229.759 453.271 230.191 453.271 230.724 cv
cp
.305882 .407843 .498039 rgb
f
461.101 220.271 mo
462.917 220.271 li
463.481 220.271 463.938 219.755 463.938 219.12 cv
463.938 216.881 li
463.938 216.245 463.481 215.73 462.917 215.73 cv
461.101 215.73 li
460.536 215.73 460.078 216.245 460.078 216.881 cv
460.078 219.12 li
460.078 219.755 460.536 220.271 461.101 220.271 cv
cp
.968627 .584314 .552941 rgb
f
458.009 215.726 mo
458.738 218.196 460.804 217.818 463.272 217.087 cv
465.742 216.358 467.152 213.765 466.422 211.295 cv
465.692 208.827 463.1 207.417 460.63 208.146 cv
458.161 208.876 457.279 213.257 458.009 215.726 cv
cp
.988235 .658824 .619608 rgb
f
456.218 216.552 mo
456.218 218.356 457.68 219.817 459.482 219.817 cv
461.285 219.817 462.746 218.356 462.746 216.552 cv
462.746 214.75 461.285 213.289 459.482 213.289 cv
457.68 213.289 456.218 214.75 456.218 216.552 cv
cp
1 .392157 .372549 rgb
f
458.826 215.73 mo
460.195 215.73 li
460.476 215.73 460.703 215.502 460.703 215.222 cv
460.703 215.001 li
460.703 214.72 460.476 214.494 460.195 214.494 cv
458.826 214.494 li
458.546 214.494 458.318 214.72 458.318 215.001 cv
458.318 215.222 li
458.318 215.502 458.546 215.73 458.826 215.73 cv
cp
.988235 .658824 .619608 rgb
f
365.494 234.998 mo
370.148 234.998 li
370.489 232.955 li
366.976 232.955 li
366.316 232.955 365.755 233.43 365.646 234.08 cv
365.494 234.998 li
cp
.968627 .584314 .552941 rgb
f
367.926 235.018 mo
382.584 235.018 li
384.595 225.943 li
369.938 225.943 li
367.926 235.018 li
cp
.701961 .890196 .937255 rgb
f
375.583 230.724 mo
375.583 231.257 376.015 231.689 376.548 231.689 cv
377.081 231.689 377.513 231.257 377.513 230.724 cv
377.513 230.191 377.081 229.759 376.548 229.759 cv
376.015 229.759 375.583 230.191 375.583 230.724 cv
cp
.305882 .407843 .498039 rgb
f
411.958 208.962 mo
410.353 208.902 406.001 219.077 405.551 220.607 cv
405.101 222.138 404.92 234.369 405.37 234.414 cv
405.82 234.458 408.267 234.758 408.312 234.173 cv
408.356 233.588 409.077 222.513 409.167 221.837 cv
409.257 221.163 415.55 209.096 411.958 208.962 cv
cp
.741176 .945098 1 rgb
f
407.551 229.838 mo
421.674 233.522 li
421.574 264.003 li
418.786 264.003 li
418.786 264.003 416.55 247.405 415.755 238.735 cv
413.594 238.735 li
411.408 264.003 li
408.574 264.003 li
408.574 264.003 407.338 237.006 407.379 234.833 cv
407.305 234.48 407.551 229.838 407.551 229.838 cv
cp
.854902 .247059 .227451 rgb
f
407.551 229.838 mo
421.674 233.522 li
428.33 215.222 li
428.887 213.733 427.75 212.035 425.869 211.543 cv
414.624 208.611 li
412.742 208.12 410.921 209.048 410.68 210.62 cv
407.551 229.838 li
cp
.823529 .968627 1 rgb
f
419.455 211.789 mo
418.058 211.299 417.753 209.733 417.859 209.324 cv
418.581 206.556 li
418.745 205.929 419.666 206.226 420.223 206.371 cv
422.014 206.838 li
422.57 206.983 423.372 207.735 423.209 208.362 cv
422.634 210.569 li
422.528 210.973 421.124 212.373 419.455 211.789 cv
cp
.988235 .658824 .619608 rgb
f
420.555 208.824 mo
417.938 209.003 417.566 206.897 417.387 204.28 cv
417.207 201.663 419.184 199.396 421.8 199.216 cv
424.417 199.037 426.685 201.013 426.864 203.63 cv
427.044 206.247 423.172 208.644 420.555 208.824 cv
cp
.988235 .768627 .752941 rgb
f
421.612 263.962 mo
418.778 263.962 li
418.778 266.136 li
424.526 266.136 li
424.906 266.136 425.036 265.285 424.704 265.101 cv
421.612 263.962 li
cp
.0666667 .133333 .337255 rgb
f
411.408 263.962 mo
408.574 263.962 li
408.574 266.136 li
414.322 266.136 li
414.702 266.136 414.832 265.285 414.5 265.101 cv
411.408 263.962 li
cp
f
458.014 211.483 mo
457.402 211.687 456.278 211.046 456.753 209.622 cv
457.354 207.821 458.914 207.941 459.334 207.461 cv
459.755 206.981 459.694 205.12 461.556 204.94 cv
463.416 204.76 463.536 206.441 464.257 206.801 cv
464.977 207.161 466.478 205.721 468.038 207.341 cv
469.418 208.773 467.559 210.283 468.038 211.123 cv
468.519 211.963 469.659 212.744 469.179 214.365 cv
468.698 215.985 467.378 216.465 466.777 216.465 cv
466.178 216.465 465.277 216.105 465.277 215.745 cv
465.277 215.385 464.076 213.284 465.518 211.543 cv
466.287 210.613 465.397 209.622 464.196 209.922 cv
462.092 210.449 460.775 208.962 460.175 208.962 cv
459.574 208.962 458.914 211.183 458.014 211.483 cv
cp
1 .392157 .372549 rgb
f
363.592 215.084 mo
363.052 214.304 362.729 211.839 363.352 210.643 cv
364.132 209.142 365.032 208.482 366.773 208.001 cv
368.288 207.583 369.414 207.341 369.835 206.621 cv
370.255 205.9 369.955 204.94 370.135 204.94 cv
370.314 204.94 372.596 206.441 372.056 208.722 cv
371.763 209.959 371.575 210.643 369.895 211.603 cv
368.82 212.217 366.533 211.963 366.293 212.564 cv
366.053 213.164 367.073 213.824 367.253 214.184 cv
367.434 214.544 367.133 214.844 366.953 214.964 cv
366.773 215.084 365.873 214.304 364.973 214.245 cv
364.072 214.184 363.592 215.084 363.592 215.084 cv
cp
f
419.356 200.198 mo
418.196 201.192 418.276 204.04 418.637 205.24 cv
418.996 206.441 419.088 209.635 420.287 209.772 cv
423.438 210.132 425.869 210.042 426.59 208.962 cv
427.311 207.881 428.931 200.948 424.427 199.482 cv
420.745 198.284 420.197 199.478 419.356 200.198 cv
cp
.180392 .701961 .858824 rgb
f
427.445 212.473 mo
428.806 212.832 429.291 215.895 429.472 218.776 cv
429.651 221.658 429.201 225.259 429.472 225.709 cv
429.741 226.16 432.172 234.023 432.263 234.473 cv
432.353 234.923 429.291 235.554 429.021 235.284 cv
428.751 235.013 425.539 227.51 425.359 226.79 cv
425.18 226.07 424.384 220.802 424.609 217.111 cv
424.782 214.273 425.734 212.023 427.445 212.473 cv
cp
.741176 .945098 1 rgb
f
285.223 359.492 mo
197.276 359.492 li
194.059 359.492 191.452 356.957 191.452 353.83 cv
191.452 300.323 li
191.452 297.196 194.059 294.661 197.276 294.661 cv
285.223 294.661 li
288.44 294.661 291.047 297.196 291.047 300.323 cv
291.047 353.83 li
291.047 356.957 288.44 359.492 285.223 359.492 cv
cp
.701961 .890196 .937255 rgb
f
278.392 355.452 mo
201.333 355.452 li
198.425 355.452 196.067 353.233 196.067 350.496 cv
196.067 303.658 li
196.067 300.919 198.425 298.701 201.333 298.701 cv
278.392 298.701 li
281.3 298.701 283.658 300.919 283.658 303.658 cv
283.658 350.496 li
283.658 353.233 281.3 355.452 278.392 355.452 cv
cp
.380392 .701961 .858824 rgb
f
288.315 332.85 mo
288.315 333.389 287.828 333.826 287.226 333.826 cv
286.624 333.826 286.136 333.389 286.136 332.85 cv
286.136 321.5 li
286.136 320.962 286.624 320.525 287.226 320.525 cv
287.828 320.525 288.315 320.962 288.315 321.5 cv
288.315 332.85 li
cp
.176471 .501961 .666667 rgb
f
gsave
278.392 355.452 mo
201.333 355.452 li
198.425 355.452 196.067 353.233 196.067 350.496 cv
196.067 303.658 li
196.067 300.919 198.425 298.701 201.333 298.701 cv
278.392 298.701 li
281.3 298.701 283.658 300.919 283.658 303.658 cv
283.658 350.496 li
283.658 353.233 281.3 355.452 278.392 355.452 cv
clp
229.138 289.71 mo
225.968 291.975 221.214 302.615 221.214 310.312 cv
221.214 318.01 218.497 320.047 216.233 322.084 cv
215.006 323.189 229.296 325.987 242.947 325.906 cv
254.49 325.836 265.625 323.038 266.04 322.311 cv
266.945 320.727 260.833 317.784 261.059 308.275 cv
261.242 300.577 259.248 296.956 255.625 293.333 cv
252.003 289.71 229.138 289.71 229.138 289.71 cv
cp
1 .392157 .372549 rgb
f
253.475 386.607 mo
229.024 386.607 li
217.771 386.607 208.649 377.485 208.649 366.231 cv
208.649 354.685 li
208.649 343.432 217.771 334.31 229.024 334.31 cv
253.475 334.31 li
264.728 334.31 273.85 343.432 273.85 354.685 cv
273.85 366.231 li
273.85 377.485 264.728 386.607 253.475 386.607 cv
cp
.160784 .14902 .419608 rgb
f
235.676 328.633 mo
243.307 334.74 248.404 330.427 253.638 322.173 cv
259.857 312.368 259.894 302.683 252.263 296.577 cv
244.633 290.47 233.497 291.707 227.39 299.337 cv
221.283 306.967 228.045 322.527 235.676 328.633 cv
cp
.988235 .658824 .619608 rgb
f
grestore
250.249 334.565 mo
250.249 334.565 248.975 340.252 241.674 339.829 cv
234.339 339.402 233.184 334.225 233.184 334.225 cv
233.441 324.03 li
249.737 324.03 li
250.249 334.565 li
cp
.968627 .584314 .552941 rgb
f
227.156 316.991 mo
227.789 319.442 229.364 328.876 233.892 331.14 cv
238.419 333.405 246.588 334.955 250.588 331.508 cv
256.106 326.754 256.701 316.312 256.701 316.312 cv
256.531 311.897 225.798 311.727 227.156 316.991 cv
cp
1 .392157 .372549 rgb
f
234.627 318.01 mo
234.994 315.565 249.846 315.121 249.739 318.01 cv
249.569 322.594 234.118 321.406 234.627 318.01 cv
cp
.988235 .658824 .619608 rgb
f
239.887 324.038 mo
248.724 329.139 li
239.887 334.242 li
239.887 324.038 li
cp
1 1 1 rgb
f
217.025 384.06 mo
217.025 394.657 208.435 403.247 197.839 403.247 cv
187.242 403.247 178.652 394.657 178.652 384.06 cv
178.652 373.463 187.242 364.873 197.839 364.873 cv
208.435 364.873 217.025 373.463 217.025 384.06 cv
cp
.807843 .921569 .94902 rgb
f
210.566 384.06 mo
210.566 391.089 204.868 396.788 197.839 396.788 cv
190.809 396.788 185.111 391.089 185.111 384.06 cv
185.111 377.031 190.809 371.332 197.839 371.332 cv
204.868 371.332 210.566 377.031 210.566 384.06 cv
cp
.701961 .890196 .937255 rgb
f
209.047 384.06 mo
209.047 390.25 204.029 395.268 197.839 395.268 cv
191.648 395.268 186.63 390.25 186.63 384.06 cv
186.63 377.87 191.648 372.852 197.839 372.852 cv
204.029 372.852 209.047 377.87 209.047 384.06 cv
cp
1 1 1 rgb
f
206.767 384.06 mo
206.767 388.991 202.77 392.989 197.839 392.989 cv
192.908 392.989 188.91 388.991 188.91 384.06 cv
188.91 379.128 192.908 375.131 197.839 375.131 cv
202.77 375.131 206.767 379.128 206.767 384.06 cv
cp
.513726 .192157 .145098 rgb
f
207.352 377.369 mo
206.61 378.111 205.408 378.111 204.666 377.369 cv
203.924 376.626 203.924 375.424 204.666 374.682 cv
206.546 372.801 li
207.288 372.06 208.491 372.06 209.233 372.801 cv
209.975 373.543 209.975 374.747 209.233 375.488 cv
207.352 377.369 li
cp
1 1 1 rgb
f
258.974 369.177 mo
225.058 369.177 li
225.058 401.699 li
258.974 401.699 li
258.974 369.177 li
.513726 .192157 .145098 rgb
f
292.89 369.177 mo
258.974 369.177 li
258.974 401.699 li
292.89 401.699 li
292.89 369.177 li
f
260.244 401.05 mo
260.244 401.739 259.675 402.296 258.974 402.296 cv
258.272 402.296 257.704 401.739 257.704 401.05 cv
257.704 369.901 li
257.704 369.212 258.272 368.655 258.974 368.655 cv
259.675 368.655 260.244 369.212 260.244 369.901 cv
260.244 401.05 li
f
258.974 368.356 mo
226.104 368.356 li
226.104 400.728 li
258.974 400.728 li
258.974 368.356 li
.94902 .819608 .560784 rgb
f
291.844 368.356 mo
258.974 368.356 li
258.974 400.728 li
291.844 400.728 li
291.844 368.356 li
.909804 .752941 .47451 rgb
f
258.974 368.356 mo
226.104 368.356 li
226.104 400.728 li
258.974 400.728 li
258.974 368.356 li
.717647 .87451 .917647 rgb
f
291.844 368.356 mo
258.974 368.356 li
258.974 400.728 li
291.844 400.728 li
291.844 368.356 li
.635294 .8 .854902 rgb
f
256.509 372.54 mo
229.615 372.54 li
229.34 372.54 229.117 372.316 229.117 372.042 cv
229.117 371.766 229.34 371.543 229.615 371.543 cv
256.509 371.543 li
256.784 371.543 257.007 371.766 257.007 372.042 cv
257.007 372.316 256.784 372.54 256.509 372.54 cv
.866667 .941176 .960784 rgb
f
289.279 372.54 mo
262.385 372.54 li
262.11 372.54 261.888 372.316 261.888 372.042 cv
261.888 371.766 262.11 371.543 262.385 371.543 cv
289.279 371.543 li
289.554 371.543 289.777 371.766 289.777 372.042 cv
289.777 372.316 289.554 372.54 289.279 372.54 cv
.827451 .905882 .929412 rgb
f
289.279 375.727 mo
262.385 375.727 li
262.11 375.727 261.888 375.503 261.888 375.229 cv
261.888 374.954 262.11 374.731 262.385 374.731 cv
289.279 374.731 li
289.554 374.731 289.777 374.954 289.777 375.229 cv
289.777 375.503 289.554 375.727 289.279 375.727 cv
f
270.839 380.508 mo
262.05 380.508 li
261.961 380.508 261.888 380.285 261.888 380.01 cv
261.888 379.735 261.961 379.512 262.05 379.512 cv
270.839 379.512 li
270.929 379.512 271.001 379.735 271.001 380.01 cv
271.001 380.285 270.929 380.508 270.839 380.508 cv
f
256.509 375.129 mo
229.615 375.129 li
229.34 375.129 229.117 374.906 229.117 374.631 cv
229.117 374.356 229.34 374.133 229.615 374.133 cv
256.509 374.133 li
256.784 374.133 257.007 374.356 257.007 374.631 cv
257.007 374.906 256.784 375.129 256.509 375.129 cv
.866667 .941176 .960784 rgb
f
256.509 380.042 mo
229.615 380.042 li
229.34 380.042 229.117 379.82 229.117 379.544 cv
229.117 379.27 229.34 379.046 229.615 379.046 cv
256.509 379.046 li
256.784 379.046 257.007 379.27 257.007 379.544 cv
257.007 379.82 256.784 380.042 256.509 380.042 cv
f
256.509 391.796 mo
229.615 391.796 li
229.34 391.796 229.117 391.574 229.117 391.298 cv
229.117 391.023 229.34 390.8 229.615 390.8 cv
256.509 390.8 li
256.784 390.8 257.007 391.023 257.007 391.298 cv
257.007 391.574 256.784 391.796 256.509 391.796 cv
f
256.509 393.988 mo
229.615 393.988 li
229.34 393.988 229.117 393.765 229.117 393.49 cv
229.117 393.214 229.34 392.992 229.615 392.992 cv
256.509 392.992 li
256.784 392.992 257.007 393.214 257.007 393.49 cv
257.007 393.765 256.784 393.988 256.509 393.988 cv
f
254.381 404.784 mo
252.545 403.57 245.666 407.11 243.898 406.612 cv
242.13 406.114 242.898 404.264 242.898 404.264 cv
246.483 397.597 li
247.604 395.513 246.822 392.917 244.739 391.796 cv
239.036 388.73 li
232.156 385.031 227.323 386.117 223.624 392.997 cv
217.483 409.735 li
217.111 410.755 217.545 411.894 218.502 412.409 cv
227.198 417.084 li
229.596 418.374 232.521 418.206 234.743 416.633 cv
235.639 416 236.502 415.423 237.05 415.143 cv
240.372 413.439 246.505 411.858 251.268 410.574 cv
256.03 409.289 256.216 405.997 254.381 404.784 cv
cp
.968627 .584314 .552941 rgb
f
227.903 393.398 mo
227.45 394.841 226.833 399.213 225.679 398.851 cv
224.992 395.356 li
223.837 394.994 222.296 396.91 222.749 395.466 cv
228.939 375.455 li
229.392 374.01 230.695 373.134 231.85 373.497 cv
233.004 373.859 233.573 375.323 233.121 376.766 cv
227.903 393.398 li
cp
f
235.537 390.572 mo
234.947 391.964 233.566 392.711 232.452 392.24 cv
231.337 391.768 230.911 390.256 231.501 388.864 cv
238.295 372.81 li
238.884 371.417 240.266 370.669 241.38 371.142 cv
242.495 371.614 242.92 373.125 242.331 374.518 cv
235.537 390.572 li
cp
f
244.885 399.227 mo
243.901 400.376 242.358 400.669 241.439 399.882 cv
240.52 399.095 240.572 397.526 241.556 396.376 cv
252.895 383.136 li
253.878 381.988 255.421 381.694 256.341 382.481 cv
257.26 383.268 257.207 384.838 256.223 385.987 cv
244.885 399.227 li
cp
f
242.395 391.525 mo
241.663 392.849 240.21 393.448 239.151 392.863 cv
238.092 392.277 237.827 390.729 238.559 389.405 cv
246.991 374.149 li
247.723 372.826 249.175 372.226 250.234 372.812 cv
251.293 373.397 251.559 374.946 250.827 376.269 cv
242.395 391.525 li
cp
f
232.269 376.497 mo
231.93 377.126 231.145 377.363 230.515 377.024 cv
229.885 376.686 229.649 375.901 229.988 375.271 cv
230.327 374.641 231.112 374.405 231.742 374.744 cv
232.372 375.082 232.608 375.867 232.269 376.497 cv
cp
.94902 .517647 .494118 rgb
f
241.517 374.231 mo
241.178 374.861 240.393 375.097 239.763 374.758 cv
239.133 374.419 238.897 373.634 239.235 373.004 cv
239.574 372.375 240.359 372.139 240.989 372.477 cv
241.619 372.816 241.855 373.601 241.517 374.231 cv
cp
f
250.16 375.825 mo
249.821 376.455 249.036 376.691 248.406 376.352 cv
247.776 376.013 247.54 375.228 247.878 374.598 cv
248.217 373.968 249.002 373.732 249.632 374.071 cv
250.262 374.41 250.498 375.195 250.16 375.825 cv
cp
f
255.812 385.083 mo
255.473 385.713 254.688 385.95 254.058 385.611 cv
253.428 385.272 253.192 384.487 253.531 383.857 cv
253.87 383.227 254.655 382.992 255.285 383.33 cv
255.915 383.668 256.15 384.454 255.812 385.083 cv
cp
f
287.437 384.243 mo
290.438 379.343 302.149 371.275 302.079 373.984 cv
301.78 385.488 309.802 388.192 309.433 390.045 cv
309.064 391.899 304.252 399.933 301.856 400.035 cv
299.459 400.135 284.771 388.594 287.437 384.243 cv
cp
.968627 .584314 .552941 rgb
f
293.812 392.311 mo
290.226 392.51 280.115 388.177 279.368 385.488 cv
278.031 380.674 276.679 376.275 279.269 375.876 cv
281.858 375.478 283.552 379.612 283.751 381.802 cv
283.95 383.994 290.226 384.641 290.226 384.641 cv
293.812 392.311 li
cp
f
288.632 382.848 mo
289.628 380.259 291.072 376.524 289.18 371.842 cv
287.295 367.181 284.896 372.091 282.307 372.291 cv
279.717 372.49 279.318 367.758 284.697 365.965 cv
290.076 364.172 291.62 364.77 293.612 367.559 cv
295.604 370.348 296.999 379.064 296.999 379.064 cv
288.632 382.848 li
cp
f
301.083 377.968 mo
300.684 375.777 298.864 371.104 298.144 367.061 cv
297.497 363.425 295.405 362.479 288.383 362.678 cv
283.021 362.831 285.395 366.264 286.789 366.264 cv
288.184 366.264 293.264 365.716 294.16 368.605 cv
294.937 371.107 295.903 380.11 295.903 380.11 cv
301.083 377.968 li
cp
f
300.883 381.455 mo
300.883 378.666 303.174 371.344 302.377 369.352 cv
301.581 367.36 298.642 362.081 296.849 363.027 cv
295.44 363.771 297.995 369.352 297.995 371.145 cv
297.995 372.938 296.999 379.313 296.999 379.313 cv
300.883 381.455 li
cp
f
302.423 358.125 mo
271.851 377.616 li
273.645 380.429 li
304.217 360.938 li
302.423 358.125 li
cp
.854902 .247059 .227451 rgb
f
271.851 377.616 mo
273.645 380.429 li
271.115 380.453 li
270.854 380.456 270.678 380.185 270.787 379.947 cv
271.851 377.616 li
cp
.380392 .701961 .858824 rgb
f
280.876 379.183 mo
280.538 379.813 279.753 380.049 279.123 379.71 cv
278.493 379.372 278.257 378.586 278.596 377.957 cv
278.934 377.327 279.719 377.09 280.349 377.429 cv
280.979 377.768 281.215 378.553 280.876 379.183 cv
cp
.94902 .517647 .494118 rgb
f
282.122 370.127 mo
281.783 370.757 281.228 371.117 280.881 370.93 cv
280.535 370.745 280.528 370.083 280.867 369.453 cv
281.206 368.823 281.761 368.463 282.107 368.65 cv
282.454 368.835 282.46 369.498 282.122 370.127 cv
cp
f
253.467 408.605 mo
252.507 408.932 251.554 408.683 251.338 408.049 cv
251.122 407.416 251.725 406.637 252.685 406.31 cv
253.645 405.983 254.598 406.231 254.813 406.865 cv
255.029 407.499 254.426 408.278 253.467 408.605 cv
cp
f
286.77 364.566 mo
286.055 364.582 285.468 364.275 285.459 363.882 cv
285.451 363.489 286.024 363.158 286.739 363.142 cv
287.454 363.126 288.041 363.433 288.049 363.827 cv
288.057 364.219 287.484 364.551 286.77 364.566 cv
cp
f
304.716 359.739 mo
304.716 360.699 303.937 361.477 302.977 361.477 cv
302.017 361.477 301.239 360.699 301.239 359.739 cv
301.239 358.779 302.017 358 302.977 358 cv
303.937 358 304.716 358.779 304.716 359.739 cv
cp
.176471 .501961 .666667 rgb
f
640.005 195.47 mo
640.005 196.664 637.844 202.408 637.844 202.408 cv
637.844 202.408 635.683 196.664 635.683 195.47 cv
635.683 194.276 636.65 193.309 637.844 193.309 cv
639.037 193.309 640.005 194.276 640.005 195.47 cv
cp
.823529 .968627 1 rgb
f
628.278 197.488 mo
628.875 198.522 629.876 204.577 629.876 204.577 cv
629.876 204.577 625.132 200.683 624.535 199.649 cv
623.938 198.616 624.293 197.294 625.326 196.697 cv
626.36 196.101 627.682 196.455 628.278 197.488 cv
cp
f
619.132 205.1 mo
620.166 205.696 624.061 210.44 624.061 210.44 cv
624.061 210.44 618.005 209.439 616.972 208.842 cv
615.938 208.246 615.584 206.924 616.181 205.891 cv
616.777 204.857 618.099 204.503 619.132 205.1 cv
cp
f
615.018 216.264 mo
616.211 216.264 621.955 218.425 621.955 218.425 cv
621.955 218.425 616.211 220.586 615.018 220.586 cv
613.823 220.586 612.856 219.619 612.856 218.425 cv
612.856 217.232 613.823 216.264 615.018 216.264 cv
cp
.94902 .819608 .560784 rgb
f
617.035 227.991 mo
618.069 227.394 624.124 226.393 624.124 226.393 cv
624.124 226.393 620.23 231.136 619.196 231.733 cv
618.163 232.33 616.842 231.976 616.244 230.942 cv
615.647 229.909 616.002 228.587 617.035 227.991 cv
cp
.823529 .968627 1 rgb
f
624.646 237.136 mo
625.243 236.103 629.987 232.208 629.987 232.208 cv
629.987 232.208 628.986 238.264 628.39 239.297 cv
627.793 240.331 626.472 240.685 625.438 240.088 cv
624.404 239.492 624.05 238.17 624.646 237.136 cv
cp
f
635.812 241.251 mo
635.812 240.058 637.973 234.314 637.973 234.314 cv
637.973 234.314 640.133 240.058 640.133 241.251 cv
640.133 242.445 639.166 243.413 637.973 243.413 cv
636.778 243.413 635.812 242.445 635.812 241.251 cv
cp
f
647.538 239.233 mo
646.94 238.2 645.94 232.144 645.94 232.144 cv
645.94 232.144 650.684 236.039 651.28 237.073 cv
651.877 238.106 651.523 239.427 650.489 240.024 cv
649.456 240.621 648.135 240.267 647.538 239.233 cv
cp
f
656.684 231.622 mo
655.65 231.025 651.756 226.282 651.756 226.282 cv
651.756 226.282 657.812 227.283 658.845 227.879 cv
659.878 228.476 660.232 229.797 659.636 230.832 cv
659.039 231.865 657.717 232.219 656.684 231.622 cv
cp
f
658.78 208.731 mo
657.747 209.328 651.691 210.329 651.691 210.329 cv
651.691 210.329 655.586 205.585 656.619 204.988 cv
657.653 204.392 658.975 204.746 659.571 205.779 cv
660.168 206.813 659.814 208.134 658.78 208.731 cv
cp
f
651.169 199.585 mo
650.572 200.619 645.829 204.513 645.829 204.513 cv
645.829 204.513 646.83 198.458 647.427 197.424 cv
648.023 196.391 649.345 196.037 650.378 196.633 cv
651.412 197.23 651.766 198.551 651.169 199.585 cv
cp
f
674.76 201.82 mo
674.4 201.82 li
674.4 197.678 li
674.4 196.294 674.272 195.264 672.622 194.604 cv
672.756 194.27 li
674.612 195.012 674.76 196.201 674.76 197.678 cv
674.76 201.82 li
cp
.0980392 .345098 .858824 rgb
f
642.466 222.709 mo
641.506 222.83 639.345 221.389 639.705 219.348 cv
640.064 217.307 642.826 220.188 642.826 220.188 cv
642.466 222.709 li
cp
.992157 .658824 .631373 rgb
f
672.325 227.371 mo
658.267 227.371 li
658.642 257.404 li
661.326 257.404 li
661.326 257.404 663.359 242.295 664.125 233.945 cv
665.986 233.945 li
666.546 257.404 li
669.23 257.404 li
669.23 257.404 672.399 233.849 672.314 229.307 cv
672.387 228.968 672.325 227.371 672.325 227.371 cv
cp
1 .392157 .372549 rgb
f
672.325 227.371 mo
658.267 227.371 li
656.512 208.698 li
656.354 207.174 657.826 205.867 659.699 205.867 cv
670.893 205.867 li
672.765 205.867 674.237 207.174 674.08 208.698 cv
672.325 227.371 li
cp
.509804 .188235 .141176 rgb
f
665.228 207.845 mo
667.718 207.845 667.703 206.152 667.703 205.745 cv
667.703 202.99 li
667.703 202.366 666.772 202.418 666.219 202.418 cv
664.437 202.418 li
663.882 202.418 662.951 202.924 662.951 203.548 cv
662.951 205.745 li
662.951 206.147 663.213 207.845 665.228 207.845 cv
cp
.968627 .584314 .552941 rgb
f
661.402 202.416 mo
662.119 204.838 664.145 204.467 666.568 203.751 cv
668.991 203.035 670.375 200.49 669.659 198.067 cv
668.942 195.645 666.398 194.261 663.975 194.977 cv
661.552 195.693 660.687 199.992 661.402 202.416 cv
cp
.992157 .658824 .631373 rgb
f
gsave
661.402 202.415 mo
662.119 204.838 664.145 204.467 666.568 203.751 cv
668.991 203.035 670.375 200.49 669.659 198.067 cv
668.942 195.644 666.398 194.261 663.975 194.977 cv
661.552 195.693 660.686 199.992 661.402 202.415 cv
clp
666.441 197.237 mo
666.441 197.237 666.441 198.853 666.664 198.853 cv
666.888 198.853 667.723 198.519 668.336 199.299 cv
668.948 200.079 668.28 200.858 667.556 201.026 cv
666.832 201.193 667.333 203.087 669.06 202.752 cv
670.787 202.418 671.399 198.352 670.509 196.792 cv
669.617 195.232 666.776 193.505 665.773 193.616 cv
664.771 193.728 658.158 197.288 658.158 197.288 cv
666.441 197.237 li
cp
.909804 .752941 .47451 rgb
f
grestore
672.922 206.48 mo
672.922 206.48 679.422 213.413 681.715 215.597 cv
682.98 216.802 681.715 217.706 680.992 218.609 cv
678.987 221.115 672.497 225.597 672.497 225.597 cv
672.859 221.802 li
676.774 217.223 li
676.774 217.223 671.267 212.97 671.083 212.664 cv
670.582 211.828 671 208.151 671 208.151 cv
672.922 206.48 li
cp
.509804 .188235 .141176 rgb
f
666.626 257.366 mo
669.356 257.366 li
669.356 259.459 li
663.819 259.459 li
663.454 259.459 663.329 258.638 663.648 258.461 cv
666.626 257.366 li
cp
.0666667 .133333 .337255 rgb
f
671.413 225.417 mo
670.723 225.358 670.3 224.668 670.371 223.98 cv
670.6 221.772 li
670.624 221.349 671.291 221.477 671.714 221.5 cv
672.859 221.802 li
672.497 225.597 li
672.497 225.597 671.687 225.44 671.413 225.417 cv
cp
.992157 .658824 .631373 rgb
f
656.881 207.231 mo
655.685 209.298 652.374 217.963 651.83 218.507 cv
651.286 219.051 643.348 219.708 642.586 219.708 cv
641.824 219.708 642.14 222.274 642.466 222.709 cv
642.792 223.145 653.631 223.669 655.071 222.349 cv
655.861 221.625 659.821 215.082 660.474 212.145 cv
661.127 209.208 656.881 207.231 656.881 207.231 cv
cp
.509804 .188235 .141176 rgb
f
639.254 229.913 mo
637.922 228.988 li
636.562 229.913 li
636.562 220.123 li
639.254 220.123 li
639.254 229.913 li
cp
.054902 .592157 .803922 rgb
f
621.617 217.022 mo
622.597 216.042 627.492 211.963 628.471 213.269 cv
629.45 214.575 626.023 215.716 626.35 217.837 cv
626.676 219.959 629.123 218.98 631.734 218.98 cv
634.345 218.98 636.956 219.469 635.324 222.081 cv
633.692 224.691 621.943 223.549 621.943 223.549 cv
621.617 217.022 li
cp
.992157 .658824 .631373 rgb
f
578.703 254.225 mo
570.544 254.225 li
570.544 237.582 li
578.703 237.582 li
578.703 254.225 li
cp
.164706 .156863 .45098 rgb
f
534.477 239.54 mo
605.632 239.54 li
607.521 239.54 609.053 238.079 609.053 236.277 cv
609.053 170.028 li
609.053 168.226 607.521 166.764 605.632 166.764 cv
534.477 166.764 li
532.588 166.764 531.056 168.226 531.056 170.028 cv
531.056 236.277 li
531.056 238.079 532.588 239.54 534.477 239.54 cv
cp
f
658.604 257.366 mo
661.334 257.366 li
661.334 259.459 li
655.798 259.459 li
655.433 259.459 655.307 258.638 655.627 258.461 cv
658.604 257.366 li
cp
.0666667 .133333 .337255 rgb
f
538.394 239.54 mo
609.549 239.54 li
611.438 239.54 612.97 238.079 612.97 236.277 cv
612.97 170.028 li
612.97 168.226 611.438 166.764 609.549 166.764 cv
538.394 166.764 li
536.504 166.764 534.973 168.226 534.973 170.028 cv
534.973 236.277 li
534.973 238.079 536.504 239.54 538.394 239.54 cv
cp
.0980392 .345098 .858824 rgb
f
544.273 235.95 mo
606.279 235.95 li
607.991 235.95 609.38 234.562 609.38 232.85 cv
609.38 173.455 li
609.38 171.742 607.991 170.354 606.279 170.354 cv
544.273 170.354 li
542.561 170.354 541.173 171.742 541.173 173.455 cv
541.173 232.85 li
541.173 234.562 542.561 235.95 544.273 235.95 cv
cp
.701961 .890196 .937255 rgb
f
gsave
544.273 235.95 mo
606.279 235.95 li
607.991 235.95 609.38 234.562 609.38 232.85 cv
609.38 173.455 li
609.38 171.742 607.991 170.354 606.279 170.354 cv
544.273 170.354 li
542.561 170.354 541.173 171.742 541.173 173.455 cv
541.173 232.85 li
541.173 234.562 542.561 235.95 544.273 235.95 cv
clp
588.982 208.7 mo
590.94 208.863 597.794 209.189 598.773 220.612 cv
599.752 232.034 599.752 244.109 599.752 244.109 cv
586.698 246.067 li
588.982 208.7 li
cp
.776471 .133333 .133333 rgb
f
584.577 250.799 mo
566.791 250.799 li
560.753 250.799 555.858 245.904 555.858 239.867 cv
555.858 218.491 li
555.858 212.453 560.753 207.558 566.791 207.558 cv
584.577 207.558 li
590.615 207.558 595.51 212.453 595.51 218.491 cv
595.51 239.867 li
595.51 245.904 590.615 250.799 584.577 250.799 cv
cp
.854902 .247059 .227451 rgb
f
grestore
568.752 252.92 mo
584.73 252.92 li
586.264 252.92 587.507 253.957 587.507 255.235 cv
587.507 257.145 li
587.507 258.423 586.264 259.459 584.73 259.459 cv
568.752 259.459 li
567.219 259.459 565.976 258.423 565.976 257.145 cv
565.976 255.235 li
565.976 253.957 567.219 252.92 568.752 252.92 cv
cp
.0980392 .345098 .858824 rgb
f
581.313 254.225 mo
573.155 254.225 li
573.155 237.582 li
581.313 237.582 li
581.313 254.225 li
cp
f
582.197 209.026 mo
582.197 209.026 581.427 211.148 577.768 210.985 cv
574.685 210.847 572.761 209.026 572.761 209.026 cv
572.761 197.278 li
582.197 197.278 li
582.197 209.026 li
cp
.968627 .584314 .552941 rgb
f
574.624 204.066 mo
580.181 208.024 583.868 203.861 587.826 198.305 cv
591.783 192.749 590.487 185.036 584.931 181.079 cv
579.374 177.122 571.662 178.417 567.705 183.974 cv
563.747 189.53 569.067 200.109 574.624 204.066 cv
cp
.992157 .658824 .631373 rgb
f
571.197 181.776 mo
571.197 184.387 584.577 192.872 590.125 188.956 cv
595.673 185.04 594.367 176.881 583.925 175.902 cv
573.481 174.923 571.197 181.776 571.197 181.776 cv
cp
1 .392157 .372549 rgb
f
568.912 196.462 mo
567.607 196.136 561.08 187.977 566.628 182.429 cv
572.176 176.881 575.113 179.166 576.092 182.755 cv
577.071 186.345 572.013 185.366 569.238 189.119 cv
567.45 191.539 568.912 196.462 568.912 196.462 cv
cp
f
560.591 213.758 mo
562.013 211.117 564.996 209.353 571.033 212.126 cv
577.071 214.901 591.431 218.328 593.552 218.491 cv
595.673 218.654 621.78 214.411 622.597 215.39 cv
623.412 216.37 624.065 224.854 622.923 225.017 cv
621.78 225.18 597.631 230.076 591.431 229.586 cv
585.229 229.097 573.808 226.486 566.302 222.733 cv
558.796 218.98 559.448 215.879 560.591 213.758 cv
cp
.917647 .286275 .286275 rgb
f
644.625 220.123 mo
627.002 220.123 li
626.191 220.123 625.533 219.464 625.533 218.654 cv
625.533 215.879 li
625.533 215.069 626.191 214.411 627.002 214.411 cv
644.625 214.411 li
645.437 214.411 646.094 215.069 646.094 215.879 cv
646.094 218.654 li
646.094 219.464 645.437 220.123 644.625 220.123 cv
cp
.831373 .894118 .909804 rgb
f
639.254 220.149 mo
636.562 220.149 li
636.562 214.411 li
639.254 214.411 li
639.254 220.149 li
cp
.0470588 .352941 .603922 rgb
f
646.257 218.985 mo
646.257 219.628 645.735 220.149 645.093 220.149 cv
644.449 220.149 643.928 219.628 643.928 218.985 cv
643.928 215.576 li
643.928 214.932 644.449 214.411 645.093 214.411 cv
645.735 214.411 646.257 214.932 646.257 215.576 cv
646.257 218.985 li
cp
.678431 .764706 .788235 rgb
f
671.339 194.167 mo
662.064 191.736 li
662.501 195.892 li
669.628 197.588 li
671.339 194.167 li
cp
.160784 .14902 .419608 rgb
f
666.252 195.742 mo
660.219 191.511 li
667.872 190.07 li
673.814 194.842 li
666.252 195.742 li
cp
.0980392 .345098 .858824 rgb
f
673.462 203.467 mo
674.58 200.985 li
675.698 203.467 li
673.462 203.467 li
cp
.160784 .14902 .419608 rgb
f
90.8657 234.741 mo
87.5024 229.695 79.3037 229.065 83.0879 220.656 cv
86.8716 212.248 71.1055 210.355 75.73 198.163 cv
80.355 185.97 70.895 183.237 71.3159 173.567 cv
71.7363 163.897 76.3608 160.534 84.3491 161.584 cv
89.1836 162.221 94.5649 160.547 99.0645 157.591 cv
106.422 152.755 115.251 157.38 119.035 164.528 cv
122.819 171.675 119.035 185.129 114.831 188.072 cv
110.626 191.015 101.644 196.375 106.001 202.577 cv
111.467 210.355 115.041 219.184 107.684 224.019 cv
100.03 229.049 99.0645 236.001 99.0645 236.001 cv
90.8657 234.741 li
cp
.635294 .8 .854902 rgb
f
95.4604 238.945 mo
95.1006 238.945 li
95.1006 238.196 95.4458 236.452 95.9238 234.039 cv
97.2876 227.152 99.8271 214.333 97.0107 208.542 cv
93.271 200.854 91.9302 188.675 96.8115 181.247 cv
101.611 173.943 108.148 169.468 108.213 169.424 cv
108.415 169.722 li
108.351 169.766 101.871 174.203 97.1128 181.444 cv
92.3037 188.762 93.6382 200.786 97.334 208.384 cv
100.204 214.283 97.7456 226.694 96.2769 234.109 cv
95.8208 236.412 95.4604 238.231 95.4604 238.945 cv
cp
1 1 1 rgb
f
93.6519 236.3 mo
93.6333 236.267 91.7217 232.827 89.2227 224.704 cv
87.3315 218.558 87.9409 215.279 88.7837 210.741 cv
89.0659 209.222 89.3857 207.501 89.6362 205.499 cv
91.4751 190.784 83.4585 181.787 80.0352 177.945 cv
79.7998 177.681 li
80.0693 177.441 li
80.3042 177.706 li
83.7598 181.584 91.853 190.667 89.9937 205.543 cv
89.7422 207.557 89.4214 209.283 89.1382 210.807 cv
88.3047 215.294 87.7021 218.538 89.5664 224.597 cv
92.0522 232.676 93.9473 236.09 93.9658 236.124 cv
93.6519 236.3 li
cp
f
97.9824 238.119 mo
97.6235 238.089 li
98.0649 232.574 98.9893 229.288 101.427 224.568 cv
101.618 224.198 101.816 223.823 102.016 223.442 cv
104.458 218.806 107.227 213.551 103.539 207.932 cv
100.219 202.873 99.4355 198.148 101.21 193.889 cv
101.543 194.028 li
99.8169 198.17 100.589 202.781 103.839 207.734 cv
107.645 213.531 104.701 219.12 102.335 223.61 cv
102.135 223.99 101.938 224.364 101.747 224.733 cv
99.3345 229.405 98.4194 232.657 97.9824 238.119 cv
cp
f
109.085 210.496 mo
114.431 182.928 li
129.826 182.887 li
122.694 210.376 li
109.085 210.496 li
cp
.607843 .654902 .658824 rgb
f
108.567 207.268 mo
114.2 183.938 li
127.465 183.781 li
120.592 210.376 li
108.567 207.268 li
cp
.686275 .72549 .729412 rgb
f
109.365 208.673 mo
114.978 185.009 li
126.106 185.021 li
120.175 207.972 li
109.365 208.673 li
cp
.168627 .47451 .901961 rgb
f
77.4741 205.791 mo
78.6733 205.871 81.4761 206.571 81.4761 207.833 cv
81.4761 209.094 80.625 210.444 80.2095 210.399 cv
79.7944 210.355 77.0615 211.056 76.0454 210.145 cv
75.0293 209.234 77.4741 205.791 77.4741 205.791 cv
cp
.968627 .584314 .552941 rgb
f
122.694 210.496 mo
93.2485 210.496 li
93.2485 207.412 li
121.417 207.272 li
122.694 210.496 li
cp
.607843 .654902 .658824 rgb
f
19.2886 198.812 mo
19.2886 214.418 29.6484 227.071 42.4277 227.071 cv
55.2075 227.071 65.5674 214.418 65.5674 198.812 cv
65.5674 183.205 55.2075 170.553 42.4277 170.553 cv
29.6484 170.553 19.2886 183.205 19.2886 198.812 cv
cp
1 .792157 .792157 rgb
f
34.6997 260.835 mo
34.6855 260.645 34.6758 260.453 34.6758 260.258 cv
34.6758 256.006 38.1226 252.56 42.374 252.56 cv
46.6255 252.56 50.0723 256.006 50.0723 260.258 cv
50.0723 260.453 50.0625 260.645 50.0483 260.835 cv
34.6997 260.835 li
cp
f
42.1333 260.835 mo
43.4805 260.835 li
43.4805 210.796 li
42.1333 210.796 li
42.1333 260.835 li
cp
f
24.5527 226.411 mo
24.5527 228.7 26.4258 230.574 28.7153 230.574 cv
56.1406 230.574 li
58.4302 230.574 60.3032 228.7 60.3032 226.411 cv
60.3032 218.872 li
60.3032 216.582 58.4302 214.708 56.1406 214.708 cv
28.7153 214.708 li
26.4258 214.708 24.5527 216.582 24.5527 218.872 cv
24.5527 226.411 li
cp
f
59.0278 215.879 mo
32.4624 215.879 li
32.4624 222.254 li
32.4624 225.706 35.2598 228.502 38.7109 228.502 cv
59.0278 228.502 li
62.479 228.502 65.2764 225.706 65.2764 222.254 cv
65.2764 222.128 li
65.2764 218.677 62.479 215.879 59.0278 215.879 cv
cp
.513726 .192157 .145098 rgb
f
51.5552 183.237 mo
47.1162 186.538 55.7593 205.625 57.3364 206.571 cv
58.9126 207.517 74.7842 210.25 76.0454 210.145 cv
77.3066 210.04 78.1475 205.835 77.4121 205.521 cv
76.6763 205.205 62.5918 203.208 61.7505 202.052 cv
60.9097 200.896 55.6543 180.189 51.5552 183.237 cv
cp
0 .52549 .709804 rgb
f
32.4624 215.801 mo
52.2856 215.801 li
54.7603 186.433 li
54.9819 183.801 52.9063 181.543 50.2661 181.543 cv
34.4819 181.543 li
31.8418 181.543 29.7661 183.801 29.9878 186.433 cv
32.4624 215.801 li
cp
.0666667 .580392 .784314 rgb
f
41.123 183.372 mo
44.2021 183.372 li
45.1587 183.372 45.9346 182.498 45.9346 181.42 cv
45.9346 177.625 li
45.9346 176.547 45.1587 175.673 44.2021 175.673 cv
41.123 175.673 li
40.1665 175.673 39.3906 176.547 39.3906 177.625 cv
39.3906 181.42 li
39.3906 182.498 40.1665 183.372 41.123 183.372 cv
cp
.968627 .584314 .552941 rgb
f
49.1123 178.154 mo
46.6216 181.738 43.501 180.029 39.9175 177.539 cv
36.3335 175.048 35.4468 170.124 37.9375 166.54 cv
40.4282 162.956 45.3525 162.069 48.9365 164.56 cv
52.5205 167.05 51.603 174.57 49.1123 178.154 cv
cp
.988235 .658824 .619608 rgb
f
gsave
49.1123 178.154 mo
46.6217 181.738 43.5009 180.029 39.9175 177.539 cv
36.3336 175.048 35.4468 170.124 37.9374 166.539 cv
40.4282 162.956 45.3526 162.069 48.9365 164.56 cv
52.5204 167.05 51.6031 174.57 49.1123 178.154 cv
clp
43.6636 166.927 mo
43.6636 166.927 42.7856 169.576 42.4204 169.455 cv
42.0552 169.333 40.8662 168.332 39.438 169.277 cv
38.0093 170.223 38.6816 171.865 39.7783 172.533 cv
40.875 173.2 39.0239 176.034 36.374 174.547 cv
33.7236 173.061 34.9287 166.06 37.2373 163.986 cv
39.5464 161.913 45.1436 160.625 46.7271 161.353 cv
48.3105 162.08 60.8398 170.904 60.8398 170.904 cv
43.6636 166.927 li
cp
1 .392157 .372549 rgb
f
grestore
64.8916 220.805 mo
68.1631 257.219 li
63.3521 257.219 li
63.3521 257.219 55.6538 233.506 54.8838 225.808 cv
54.1138 218.11 59.6953 219.458 59.6953 219.458 cv
64.8916 220.805 li
cp
.513726 .192157 .145098 rgb
f
49.6875 220.805 mo
52.959 257.219 li
48.1475 257.219 li
48.1475 257.219 40.4492 233.506 39.6797 225.808 cv
38.9097 218.11 44.4912 219.458 44.4912 219.458 cv
49.6875 220.805 li
cp
f
68.0669 257.219 mo
63.3521 257.219 li
63.3521 260.835 li
72.915 260.835 li
73.5464 260.835 73.7632 259.417 73.2109 259.113 cv
68.0669 257.219 li
cp
1 .392157 .372549 rgb
f
52.959 257.219 mo
48.2441 257.219 li
48.2441 260.835 li
57.8071 260.835 li
58.4385 260.835 58.6553 259.417 58.1025 259.113 cv
52.959 257.219 li
cp
f
126.183 212.395 mo
45.4858 212.395 li
45.4858 210.286 li
126.183 210.286 li
126.183 212.395 li
cp
.054902 .588235 .823529 rgb
f
46.2554 260.706 mo
45.4858 260.706 li
45.4858 210.667 li
46.2554 210.667 li
46.2554 260.706 li
cp
f
126.162 260.706 mo
125.392 260.706 li
125.392 210.667 li
126.162 210.667 li
126.162 260.706 li
cp
f
gsave
32.4624 215.801 mo
52.2857 215.801 li
54.7602 186.433 li
54.982 183.801 52.9062 181.543 50.2661 181.543 cv
34.4819 181.543 li
31.8418 181.543 29.7662 183.801 29.9878 186.433 cv
32.4624 215.801 li
clp
48.9546 182.996 mo
48.9546 186.598 46.0347 189.518 42.4331 189.518 cv
38.8315 189.518 35.9116 186.598 35.9116 182.996 cv
35.9116 179.395 38.8315 176.475 42.4331 176.475 cv
46.0347 176.475 48.9546 179.395 48.9546 182.996 cv
cp
.968627 .584314 .552941 rgb
f
grestore
79.1689 207.486 mo
78.2329 207.486 77.4741 206.727 77.4741 205.791 cv
77.4741 204.855 78.2329 204.096 79.1689 204.096 cv
80.105 204.096 80.8638 204.855 80.8638 205.791 cv
80.8638 206.727 80.105 207.486 79.1689 207.486 cv
cp
79.1689 203.155 mo
77.7129 203.155 76.5327 204.335 76.5327 205.791 cv
76.5327 207.247 77.7129 208.427 79.1689 208.427 cv
80.625 208.427 81.8052 207.247 81.8052 205.791 cv
81.8052 204.335 80.625 203.155 79.1689 203.155 cv
cp
.164706 .156863 .45098 rgb
f
78.5444 200.826 mo
87.2856 200.826 li
85.6211 210.399 li
80.2095 210.399 li
78.5444 200.826 li
cp
f
42.7441 164.291 mo
44.0288 162.941 41.1416 154.876 35.0122 155.025 cv
30.2021 155.143 26.6826 158.838 25.9316 160.139 cv
23.4634 164.411 24.3896 168.176 24.3896 168.176 cv
24.3896 168.176 30.5293 168.542 33.0767 164.928 cv
35.3169 161.749 37.7217 160.725 38.9478 161.347 cv
41.9648 162.877 41.8745 165.204 42.7441 164.291 cv
cp
1 .392157 .372549 rgb
f
30.4282 183.553 mo
25.9893 186.854 34.6328 205.941 36.2095 206.887 cv
37.7856 207.833 53.6572 210.566 54.9185 210.46 cv
56.1802 210.355 57.021 206.151 56.2852 205.835 cv
55.5493 205.521 41.4648 203.523 40.624 202.367 cv
39.7832 201.211 34.5273 180.504 30.4282 183.553 cv
cp
0 .52549 .709804 rgb
f
63.0088 209.885 mo
61.9702 210.308 li
57.8999 200.314 li
58.9385 199.891 li
63.0088 209.885 li
cp
1 1 1 rgb
f
55.6543 206.151 mo
56.9155 205.73 59.8589 204.995 60.8047 206.046 cv
61.7505 207.097 64.4834 209.83 63.5376 210.145 cv
62.5918 210.46 56.3901 210.566 54.9185 210.46 cv
53.4473 210.355 55.6543 206.151 55.6543 206.151 cv
cp
.968627 .584314 .552941 rgb
f
116.913 193.661 mo
120.754 196.246 li
116.595 198.28 li
116.913 193.661 li
cp
1 1 1 rgb
f
89.3945 232.638 mo
99.9053 232.638 li
99.9053 258.285 li
89.3945 258.285 li
89.3945 232.638 li
cp
.054902 .592157 .803922 rgb
f
103.689 251.558 mo
103.689 256.55 99.6421 260.597 94.6499 260.597 cv
89.6577 260.597 85.6104 256.55 85.6104 251.558 cv
85.6104 246.566 89.6577 242.519 94.6499 242.519 cv
99.6421 242.519 103.689 246.566 103.689 251.558 cv
cp
.0666667 .580392 .784314 rgb
f
80.9858 177.667 mo
80.9858 178.189 80.562 178.612 80.0396 178.612 cv
79.5171 178.612 79.0938 178.189 79.0938 177.667 cv
79.0938 177.144 79.5171 176.72 80.0396 176.72 cv
80.562 176.72 80.9858 177.144 80.9858 177.667 cv
cp
1 1 1 rgb
f
109.26 169.573 mo
109.26 170.095 108.836 170.519 108.314 170.519 cv
107.792 170.519 107.368 170.095 107.368 169.573 cv
107.368 169.05 107.792 168.627 108.314 168.627 cv
108.836 168.627 109.26 169.05 109.26 169.573 cv
cp
f
102.218 193.853 mo
102.218 194.375 101.794 194.799 101.271 194.799 cv
100.75 194.799 100.326 194.375 100.326 193.853 cv
100.326 193.331 100.75 192.907 101.271 192.907 cv
101.794 192.907 102.218 193.331 102.218 193.853 cv
cp
f
430.561 349.772 mo
429.361 349.852 426.559 350.552 426.559 351.814 cv
426.559 353.076 427.41 354.425 427.825 354.38 cv
428.24 354.336 430.974 355.038 431.989 354.126 cv
433.006 353.215 430.561 349.772 430.561 349.772 cv
cp
.968627 .584314 .552941 rgb
f
489.247 342.473 mo
489.247 358.094 478.878 370.756 466.087 370.756 cv
453.297 370.756 442.928 358.094 442.928 342.473 cv
442.928 326.853 453.297 314.19 466.087 314.19 cv
478.878 314.19 489.247 326.853 489.247 342.473 cv
cp
.635294 .8 .854902 rgb
f
473.822 404.551 mo
473.837 404.361 473.847 404.168 473.847 403.974 cv
473.847 399.718 470.396 396.269 466.142 396.269 cv
461.886 396.269 458.437 399.718 458.437 403.974 cv
458.437 404.168 458.446 404.361 458.46 404.551 cv
473.822 404.551 li
cp
f
466.382 404.551 mo
465.033 404.551 li
465.033 354.469 li
466.382 354.469 li
466.382 404.551 li
cp
f
483.979 370.096 mo
483.979 372.388 482.104 374.262 479.812 374.262 cv
452.362 374.262 li
450.071 374.262 448.196 372.388 448.196 370.096 cv
448.196 362.55 li
448.196 360.259 450.071 358.384 452.362 358.384 cv
479.812 358.384 li
482.104 358.384 483.979 360.259 483.979 362.55 cv
483.979 370.096 li
cp
f
449.473 359.555 mo
476.062 359.555 li
476.062 365.936 li
476.062 369.39 473.893 370.944 470.438 370.944 cv
450.104 370.944 li
446.65 370.944 443.219 369.39 443.219 365.936 cv
443.219 365.81 li
443.219 362.356 446.019 359.555 449.473 359.555 cv
cp
1 .392157 .372549 rgb
f
476.062 359.477 mo
456.221 359.477 li
453.744 330.083 li
453.522 327.45 455.6 325.19 458.242 325.19 cv
474.04 325.19 li
476.683 325.19 478.761 327.45 478.539 330.083 cv
476.062 359.477 li
cp
.0980392 .345098 .858824 rgb
f
467.394 327.019 mo
464.312 327.019 li
463.354 327.019 462.578 326.145 462.578 325.066 cv
462.578 321.268 li
462.578 320.189 463.354 319.315 464.312 319.315 cv
467.394 319.315 li
468.351 319.315 469.127 320.189 469.127 321.268 cv
469.127 325.066 li
469.127 326.145 468.351 327.019 467.394 327.019 cv
cp
.968627 .584314 .552941 rgb
f
458.459 319.309 mo
459.696 323.499 463.199 322.857 467.389 321.619 cv
471.578 320.38 473.971 315.981 472.732 311.792 cv
471.494 307.603 467.095 305.21 462.905 306.449 cv
458.717 307.687 457.221 315.121 458.459 319.309 cv
cp
.988235 .658824 .619608 rgb
f
443.497 364.973 mo
440.329 400.932 li
445.145 400.932 li
445.145 400.932 451.893 379.343 452.663 371.639 cv
453.433 363.933 448.805 363.137 448.805 363.137 cv
443.497 364.973 li
cp
1 .392157 .372549 rgb
f
458.821 364.486 mo
455.547 400.932 li
460.362 400.932 li
460.362 400.932 467.446 377.539 468.217 369.833 cv
468.987 362.128 464.022 363.137 464.022 363.137 cv
458.821 364.486 li
cp
f
440.426 400.932 mo
445.145 400.932 li
445.145 404.551 li
435.573 404.551 li
434.941 404.551 434.725 403.132 435.277 402.827 cv
440.426 400.932 li
cp
.141176 .431373 .615686 rgb
f
455.547 400.932 mo
460.267 400.932 li
460.267 404.551 li
450.694 404.551 li
450.063 404.551 449.846 403.132 450.398 402.827 cv
455.547 400.932 li
cp
f
360.895 342.473 mo
360.895 358.094 371.264 370.756 384.054 370.756 cv
396.845 370.756 407.214 358.094 407.214 342.473 cv
407.214 326.853 396.845 314.19 384.054 314.19 cv
371.264 314.19 360.895 326.853 360.895 342.473 cv
cp
.054902 .592157 .803922 rgb
f
419.035 349.772 mo
420.233 349.852 423.036 350.552 423.036 351.814 cv
423.036 353.076 422.186 354.425 421.771 354.38 cv
421.354 354.336 418.622 355.038 417.606 354.126 cv
416.59 353.215 419.035 349.772 419.035 349.772 cv
cp
.968627 .584314 .552941 rgb
f
393.115 327.218 mo
388.677 330.519 397.32 349.607 398.896 350.552 cv
400.474 351.499 416.345 354.231 417.606 354.126 cv
418.867 354.021 419.708 349.817 418.973 349.501 cv
418.236 349.186 404.152 347.189 403.312 346.033 cv
402.471 344.876 397.215 324.17 393.115 327.218 cv
cp
.447059 .0862745 .0509804 rgb
f
376.319 404.551 mo
376.305 404.361 376.295 404.168 376.295 403.974 cv
376.295 399.718 379.745 396.269 384 396.269 cv
388.256 396.269 391.705 399.718 391.705 403.974 cv
391.705 404.168 391.695 404.361 391.682 404.551 cv
376.319 404.551 li
cp
.054902 .592157 .803922 rgb
f
383.76 404.551 mo
385.107 404.551 li
385.107 354.469 li
383.76 354.469 li
383.76 404.551 li
cp
f
366.163 370.096 mo
366.163 372.388 368.038 374.262 370.329 374.262 cv
397.778 374.262 li
400.07 374.262 401.945 372.388 401.945 370.096 cv
401.945 362.55 li
401.945 360.259 400.07 358.384 397.778 358.384 cv
370.329 358.384 li
368.038 358.384 366.163 360.259 366.163 362.55 cv
366.163 370.096 li
cp
f
400.668 359.555 mo
374.08 359.555 li
374.08 365.936 li
374.08 369.39 376.88 372.19 380.334 372.19 cv
400.668 372.19 li
404.122 372.19 406.923 369.39 406.923 365.936 cv
406.923 365.81 li
406.923 362.356 404.122 359.555 400.668 359.555 cv
cp
.854902 .247059 .227451 rgb
f
374.08 359.477 mo
393.92 359.477 li
396.397 330.083 li
396.619 327.45 394.542 325.19 391.898 325.19 cv
376.102 325.19 li
373.458 325.19 371.381 327.45 371.603 330.083 cv
374.08 359.477 li
cp
.513726 .192157 .145098 rgb
f
382.748 327.019 mo
385.83 327.019 li
386.787 327.019 387.563 326.145 387.563 325.066 cv
387.563 321.268 li
387.563 320.189 386.787 319.315 385.83 319.315 cv
382.748 319.315 li
381.79 319.315 381.015 320.189 381.015 321.268 cv
381.015 325.066 li
381.015 326.145 381.79 327.019 382.748 327.019 cv
cp
.968627 .584314 .552941 rgb
f
391.683 319.309 mo
390.444 323.499 386.941 322.857 382.753 321.619 cv
378.563 320.38 376.171 315.981 377.409 311.792 cv
378.647 307.603 383.047 305.21 387.235 306.449 cv
391.425 307.687 392.921 315.121 391.683 319.309 cv
cp
.988235 .658824 .619608 rgb
f
gsave
391.683 319.309 mo
390.444 323.499 386.941 322.857 382.753 321.619 cv
378.564 320.38 376.171 315.981 377.409 311.792 cv
378.647 307.603 383.047 305.21 387.235 306.449 cv
391.425 307.687 392.921 315.121 391.683 319.309 cv
clp
382.972 310.357 mo
382.972 310.357 382.972 313.15 382.586 313.15 cv
382.201 313.15 380.756 312.573 379.696 313.921 cv
378.637 315.269 379.793 316.618 381.045 316.907 cv
382.297 317.196 381.43 320.47 378.444 319.892 cv
375.459 319.315 374.399 312.284 375.94 309.587 cv
377.481 306.89 382.394 303.904 384.127 304.097 cv
385.86 304.29 400.542 308.729 400.542 308.729 cv
382.972 310.357 li
cp
.164706 .156863 .45098 rgb
f
grestore
406.537 364.486 mo
409.812 400.932 li
404.996 400.932 li
404.996 400.932 397.291 377.199 396.521 369.494 cv
395.75 361.789 401.336 363.137 401.336 363.137 cv
406.537 364.486 li
cp
.854902 .247059 .227451 rgb
f
391.32 364.486 mo
394.595 400.932 li
389.779 400.932 li
389.779 400.932 382.074 377.199 381.304 369.494 cv
380.533 361.789 386.119 363.137 386.119 363.137 cv
391.32 364.486 li
cp
f
409.716 400.932 mo
404.996 400.932 li
404.996 404.551 li
414.568 404.551 li
415.2 404.551 415.417 403.132 414.864 402.827 cv
409.716 400.932 li
cp
.164706 .156863 .45098 rgb
f
394.595 400.932 mo
389.875 400.932 li
389.875 404.551 li
399.447 404.551 li
400.079 404.551 400.296 403.132 399.742 402.827 cv
394.595 400.932 li
cp
f
496.265 356.069 mo
351.136 356.069 li
351.136 353.958 li
496.265 353.958 li
496.265 356.069 li
cp
.027451 .396078 .607843 rgb
f
351.906 404.421 mo
351.136 404.421 li
351.136 354.339 li
351.906 354.339 li
351.906 404.421 li
cp
f
496.265 404.421 mo
495.494 404.421 li
495.494 354.339 li
496.265 354.339 li
496.265 404.421 li
cp
f
gsave
374.08 359.477 mo
393.92 359.477 li
396.397 330.083 li
396.619 327.45 394.542 325.19 391.898 325.19 cv
376.101 325.19 li
373.458 325.19 371.381 327.45 371.603 330.083 cv
374.08 359.477 li
clp
390.586 326.644 mo
390.586 330.249 387.664 333.17 384.06 333.17 cv
380.454 333.17 377.532 330.249 377.532 326.644 cv
377.532 323.039 380.454 320.117 384.06 320.117 cv
387.664 320.117 390.586 323.039 390.586 326.644 cv
cp
.968627 .584314 .552941 rgb
f
grestore
462.436 323.032 mo
461.074 323.032 459.97 321.927 459.97 320.566 cv
459.97 319.204 461.074 318.099 462.436 318.099 cv
463.798 318.099 464.902 319.204 464.902 320.566 cv
464.902 321.927 463.798 323.032 462.436 323.032 cv
cp
462.436 316.729 mo
460.317 316.729 458.6 318.447 458.6 320.566 cv
458.6 322.684 460.317 324.402 462.436 324.402 cv
464.555 324.402 466.272 322.684 466.272 320.566 cv
466.272 318.447 464.555 316.729 462.436 316.729 cv
cp
1 .392157 .372549 rgb
f
458.669 320.012 mo
466.272 320.012 li
466.272 320.012 468.17 330.55 462.002 330.219 cv
456.169 329.907 458.669 320.012 458.669 320.012 cv
cp
f
456.479 327.218 mo
460.919 330.519 452.275 349.607 450.699 350.552 cv
449.122 351.499 433.251 354.231 431.989 354.126 cv
430.729 354.021 429.888 349.817 430.623 349.501 cv
431.358 349.186 445.443 347.189 446.284 346.033 cv
447.125 344.876 452.381 324.17 456.479 327.218 cv
cp
.168627 .47451 .901961 rgb
f
371.988 327.534 mo
367.55 330.834 376.193 349.922 377.77 350.868 cv
379.347 351.814 395.218 354.546 396.479 354.442 cv
397.74 354.336 398.581 350.132 397.846 349.817 cv
397.109 349.501 383.025 347.504 382.185 346.348 cv
381.344 345.192 376.088 324.486 371.988 327.534 cv
cp
.447059 .0862745 .0509804 rgb
f
404.569 353.867 mo
403.531 354.29 li
399.461 344.295 li
400.499 343.873 li
404.569 353.867 li
cp
.160784 .14902 .419608 rgb
f
397.215 350.132 mo
398.477 349.711 401.419 348.976 402.365 350.027 cv
403.312 351.079 406.044 353.811 405.098 354.126 cv
404.152 354.442 397.95 354.546 396.479 354.442 cv
395.008 354.336 397.215 350.132 397.215 350.132 cv
cp
.968627 .584314 .552941 rgb
f
477.606 327.534 mo
482.046 330.834 473.402 349.922 471.826 350.868 cv
470.249 351.814 454.378 354.546 453.116 354.442 cv
451.855 354.336 451.015 350.132 451.75 349.817 cv
452.485 349.501 466.57 347.504 467.411 346.348 cv
468.252 345.192 473.508 324.486 477.606 327.534 cv
cp
.168627 .47451 .901961 rgb
f
445.026 353.867 mo
446.064 354.29 li
450.135 344.295 li
449.097 343.873 li
445.026 353.867 li
cp
.160784 .14902 .419608 rgb
f
452.381 350.132 mo
451.119 349.711 448.176 348.976 447.23 350.027 cv
446.284 351.079 443.552 353.811 444.497 354.126 cv
445.443 354.442 451.645 354.546 453.116 354.442 cv
454.588 354.336 452.381 350.132 452.381 350.132 cv
cp
.968627 .584314 .552941 rgb
f
429.188 353.967 mo
420.364 353.967 li
420.364 344.783 li
429.188 344.783 li
429.188 353.967 li
cp
.901961 .976471 1 rgb
f
431.942 353.967 mo
417.609 353.967 li
417.142 353.967 416.763 353.588 416.763 353.121 cv
416.763 353.103 li
416.763 352.635 417.142 352.256 417.609 352.256 cv
431.942 352.256 li
432.41 352.256 432.789 352.635 432.789 353.103 cv
432.789 353.121 li
432.789 353.588 432.41 353.967 431.942 353.967 cv
cp
.803922 .933333 .988235 rgb
f
450.257 346.224 mo
399.835 346.224 li
399.338 346.224 398.935 345.821 398.935 345.324 cv
398.935 316.151 li
398.935 315.653 399.338 315.25 399.835 315.25 cv
450.257 315.25 li
450.755 315.25 451.157 315.653 451.157 316.151 cv
451.157 345.324 li
451.157 345.821 450.755 346.224 450.257 346.224 cv
cp
f
426.757 330.017 mo
426.757 330.961 425.991 331.727 425.046 331.727 cv
424.102 331.727 423.335 330.961 423.335 330.017 cv
423.335 329.072 424.102 328.306 425.046 328.306 cv
425.991 328.306 426.757 329.072 426.757 330.017 cv
cp
1 1 1 rgb
f
381.854 303.429 mo
383.122 305.51 382.807 308.015 381.15 309.024 cv
379.494 310.033 377.124 309.164 375.856 307.083 cv
374.589 305.001 374.904 302.497 376.561 301.488 cv
378.217 300.479 380.587 301.348 381.854 303.429 cv
cp
.164706 .156863 .45098 rgb
f
448.182 322.508 mo
445.922 313.078 li
445.145 309.834 444.265 307.49 439.997 306.866 cv
440.049 306.509 li
444.531 307.166 445.487 309.721 446.271 312.995 cv
448.532 322.424 li
448.182 322.508 li
cp
f
436.801 306.81 mo
414.359 306.334 li
417.62 315.559 li
434.772 315.533 li
436.801 306.81 li
cp
.0980392 .345098 .858824 rgb
f
426.078 313.172 mo
410.033 306.83 li
426.673 299.374 li
442.807 306.996 li
426.078 313.172 li
cp
.160784 .14902 .419608 rgb
f
446.71 326.827 mo
447.9 320.564 li
451.801 325.606 li
446.71 326.827 li
cp
f
238.203 241.171 mo
205.471 241.171 li
201.391 241.171 198.083 237.721 198.083 233.465 cv
198.083 160.639 li
198.083 156.383 201.391 152.933 205.471 152.933 cv
238.203 152.933 li
242.283 152.933 245.591 156.383 245.591 160.639 cv
245.591 233.465 li
245.591 237.721 242.283 241.171 238.203 241.171 cv
.0235294 .172549 .247059 rgb
f
233.855 234.208 mo
209.63 234.208 li
205.397 234.208 201.966 231.199 201.966 227.488 cv
201.966 163.985 li
201.966 160.274 205.397 157.266 209.63 157.266 cv
233.855 157.266 li
238.088 157.266 241.519 160.274 241.519 163.985 cv
241.519 227.488 li
241.519 231.199 238.088 234.208 233.855 234.208 cv
.262745 .588235 .792157 rgb
f
229.522 237.371 mo
229.522 238.184 228.863 238.843 228.049 238.843 cv
217.25 238.843 li
216.437 238.843 215.778 238.184 215.778 237.371 cv
215.778 236.557 216.437 235.898 217.25 235.898 cv
228.049 235.898 li
228.863 235.898 229.522 236.557 229.522 237.371 cv
cp
.196078 .529412 .698039 rgb
f
gsave
233.855 234.208 mo
209.63 234.208 li
205.397 234.208 201.966 231.199 201.966 227.488 cv
201.966 163.985 li
201.966 160.274 205.397 157.266 209.63 157.266 cv
233.855 157.266 li
238.088 157.266 241.519 160.274 241.519 163.985 cv
241.519 227.488 li
241.519 231.199 238.088 234.208 233.855 234.208 cv
clp
231.934 235.864 mo
211.161 235.864 li
204.117 235.864 198.407 230.153 198.407 223.11 cv
198.407 204.322 li
198.407 197.278 204.117 191.568 211.161 191.568 cv
231.934 191.568 li
238.977 191.568 244.688 197.278 244.688 204.322 cv
244.688 223.11 li
244.688 230.153 238.977 235.864 231.934 235.864 cv
.0980392 .345098 .858824 rgb
f
221.445 161.834 mo
220.325 161.427 215.947 159.085 212.179 160.715 cv
208.411 162.344 208.31 164.38 208.208 166.824 cv
208.106 169.268 205.153 170.795 203.829 173.952 cv
202.505 177.109 203.218 181.589 206.171 184.44 cv
209.124 187.292 208.615 190.448 208.615 192.994 cv
208.615 195.54 215.285 198.238 215.87 191.747 cv
216.456 185.255 217.372 179.043 217.576 177.415 cv
217.687 176.53 223.693 170.971 224.704 167.028 cv
225.556 163.705 221.445 161.834 221.445 161.834 cv
cp
1 .392157 .372549 rgb
f
221.445 161.835 mo
222.565 161.427 227.222 159.085 230.99 160.715 cv
234.757 162.344 234.859 164.38 234.961 166.824 cv
235.063 169.268 238.016 170.795 239.339 173.952 cv
240.663 177.109 239.95 181.589 236.998 184.44 cv
234.044 187.291 234.554 190.448 234.554 192.994 cv
234.554 195.539 227.884 198.238 227.298 191.747 cv
226.713 185.255 224.908 178.942 224.704 177.313 cv
224.5 175.683 221.445 161.835 221.445 161.835 cv
f
215.965 185.589 mo
215.87 191.747 li
215.87 191.747 216.175 195.799 221.743 195.736 cv
227.31 195.674 227.298 191.747 227.298 191.747 cv
226.409 184.509 li
215.965 185.589 li
cp
.968627 .592157 .572549 rgb
f
217.427 187.546 mo
222.744 191.801 226.295 188.796 229.942 183.045 cv
234.275 176.213 234.301 169.466 228.984 165.211 cv
223.668 160.957 215.909 161.817 211.654 167.134 cv
207.399 172.451 212.111 183.291 217.427 187.546 cv
.988235 .658824 .619608 rgb
f
209.226 176.498 mo
209.544 176.954 213.452 175.123 216.66 171.916 cv
220.529 168.046 221.14 165.093 221.547 165.093 cv
221.955 165.093 223.132 168.486 225.111 171.101 cv
227.962 174.869 233.97 176.803 233.97 176.803 cv
233.97 176.803 235.294 173.647 233.563 170.185 cv
231.832 166.723 227.962 162.751 224.908 162.344 cv
221.853 161.936 220.224 162.039 217.78 162.14 cv
215.335 162.242 209.124 166.519 208.513 169.064 cv
207.902 171.61 209.226 176.498 209.226 176.498 cv
1 .392157 .372549 rgb
f
grestore
189.765 247.931 mo
187.548 243.251 184.531 216.92 186.883 212.449 cv
187.838 210.633 195.664 193.95 197.826 193.95 cv
199.129 193.95 197.062 214.176 199.129 213.751 cv
200.359 213.499 199.577 200.356 201.018 197.114 cv
203.25 192.092 208.941 191.532 209.302 200.176 cv
209.532 205.698 207.386 223.66 207.206 225.737 cv
206.164 237.722 206.265 247.438 206.265 247.438 cv
189.765 247.931 li
cp
.992157 .658824 .631373 rgb
f
207.746 198.49 mo
207.746 199.918 206.588 201.076 205.16 201.076 cv
203.732 201.076 202.574 199.918 202.574 198.49 cv
202.574 197.062 203.732 195.904 205.16 195.904 cv
206.588 195.904 207.746 197.062 207.746 198.49 cv
cp
.968627 .592157 .572549 rgb
f
189.396 247.192 mo
206.265 247.192 li
206.265 262.476 li
206.265 263.428 205.493 264.2 204.541 264.2 cv
191.119 264.2 li
190.167 264.2 189.396 263.428 189.396 262.476 cv
189.396 247.192 li
cp
.803922 .933333 .988235 rgb
f
188.903 244.729 mo
206.265 244.729 li
206.265 252.61 li
188.903 252.61 li
187.747 252.61 186.81 251.672 186.81 250.517 cv
186.81 246.823 li
186.81 245.667 187.747 244.729 188.903 244.729 cv
cp
.901961 .976471 1 rgb
f
230.09 191.286 mo
228.853 191.286 227.85 190.283 227.85 189.045 cv
227.85 186.009 li
228.553 185.142 229.246 184.144 229.942 183.045 cv
231.001 181.376 231.802 179.713 232.331 178.089 cv
232.331 189.045 li
232.331 190.283 231.328 191.286 230.09 191.286 cv
232.331 168.136 mo
231.105 166.383 229.489 164.7 227.85 163.598 cv
227.85 163.505 li
227.85 162.268 228.853 161.265 230.09 161.265 cv
231.328 161.265 232.331 162.268 232.331 163.505 cv
232.331 168.136 li
1 .505882 .490196 rgb
f
227.85 186.009 mo
227.85 173.692 li
229.426 174.828 231.124 175.657 232.331 176.172 cv
232.331 178.089 li
231.802 179.713 231.001 181.376 229.942 183.045 cv
229.246 184.144 228.553 185.142 227.85 186.009 cv
.992157 .721569 .690196 rgb
f
232.331 176.172 mo
231.124 175.657 229.426 174.828 227.85 173.692 cv
227.85 163.598 li
229.489 164.7 231.105 166.383 232.331 168.136 cv
232.331 176.172 li
1 .505882 .490196 rgb
f
239.129 173.49 mo
237.727 170.641 235.057 169.146 234.961 166.824 cv
234.932 166.141 234.904 165.49 234.795 164.871 cv
234.795 163.505 li
234.795 162.268 235.798 161.265 237.036 161.265 cv
238.273 161.265 239.276 162.268 239.276 163.505 cv
239.276 172.691 li
239.276 172.973 239.224 173.242 239.129 173.49 cv
.4 .666667 .831372 rgb
f
237.036 174.931 mo
235.798 174.931 234.795 173.928 234.795 172.691 cv
234.795 164.871 li
234.904 165.49 234.932 166.141 234.961 166.824 cv
235.057 169.146 237.727 170.641 239.129 173.49 cv
238.807 174.333 237.991 174.931 237.036 174.931 cv
1 .505882 .490196 rgb
f
286.917 245.436 mo
286.556 242.195 289.077 215.422 289.077 211.821 cv
289.077 208.219 281.634 187.21 282.354 181.087 cv
283.075 174.964 277.312 174.964 275.151 180.367 cv
272.99 185.769 273.71 198.015 273.71 200.896 cv
273.71 203.777 249.7 197.174 248.739 211.581 cv
248.313 217.98 248.465 231.417 250.66 237.272 cv
251.38 239.193 253.085 238.973 255.702 241.114 cv
260.985 245.436 264.346 249.998 264.346 249.998 cv
286.917 245.436 li
cp
.992157 .658824 .631373 rgb
f
189.396 247.192 mo
206.265 247.192 li
206.265 262.476 li
206.265 263.428 205.493 264.2 204.541 264.2 cv
191.119 264.2 li
190.167 264.2 189.396 263.428 189.396 262.476 cv
189.396 247.192 li
cp
.803922 .933333 .988235 rgb
f
188.903 244.729 mo
206.265 244.729 li
206.265 252.61 li
188.903 252.61 li
187.747 252.61 186.81 251.672 186.81 250.517 cv
186.81 246.823 li
186.81 245.667 187.747 244.729 188.903 244.729 cv
cp
.901961 .976471 1 rgb
f
288.597 247.357 mo
267.708 249.998 li
270.007 262.476 li
270.007 263.428 270.95 264.2 272.114 264.2 cv
291.052 264.2 li
292.216 264.2 293.159 263.428 293.159 262.476 cv
288.597 247.357 li
cp
.803922 .933333 .988235 rgb
f
286.679 239.26 mo
262.49 248.303 li
265.407 256.106 li
289.596 247.062 li
291.206 246.46 292.165 245.044 291.737 243.9 cv
290.37 240.243 li
289.942 239.097 288.289 238.658 286.679 239.26 cv
cp
.901961 .976471 1 rgb
f
261.945 201.977 mo
255.234 201.582 248.769 203.343 248.757 206.501 cv
248.739 211.581 258.344 210.14 261.225 210.14 cv
264.106 210.14 273.71 211.581 273.23 206.058 cv
272.75 200.536 266.027 202.216 261.945 201.977 cv
cp
1 .72549 .713726 rgb
f
263.278 211.821 mo
255.22 211.426 248.019 211.1 247.557 215.866 cv
247.057 221.025 258.954 219.985 262.413 219.985 cv
265.873 219.985 277.405 221.425 276.828 215.903 cv
276.252 210.38 268.179 212.061 263.278 211.821 cv
cp
f
262.834 222.385 mo
255.225 221.991 248.854 223.315 248.277 226.43 cv
247.077 232.914 258.75 230.549 262.017 230.549 cv
265.284 230.549 276.173 231.99 275.629 226.467 cv
275.084 220.945 267.462 222.625 262.834 222.385 cv
cp
f
262.374 233.671 mo
256.629 233.333 249.019 232.264 249.718 236.996 cv
250.113 239.669 259.291 240.658 261.757 240.658 cv
264.223 240.658 272.443 241.891 272.032 237.165 cv
271.621 232.438 265.867 233.876 262.374 233.671 cv
cp
f
271.134 205.693 mo
271.134 207.122 269.976 208.279 268.548 208.279 cv
267.12 208.279 265.962 207.122 265.962 205.693 cv
265.962 204.266 267.12 203.108 268.548 203.108 cv
269.976 203.108 271.134 204.266 271.134 205.693 cv
cp
.968627 .592157 .572549 rgb
f
274.135 216.143 mo
274.135 217.571 272.978 218.728 271.549 218.728 cv
270.122 218.728 268.964 217.571 268.964 216.143 cv
268.964 214.714 270.122 213.557 271.549 213.557 cv
272.978 213.557 274.135 214.714 274.135 216.143 cv
cp
f
272.694 227.188 mo
272.694 228.616 271.537 229.774 270.109 229.774 cv
268.681 229.774 267.523 228.616 267.523 227.188 cv
267.523 225.759 268.681 224.602 270.109 224.602 cv
271.537 224.602 272.694 225.759 272.694 227.188 cv
cp
f
270.534 237.032 mo
270.534 238.46 269.376 239.618 267.948 239.618 cv
266.52 239.618 265.362 238.46 265.362 237.032 cv
265.362 235.604 266.52 234.447 267.948 234.447 cv
269.376 234.447 270.534 235.604 270.534 237.032 cv
cp
f
282.483 181.567 mo
282.483 182.996 281.5 184.153 280.286 184.153 cv
279.072 184.153 278.088 182.996 278.088 181.567 cv
278.088 180.139 279.072 178.981 280.286 178.981 cv
281.5 178.981 282.483 180.139 282.483 181.567 cv
cp
f
219.769 174.228 mo
228.606 179.33 li
219.769 184.432 li
219.769 174.228 li
cp
1 1 1 rgb
f
219.646 204.48 mo
219.646 211.846 li
217.384 211.846 li
217.384 208.981 li
215.658 208.981 li
215.658 211.846 li
213.396 211.846 li
213.396 204.48 li
215.658 204.48 li
215.658 207.189 li
217.384 207.189 li
217.384 204.48 li
219.646 204.48 li
cp
f
224.926 210.287 mo
225.307 210.287 225.582 210.12 225.749 209.788 cv
225.916 209.455 226 208.846 226 207.961 cv
226 206.68 225.656 206.04 224.969 206.04 cv
224.228 206.04 223.857 206.771 223.857 208.231 cv
223.857 209.602 224.213 210.287 224.926 210.287 cv
cp
224.937 211.959 mo
223.901 211.959 223.056 211.616 222.403 210.929 cv
221.75 210.242 221.424 209.323 221.424 208.171 cv
221.424 207.07 221.736 206.161 222.36 205.444 cv
222.984 204.726 223.85 204.367 224.958 204.367 cv
225.983 204.367 226.819 204.706 227.465 205.381 cv
228.11 206.058 228.434 206.961 228.434 208.09 cv
228.434 209.26 228.108 210.197 227.457 210.902 cv
226.805 211.607 225.965 211.959 224.937 211.959 cv
cp
f
239.255 204.48 mo
237.302 211.846 li
235.403 211.846 li
234.372 207.783 li
233.399 211.846 li
231.419 211.846 li
229.462 204.48 li
231.589 204.48 li
232.62 208.72 li
233.625 204.48 li
235.4 204.48 li
236.493 208.728 li
237.525 204.48 li
239.255 204.48 li
cp
f
229.34 216.128 mo
229.34 221.73 li
227.198 221.73 li
227.198 216.128 li
225.67 216.128 li
225.67 214.364 li
230.867 214.364 li
230.867 216.128 li
229.34 216.128 li
cp
f
235.511 220.17 mo
235.892 220.17 236.167 220.003 236.333 219.671 cv
236.501 219.338 236.584 218.73 236.584 217.844 cv
236.584 216.564 236.241 215.923 235.554 215.923 cv
234.813 215.923 234.442 216.654 234.442 218.115 cv
234.442 219.485 234.798 220.17 235.511 220.17 cv
cp
235.521 221.843 mo
234.485 221.843 233.641 221.5 232.988 220.812 cv
232.335 220.125 232.009 219.207 232.009 218.055 cv
232.009 216.955 232.321 216.044 232.945 215.328 cv
233.569 214.61 234.435 214.25 235.543 214.25 cv
236.568 214.25 237.404 214.589 238.049 215.265 cv
238.695 215.942 239.018 216.845 239.018 217.974 cv
239.018 219.143 238.692 220.081 238.042 220.786 cv
237.39 221.491 236.55 221.843 235.521 221.843 cv
cp
f
304.043 60.2012 mo
304.043 90.4355 279.533 114.946 249.299 114.946 cv
219.064 114.946 194.554 90.4355 194.554 60.2012 cv
194.554 29.9668 219.064 5.45654 249.299 5.45654 cv
279.533 5.45654 304.043 29.9668 304.043 60.2012 cv
cp
.635294 .8 .854902 rgb
f
273.069 69.3252 mo
273.069 72.6406 270.382 75.3281 267.066 75.3281 cv
263.751 75.3281 261.064 72.6406 261.064 69.3252 cv
261.064 66.0103 263.751 63.3228 267.066 63.3228 cv
270.382 63.3228 273.069 66.0103 273.069 69.3252 cv
cp
.988235 .658824 .619608 rgb
f
270.908 69.3252 mo
270.908 71.4468 269.188 73.167 267.066 73.167 cv
264.945 73.167 263.225 71.4468 263.225 69.3252 cv
263.225 67.2036 264.945 65.4834 267.066 65.4834 cv
269.188 65.4834 270.908 67.2036 270.908 69.3252 cv
cp
.968627 .584314 .552941 rgb
f
237.533 69.3252 mo
237.533 72.6406 234.846 75.3281 231.531 75.3281 cv
228.215 75.3281 225.528 72.6406 225.528 69.3252 cv
225.528 66.0103 228.215 63.3228 231.531 63.3228 cv
234.846 63.3228 237.533 66.0103 237.533 69.3252 cv
cp
.988235 .658824 .619608 rgb
f
234.892 69.3252 mo
234.892 71.1816 233.387 72.6865 231.531 72.6865 cv
229.674 72.6865 228.169 71.1816 228.169 69.3252 cv
228.169 67.4688 229.674 65.9639 231.531 65.9639 cv
233.387 65.9639 234.892 67.4688 234.892 69.3252 cv
cp
.968627 .584314 .552941 rgb
f
296.642 120.708 mo
296.642 115.71 li
296.642 101.383 285.027 89.7676 270.7 89.7676 cv
228.446 89.7676 li
214.118 89.7676 202.503 101.383 202.503 115.71 cv
202.503 120.708 li
296.642 120.708 li
cp
.168627 .47451 .901961 rgb
f
gsave
296.642 120.708 mo
296.642 115.71 li
296.642 101.383 285.027 89.7676 270.7 89.7676 cv
228.446 89.7676 li
214.118 89.7676 202.503 101.383 202.503 115.71 cv
202.503 120.708 li
296.642 120.708 li
clp
213.258 93.46 mo
215.219 97.9419 234.827 104.945 240.989 106.625 cv
247.152 108.306 250.233 95.7007 250.233 95.7007 cv
250.233 95.7007 236.788 83.936 225.023 86.457 cv
213.258 88.978 213.258 93.46 213.258 93.46 cv
cp
.0392157 .364706 .756863 rgb
f
285.948 93.46 mo
283.987 97.9419 264.379 104.945 258.217 106.625 cv
252.054 108.306 248.973 95.7007 248.973 95.7007 cv
248.973 95.7007 262.418 83.936 274.183 86.457 cv
285.948 88.978 285.948 93.46 285.948 93.46 cv
cp
f
grestore
261.773 92.0093 mo
261.773 92.0093 258.827 97.4683 250.607 97.2021 cv
240.22 96.8657 237.994 90.7217 237.994 90.7217 cv
237.994 77.8057 li
261.049 77.8057 li
261.773 92.0093 li
cp
.968627 .584314 .552941 rgb
f
241.938 83.4614 mo
251.328 90.9761 257.601 85.6694 264.042 75.5127 cv
271.694 63.4453 271.74 51.5288 262.35 44.0142 cv
252.959 36.5 239.256 38.02 231.741 47.4102 cv
224.227 56.8003 232.548 75.9468 241.938 83.4614 cv
cp
.988235 .658824 .619608 rgb
f
207.568 64.8916 mo
205.675 46.8779 li
205.025 40.6851 205.115 35.6377 212.513 31.7373 cv
212.681 32.0562 li
205.468 35.8589 205.376 40.5825 206.034 46.8398 cv
207.926 64.854 li
207.568 64.8916 li
cp
.164706 .156863 .45098 rgb
f
225.1 31.5396 mo
274.92 30.4854 li
267.68 50.9648 li
229.602 50.9058 li
225.1 31.5396 li
cp
.168627 .47451 .901961 rgb
f
248.904 40.9839 mo
284.523 31.5835 li
247.583 18.9932 li
211.766 31.9536 li
248.904 40.9839 li
cp
.0392157 .364706 .756863 rgb
f
211.062 69.7397 mo
207.426 63.2832 li
205 70.2852 li
211.062 69.7397 li
cp
.164706 .156863 .45098 rgb
f
229.602 50.9058 mo
229.602 50.9058 222.646 55.3989 229.129 60.9214 cv
235.612 66.4438 256.862 51.0771 256.862 51.0771 cv
229.602 50.9058 li
cp
.509804 .188235 .141176 rgb
f
246.372 62.6431 mo
259.29 70.1021 li
246.372 77.5605 li
246.372 62.6431 li
cp
1 1 1 rgb
f
267.68 50.9648 mo
267.68 50.9648 270.728 54.4985 270.908 57.0195 cv
271.088 59.541 266.946 61.8818 264.245 58.1001 cv
261.544 54.3184 259.923 50.897 259.923 50.897 cv
267.68 50.9648 li
cp
.509804 .188235 .141176 rgb
f
542.676 383.743 mo
556.124 371.292 li
663.71 371.292 li
675.576 383.743 li
542.676 383.743 li
cp
.054902 .592157 .803922 rgb
f
662.028 372.71 mo
556.224 372.71 li
554.478 372.71 553.062 371.248 553.062 369.442 cv
553.062 303.205 li
553.062 301.399 554.478 299.936 556.224 299.936 cv
662.028 299.936 li
663.775 299.936 665.19 301.399 665.19 303.205 cv
665.19 369.442 li
665.19 371.248 663.775 372.71 662.028 372.71 cv
cp
.0980392 .345098 .858824 rgb
f
657.923 369.979 mo
560.329 369.979 li
558.719 369.979 557.412 368.673 557.412 367.062 cv
557.412 307.958 li
557.412 306.346 558.719 305.041 560.329 305.041 cv
657.923 305.041 li
659.534 305.041 660.84 306.346 660.84 307.958 cv
660.84 367.062 li
660.84 368.673 659.534 369.979 657.923 369.979 cv
cp
.701961 .890196 .937255 rgb
f
610.313 302.073 mo
610.313 302.728 609.781 303.259 609.126 303.259 cv
608.471 303.259 607.939 302.728 607.939 302.073 cv
607.939 301.417 608.471 300.886 609.126 300.886 cv
609.781 300.886 610.313 301.417 610.313 302.073 cv
cp
.00784314 .329412 .509804 rgb
f
668.767 393.648 mo
549.486 393.648 li
545.725 393.648 542.676 390.599 542.676 386.838 cv
542.676 383.743 li
675.576 383.743 li
675.576 386.838 li
675.576 390.599 672.527 393.648 668.767 393.648 cv
cp
.0470588 .352941 .603922 rgb
f
586.185 372.676 mo
586.185 373.332 585.653 373.863 584.998 373.863 cv
571.55 373.863 li
570.895 373.863 570.363 373.332 570.363 372.676 cv
570.363 372.021 570.895 371.49 571.55 371.49 cv
584.998 371.49 li
585.653 371.49 586.185 372.021 586.185 372.676 cv
cp
.0117647 .262745 .419608 rgb
f
649.866 372.676 mo
649.866 373.332 649.335 373.863 648.68 373.863 cv
635.231 373.863 li
634.576 373.863 634.045 373.332 634.045 372.676 cv
634.045 372.021 634.576 371.49 635.231 371.49 cv
648.68 371.49 li
649.335 371.49 649.866 372.021 649.866 372.676 cv
cp
f
593.502 381.962 mo
597.922 377.871 li
620.85 377.871 li
624.75 381.962 li
593.502 381.962 li
cp
.262745 .588235 .792157 rgb
f
613.082 375.734 mo
605.669 375.734 li
605.669 375.374 li
613.082 375.374 li
613.082 375.734 li
cp
1 1 1 rgb
f
559.882 381.05 mo
551.575 381.05 li
551.575 380.69 li
559.882 380.69 li
559.882 381.05 li
cp
f
566.013 375.734 mo
558.6 375.734 li
558.6 375.374 li
566.013 375.374 li
566.013 375.734 li
cp
f
562.849 378.159 mo
555.436 378.159 li
555.436 377.799 li
562.849 377.799 li
562.849 378.159 li
cp
f
580.449 375.734 mo
573.037 375.734 li
573.037 375.374 li
580.449 375.374 li
580.449 375.734 li
cp
f
576.692 378.159 mo
569.279 378.159 li
569.279 377.799 li
576.692 377.799 li
576.692 378.159 li
cp
f
586.58 381.05 mo
578.274 381.05 li
578.274 380.69 li
586.58 380.69 li
586.58 381.05 li
cp
f
594.491 375.734 mo
587.078 375.734 li
587.078 375.374 li
594.491 375.374 li
594.491 375.734 li
cp
f
590.733 378.159 mo
583.32 378.159 li
583.32 377.799 li
590.733 377.799 li
590.733 378.159 li
cp
f
573.33 381.644 mo
565.023 381.644 li
565.023 381.284 li
573.33 381.284 li
573.33 381.644 li
cp
f
668.062 381.05 mo
659.755 381.05 li
659.755 380.69 li
668.062 380.69 li
668.062 381.05 li
cp
f
661.037 375.734 mo
653.624 375.734 li
653.624 375.374 li
661.037 375.374 li
661.037 375.734 li
cp
f
664.201 378.159 mo
656.788 378.159 li
656.788 377.799 li
664.201 377.799 li
664.201 378.159 li
cp
f
646.6 375.734 mo
639.187 375.734 li
639.187 375.374 li
646.6 375.374 li
646.6 375.734 li
cp
f
650.357 378.159 mo
642.944 378.159 li
642.944 377.799 li
650.357 377.799 li
650.357 378.159 li
cp
f
641.362 381.05 mo
633.056 381.05 li
633.056 380.69 li
641.362 380.69 li
641.362 381.05 li
cp
f
632.558 375.734 mo
625.146 375.734 li
625.146 375.374 li
632.558 375.374 li
632.558 375.734 li
cp
f
636.315 378.159 mo
628.903 378.159 li
628.903 377.799 li
636.315 377.799 li
636.315 378.159 li
cp
f
654.613 381.644 mo
646.307 381.644 li
646.307 381.284 li
654.613 381.284 li
654.613 381.644 li
cp
f
554.98 347.847 mo
554.98 347.847 549.458 352.708 550.341 354.842 cv
551.201 356.919 552.034 356.445 557.558 356.389 cv
559.985 356.364 561.949 356.474 562.933 356.021 cv
564.847 355.137 564.378 353.857 563.89 353.076 cv
562.127 350.254 560.208 347.921 560.208 347.921 cv
554.98 347.847 li
cp
1 .392157 .372549 rgb
f
548.423 375.58 mo
562.521 375.58 li
562.521 378.962 li
562.521 380.794 561.036 382.279 559.205 382.279 cv
548.423 382.279 li
546.592 382.279 545.107 380.794 545.107 378.962 cv
545.107 378.896 li
545.107 377.064 546.592 375.58 548.423 375.58 cv
cp
.160784 .14902 .419608 rgb
f
562.521 375.58 mo
551.906 375.58 li
552.9 372.422 li
550.688 359.953 li
550.57 358.556 551.672 357.358 553.072 357.358 cv
561.449 357.358 li
562.851 357.358 563.952 358.556 563.834 359.953 cv
561.976 372.735 li
562.521 375.58 li
cp
.854902 .247059 .227451 rgb
f
557.925 358.329 mo
556.291 358.329 li
555.783 358.329 555.371 357.865 555.371 357.292 cv
555.371 355.279 li
555.371 354.707 555.783 354.244 556.291 354.244 cv
557.925 354.244 li
558.433 354.244 558.844 354.707 558.844 355.279 cv
558.844 357.292 li
558.844 357.865 558.433 358.329 557.925 358.329 cv
cp
.968627 .584314 .552941 rgb
f
560.705 354.241 mo
560.049 356.461 558.191 356.122 555.971 355.465 cv
553.749 354.808 552.48 352.476 553.138 350.254 cv
553.794 348.034 556.126 346.765 558.348 347.421 cv
560.568 348.078 561.361 352.019 560.705 354.241 cv
cp
.988235 .658824 .619608 rgb
f
553.951 349.751 mo
553.951 349.751 560.025 350.493 561.857 349.751 cv
563.581 349.054 564.201 347.814 562.884 346.458 cv
561.194 344.718 558.466 345.606 556.063 347.272 cv
555.269 347.824 553.951 349.751 553.951 349.751 cv
cp
1 .392157 .372549 rgb
f
gsave
560.705 354.241 mo
560.049 356.461 558.191 356.122 555.971 355.465 cv
553.749 354.808 552.48 352.476 553.138 350.254 cv
553.794 348.034 556.126 346.765 558.348 347.421 cv
560.568 348.078 561.361 352.019 560.705 354.241 cv
clp
556.086 349.494 mo
556.086 349.494 556.086 350.975 555.882 350.975 cv
555.678 350.975 554.912 350.668 554.351 351.383 cv
553.788 352.098 554.401 352.813 555.065 352.966 cv
555.729 353.12 555.27 354.856 553.687 354.549 cv
552.104 354.244 551.541 350.515 552.358 349.085 cv
553.176 347.656 555.78 346.073 556.699 346.174 cv
557.618 346.277 558.078 348.473 558.078 348.473 cv
556.086 349.494 li
cp
f
grestore
545.312 378.194 mo
543.575 397.518 li
546.128 397.518 li
546.128 397.518 550.214 384.934 550.622 380.849 cv
551.031 376.764 548.068 377.479 548.068 377.479 cv
545.312 378.194 li
cp
.160784 .14902 .419608 rgb
f
553.38 378.194 mo
551.644 397.518 li
554.197 397.518 li
554.197 397.518 558.282 384.934 558.69 380.849 cv
559.1 376.764 556.138 377.479 556.138 377.479 cv
553.38 378.194 li
cp
f
550.929 358.789 mo
547.149 365.937 li
552.256 365.529 li
550.929 358.789 li
cp
.854902 .247059 .227451 rgb
f
563.21 358.15 mo
569.798 367.648 li
570.103 368.299 569.868 369.338 569.185 369.563 cv
558.997 371.861 li
557.67 369.615 li
564.818 367.036 li
559.687 361.903 li
563.21 358.15 li
cp
f
558.83 371.314 mo
554.643 371.314 li
554.336 369.475 li
557.497 369.475 li
558.089 369.475 558.595 369.904 558.692 370.488 cv
558.83 371.314 li
cp
.988235 .658824 .619608 rgb
f
543.626 397.518 mo
546.128 397.518 li
546.128 399.437 li
541.054 399.437 li
540.719 399.437 540.604 398.685 540.896 398.523 cv
543.626 397.518 li
cp
1 .392157 .372549 rgb
f
551.644 397.518 mo
554.146 397.518 li
554.146 399.437 li
549.07 399.437 li
548.735 399.437 548.621 398.685 548.914 398.523 cv
551.644 397.518 li
cp
f
gsave
562.521 375.539 mo
552.001 375.539 li
550.688 359.953 li
550.57 358.556 551.672 357.358 553.072 357.358 cv
561.449 357.358 li
562.851 357.358 563.952 358.556 563.834 359.953 cv
561.976 372.735 li
562.521 375.539 li
clp
557.48 369.72 mo
557.409 369.511 li
563.775 367.332 li
563.847 367.541 li
557.48 369.72 li
cp
.262745 .588235 .792157 rgb
f
558.121 371.6 mo
558.103 371.38 li
565.414 370.77 li
565.433 370.991 li
558.121 371.6 li
cp
f
grestore
556.642 371.332 mo
543.456 371.332 li
541.647 363.168 li
554.832 363.168 li
556.642 371.332 li
cp
.592157 .780392 .827451 rgb
f
559.865 372.666 mo
543.444 372.666 li
543.444 371.274 li
559.865 371.274 li
559.865 372.666 li
cp
f
549.754 367.469 mo
549.754 367.949 549.365 368.337 548.886 368.337 cv
548.406 368.337 548.018 367.949 548.018 367.469 cv
548.018 366.99 548.406 366.601 548.886 366.601 cv
549.365 366.601 549.754 366.99 549.754 367.469 cv
cp
.988235 .658824 .619608 rgb
f
565.62 373.812 mo
539.738 373.812 li
539.738 372.395 li
565.62 372.395 li
565.62 373.812 li
cp
.701961 .890196 .937255 rgb
f
540.142 405.428 mo
539.733 405.428 li
539.733 372.526 li
540.142 372.526 li
540.142 405.428 li
cp
f
565.619 405.428 mo
565.21 405.428 li
565.21 372.526 li
565.619 372.526 li
565.619 405.428 li
cp
f
gsave
562.521 375.539 mo
552.001 375.539 li
552.9 372.422 li
550.688 359.953 li
550.57 358.556 551.672 357.358 553.072 357.358 cv
561.449 357.358 li
562.851 357.358 563.952 358.556 563.834 359.953 cv
561.976 372.735 li
562.521 375.539 li
clp
560.355 358.376 mo
560.355 360.084 558.971 361.469 557.263 361.469 cv
555.555 361.469 554.17 360.084 554.17 358.376 cv
554.17 356.668 555.555 355.285 557.263 355.285 cv
558.971 355.285 560.355 356.668 560.355 358.376 cv
cp
.968627 .584314 .552941 rgb
f
grestore
654.063 375.697 mo
667.438 375.697 li
667.438 378.907 li
667.438 380.644 666.029 382.052 664.292 382.052 cv
654.063 382.052 li
652.325 382.052 650.917 380.644 650.917 378.907 cv
650.917 378.843 li
650.917 377.105 652.325 375.697 654.063 375.697 cv
cp
.823529 .968627 1 rgb
f
667.438 375.657 mo
657.457 375.657 li
656.212 360.871 li
656.1 359.545 657.145 358.409 658.475 358.409 cv
666.422 358.409 li
667.751 358.409 668.796 359.545 668.685 360.871 cv
667.438 375.657 li
cp
.160784 .14902 .419608 rgb
f
663.078 359.33 mo
661.527 359.33 li
661.046 359.33 660.655 358.889 660.655 358.346 cv
660.655 356.436 li
660.655 355.893 661.046 355.454 661.527 355.454 cv
663.078 355.454 li
663.56 355.454 663.95 355.893 663.95 356.436 cv
663.95 358.346 li
663.95 358.889 663.56 359.33 663.078 359.33 cv
cp
.968627 .584314 .552941 rgb
f
658.583 355.451 mo
659.206 357.558 660.968 357.235 663.075 356.613 cv
665.183 355.99 666.387 353.777 665.764 351.669 cv
665.141 349.562 662.928 348.358 660.82 348.981 cv
658.713 349.604 657.961 353.343 658.583 355.451 cv
cp
.988235 .658824 .619608 rgb
f
gsave
658.583 355.451 mo
659.206 357.558 660.968 357.235 663.075 356.613 cv
665.183 355.99 666.387 353.777 665.764 351.669 cv
665.141 349.562 662.928 348.358 660.82 348.981 cv
658.713 349.604 657.961 353.343 658.583 355.451 cv
clp
662.966 350.948 mo
662.966 350.948 662.966 352.352 663.159 352.352 cv
663.354 352.352 664.08 352.062 664.613 352.74 cv
665.146 353.418 664.564 354.096 663.935 354.242 cv
663.305 354.387 663.741 356.035 665.242 355.744 cv
666.745 355.454 667.277 351.917 666.502 350.56 cv
665.728 349.203 663.256 347.701 662.384 347.798 cv
661.512 347.895 654.126 350.128 654.126 350.128 cv
662.966 350.948 li
cp
.854902 .247059 .227451 rgb
f
grestore
656.44 359.765 mo
651.702 367.911 li
655.388 369.474 li
658.321 364.654 li
656.44 359.765 li
cp
.160784 .14902 .419608 rgb
f
668.093 359.16 mo
674.343 368.171 li
674.631 368.79 674.409 369.775 673.761 369.989 cv
664.714 374.504 li
663.454 372.373 li
669.618 367.59 li
664.749 362.721 li
668.093 359.16 li
cp
f
gsave
667.438 375.657 mo
657.457 375.657 li
656.212 360.871 li
656.1 359.545 657.145 358.409 658.475 358.409 cv
666.422 358.409 li
667.751 358.409 668.796 359.545 668.685 360.871 cv
667.438 375.657 li
clp
663.425 373.217 mo
668.735 368.045 li
668.589 367.895 li
663.278 373.067 li
663.425 373.217 li
cp
.960784 .670588 .737255 rgb
f
664.238 375.016 mo
670.316 371.82 li
670.219 371.634 li
664.142 374.831 li
664.238 375.016 li
cp
f
grestore
665.023 375.761 mo
649.444 375.761 li
649.444 374.441 li
665.023 374.441 li
665.023 375.761 li
cp
1 1 1 rgb
f
gsave
667.438 375.657 mo
657.457 375.657 li
656.212 360.871 li
656.1 359.545 657.145 358.409 658.475 358.409 cv
666.422 358.409 li
667.751 358.409 668.796 359.545 668.685 360.871 cv
667.438 375.657 li
clp
659.135 359.14 mo
659.135 360.954 660.604 362.423 662.418 362.423 cv
664.231 362.423 665.701 360.954 665.701 359.14 cv
665.701 357.327 664.231 355.857 662.418 355.857 cv
660.604 355.857 659.135 357.327 659.135 359.14 cv
cp
.968627 .584314 .552941 rgb
f
grestore
664.879 374.479 mo
660.906 374.479 li
660.616 372.735 li
663.615 372.735 li
664.177 372.735 664.656 373.141 664.749 373.695 cv
664.879 374.479 li
cp
.988235 .658824 .619608 rgb
f
661.965 374.496 mo
649.455 374.496 li
647.739 366.75 li
660.249 366.75 li
661.965 374.496 li
cp
1 1 1 rgb
f
655.431 370.832 mo
655.431 371.286 655.062 371.655 654.606 371.655 cv
654.152 371.655 653.783 371.286 653.783 370.832 cv
653.783 370.376 654.152 370.007 654.606 370.007 cv
655.062 370.007 655.431 370.376 655.431 370.832 cv
cp
.305882 .407843 .498039 rgb
f
658.766 378.176 mo
657.118 396.511 li
659.541 396.511 li
659.541 396.511 663.417 384.572 663.805 380.696 cv
664.192 376.82 661.382 377.499 661.382 377.499 cv
658.766 378.176 li
cp
.988235 .658824 .619608 rgb
f
gsave
657.923 369.979 mo
560.329 369.979 li
558.719 369.979 557.412 368.673 557.412 367.062 cv
557.412 307.958 li
557.412 306.346 558.719 305.04 560.329 305.04 cv
657.923 305.04 li
659.534 305.04 660.84 306.346 660.84 307.958 cv
660.84 367.062 li
660.84 368.673 659.534 369.979 657.923 369.979 cv
clp
623.094 404.614 mo
598.644 404.614 li
587.391 404.614 578.268 395.491 578.268 384.238 cv
578.268 372.692 li
578.268 361.439 587.391 352.317 598.644 352.317 cv
623.094 352.317 li
634.347 352.317 643.469 361.439 643.469 372.692 cv
643.469 384.238 li
643.469 395.491 634.347 404.614 623.094 404.614 cv
cp
.160784 .14902 .419608 rgb
f
619.867 352.572 mo
619.867 352.572 618.594 358.259 611.293 357.835 cv
603.958 357.409 602.804 352.232 602.804 352.232 cv
603.061 342.037 li
619.355 342.037 li
619.867 352.572 li
cp
.968627 .584314 .552941 rgb
f
605.295 346.639 mo
612.926 352.747 618.023 348.434 623.257 340.18 cv
629.476 330.374 629.513 320.69 621.882 314.583 cv
614.252 308.477 603.115 309.712 597.009 317.343 cv
590.902 324.974 597.664 340.533 605.295 346.639 cv
cp
.988235 .658824 .619608 rgb
f
607.486 328.027 mo
620.405 335.486 li
607.486 342.944 li
607.486 328.027 li
cp
1 1 1 rgb
f
647.175 336.735 mo
646.817 336.698 li
648.486 320.805 li
649.066 315.292 648.985 311.131 642.634 307.783 cv
642.802 307.464 li
649.34 310.912 649.42 315.371 648.845 320.843 cv
647.175 336.735 li
cp
.164706 .156863 .45098 rgb
f
631.688 307.308 mo
587.732 306.378 li
594.121 324.446 li
627.715 324.394 li
631.688 307.308 li
cp
.0980392 .345098 .858824 rgb
f
610.686 319.772 mo
579.262 307.347 li
611.851 292.744 li
643.45 307.673 li
610.686 319.772 li
cp
.160784 .14902 .419608 rgb
f
644.071 341.01 mo
647.279 335.314 li
649.42 341.492 li
644.071 341.01 li
cp
.164706 .156863 .45098 rgb
f
grestore
668.852 347.352 mo
668.852 349.01 667.373 350.354 665.55 350.354 cv
663.727 350.354 662.248 349.01 662.248 347.352 cv
662.248 345.695 663.727 344.351 665.55 344.351 cv
667.373 344.351 668.852 345.695 668.852 347.352 cv
cp
.854902 .247059 .227451 rgb
f
651.11 378.176 mo
649.463 396.511 li
651.886 396.511 li
651.886 396.511 655.762 384.572 656.149 380.696 cv
656.537 376.82 653.727 377.499 653.727 377.499 cv
651.11 378.176 li
cp
.988235 .658824 .619608 rgb
f
657.118 396.511 mo
659.492 396.511 li
659.492 398.332 li
654.678 398.332 li
654.359 398.332 654.25 397.618 654.528 397.464 cv
657.118 396.511 li
cp
.160784 .14902 .419608 rgb
f
649.573 396.511 mo
651.947 396.511 li
651.947 398.332 li
647.133 398.332 li
646.814 398.332 646.705 397.618 646.983 397.464 cv
649.573 396.511 li
cp
f
635.884 382.344 mo
622.857 382.344 li
623.205 410.173 li
625.692 410.173 li
625.692 410.173 627.576 396.173 628.285 388.435 cv
630.01 388.435 li
631.76 398.607 li
638.993 406.376 li
640.893 404.707 li
635.407 396.3 li
635.407 396.3 635.907 385.936 635.874 384.139 cv
635.94 383.825 635.884 382.344 635.884 382.344 cv
cp
.635294 .8 .854902 rgb
f
635.884 382.344 mo
622.857 382.344 li
621.23 365.042 li
621.085 363.63 622.449 362.418 624.185 362.418 cv
634.557 362.418 li
636.291 362.418 637.655 363.63 637.51 365.042 cv
635.884 382.344 li
cp
1 .392157 .372549 rgb
f
629.308 364.251 mo
631.615 364.251 631.602 362.683 631.602 362.306 cv
631.602 359.752 li
631.602 359.174 630.739 359.223 630.226 359.223 cv
628.574 359.223 li
628.061 359.223 627.198 359.692 627.198 360.27 cv
627.198 362.306 li
627.198 362.678 627.44 364.251 629.308 364.251 cv
cp
.968627 .584314 .552941 rgb
f
625.763 359.22 mo
626.427 361.465 628.304 361.122 630.549 360.458 cv
632.794 359.794 634.076 357.437 633.413 355.191 cv
632.75 352.946 630.392 351.664 628.146 352.328 cv
625.901 352.991 625.1 356.975 625.763 359.22 cv
cp
.988235 .658824 .619608 rgb
f
636.437 362.987 mo
636.437 362.987 642.46 369.411 644.585 371.434 cv
645.757 372.551 644.585 373.388 643.915 374.226 cv
642.058 376.547 636.044 380.702 636.044 380.702 cv
636.379 377.184 li
640.007 372.942 li
640.007 372.942 634.903 369 634.733 368.716 cv
634.269 367.942 634.655 364.536 634.655 364.536 cv
636.437 362.987 li
cp
1 .392157 .372549 rgb
f
622.262 362.987 mo
622.262 362.987 616.239 369.411 614.114 371.434 cv
612.941 372.551 614.114 373.388 614.784 374.226 cv
616.642 376.547 623.591 380.847 623.591 380.847 cv
623.471 377.125 li
618.691 372.942 li
618.691 372.942 623.795 369 623.966 368.716 cv
624.431 367.942 624.043 364.536 624.043 364.536 cv
622.262 362.987 li
cp
f
623.17 410.137 mo
625.699 410.137 li
625.699 412.078 li
620.569 412.078 li
620.23 412.078 620.114 411.317 620.411 411.153 cv
623.17 410.137 li
cp
.164706 .156863 .45098 rgb
f
638.993 406.376 mo
640.893 404.707 li
642.174 406.164 li
638.322 409.551 li
638.068 409.775 637.479 409.281 637.593 408.961 cv
638.993 406.376 li
cp
f
627.117 350.962 mo
628.124 350.147 629.071 351.464 630.188 351.855 cv
631.305 352.246 633.23 351.213 634.291 352.33 cv
635.352 353.446 634.067 355.456 634.012 356.238 cv
633.956 357.019 634.521 358.844 633.845 359.921 cv
633.23 360.899 631.695 361.457 629.992 360.647 cv
628.879 360.118 630.271 358.359 630.495 357.41 cv
630.718 356.46 630.551 355.289 629.211 356.265 cv
628.604 356.708 627.531 357.212 627.62 355.707 cv
627.731 353.809 624.912 352.749 627.117 350.962 cv
cp
.509804 .188235 .141176 rgb
f
665.412 376.216 mo
652.978 376.286 li
652.978 376.286 651.51 376.705 651.091 377.962 cv
650.672 379.22 649.693 385.158 649.693 385.158 cv
663.316 385.158 li
664.225 380.687 li
665.412 376.216 li
cp
.823529 .968627 1 rgb
f
106.938 344.515 mo
106.938 367.39 88.394 385.934 65.5195 385.934 cv
42.6445 385.934 24.1011 367.39 24.1011 344.515 cv
24.1011 321.64 42.6445 303.097 65.5195 303.097 cv
88.394 303.097 106.938 321.64 106.938 344.515 cv
cp
1 .780392 .780392 rgb
f
7.95068 389.13 mo
46.2632 389.13 li
46.2632 374.5 li
7.95068 374.5 li
6.03662 374.5 4.48535 376.745 4.48535 379.516 cv
4.48535 384.114 li
4.48535 386.885 6.03662 389.13 7.95068 389.13 cv
cp
.0666667 .580392 .784314 rgb
f
8.52783 387.436 mo
46.2153 387.436 li
46.2153 376.194 li
8.52783 376.194 li
7.05762 376.194 7.05762 387.436 8.52783 387.436 cv
cp
1 1 1 rgb
f
gsave
8.52776 387.436 mo
46.2154 387.436 li
46.2154 376.194 li
8.52776 376.194 li
7.05759 376.194 7.05759 387.436 8.52776 387.436 cv
clp
6.31445 385.509 mo
46.937 385.509 li
46.937 386.1 li
6.31445 386.1 li
6.31445 385.509 li
cp
.701961 .890196 .937255 rgb
f
6.31445 383.541 mo
46.937 383.541 li
46.937 384.131 li
6.31445 384.131 li
6.31445 383.541 li
cp
f
6.31445 381.572 mo
46.937 381.572 li
46.937 382.163 li
6.31445 382.163 li
6.31445 381.572 li
cp
f
6.31445 379.603 mo
46.937 379.603 li
46.937 380.194 li
6.31445 380.194 li
6.31445 379.603 li
cp
f
6.31445 377.634 mo
46.937 377.634 li
46.937 378.225 li
6.31445 378.225 li
6.31445 377.634 li
cp
f
grestore
7.59033 359.868 mo
45.9033 359.868 li
45.9033 345.236 li
7.59033 345.236 li
5.67676 345.236 4.12549 347.482 4.12549 350.252 cv
4.12549 354.851 li
4.12549 357.622 5.67676 359.868 7.59033 359.868 cv
cp
.164706 .156863 .45098 rgb
f
8.16797 358.172 mo
45.855 358.172 li
45.855 346.93 li
8.16797 346.93 li
6.69727 346.93 6.69727 358.172 8.16797 358.172 cv
cp
1 1 1 rgb
f
gsave
8.168 358.172 mo
45.8549 358.172 li
45.8549 346.93 li
8.168 346.93 li
6.69732 346.93 6.69732 358.172 8.168 358.172 cv
clp
5.9541 356.246 mo
46.5767 356.246 li
46.5767 356.836 li
5.9541 356.836 li
5.9541 356.246 li
cp
.701961 .890196 .937255 rgb
f
5.9541 354.277 mo
46.5767 354.277 li
46.5767 354.868 li
5.9541 354.868 li
5.9541 354.277 li
cp
f
5.9541 352.308 mo
46.5767 352.308 li
46.5767 352.899 li
5.9541 352.899 li
5.9541 352.308 li
cp
f
5.9541 350.339 mo
46.5767 350.339 li
46.5767 350.93 li
5.9541 350.93 li
5.9541 350.339 li
cp
f
5.9541 348.371 mo
46.5767 348.371 li
46.5767 348.961 li
5.9541 348.961 li
5.9541 348.371 li
cp
f
grestore
38.3125 359.868 mo
0 359.868 li
0 374.5 li
38.3125 374.5 li
40.2266 374.5 41.7778 372.253 41.7778 369.483 cv
41.7778 364.884 li
41.7778 362.114 40.2266 359.868 38.3125 359.868 cv
cp
.513726 .192157 .145098 rgb
f
37.7354 361.562 mo
.0478516 361.562 li
.0478516 372.804 li
37.7354 372.804 li
39.2056 372.804 39.2056 361.562 37.7354 361.562 cv
cp
1 1 1 rgb
f
gsave
37.7353 361.562 mo
.0478771 361.562 li
.0478771 372.804 li
37.7353 372.804 li
39.2055 372.804 39.2055 361.562 37.7353 361.562 cv
clp
39.9492 363.489 mo
-.673828 363.489 li
-.673828 362.898 li
39.9492 362.898 li
39.9492 363.489 li
cp
.701961 .890196 .937255 rgb
f
39.9492 365.458 mo
-.673828 365.458 li
-.673828 364.867 li
39.9492 364.867 li
39.9492 365.458 li
cp
f
39.9492 367.426 mo
-.673828 367.426 li
-.673828 366.835 li
39.9492 366.835 li
39.9492 367.426 li
cp
f
39.9492 369.395 mo
-.673828 369.395 li
-.673828 368.804 li
39.9492 368.804 li
39.9492 369.395 li
cp
f
39.9492 371.364 mo
-.673828 371.364 li
-.673828 370.773 li
39.9492 370.773 li
39.9492 371.364 li
cp
f
grestore
143.392 389.107 mo
85.728 389.107 li
84.7764 389.107 84.0049 388.335 84.0049 387.384 cv
84.0049 352.461 li
84.0049 351.51 84.7764 350.739 85.728 350.739 cv
143.392 350.739 li
144.343 350.739 145.115 351.51 145.115 352.461 cv
145.115 387.384 li
145.115 388.335 144.343 389.107 143.392 389.107 cv
cp
.164706 .156863 .45098 rgb
f
120.906 378.822 mo
120.906 378.822 120.154 382.183 115.84 381.932 cv
111.506 381.68 110.824 378.622 110.824 378.622 cv
110.976 372.597 li
120.604 372.597 li
120.906 378.822 li
cp
.968627 .584314 .552941 rgb
f
112.296 375.317 mo
116.805 378.925 119.817 376.377 122.909 371.5 cv
126.583 365.707 126.605 359.985 122.097 356.376 cv
117.588 352.769 111.008 353.499 107.4 358.007 cv
103.792 362.516 107.788 371.709 112.296 375.317 cv
cp
.988235 .658824 .619608 rgb
f
113.591 364.32 mo
121.224 368.727 li
113.591 373.133 li
113.591 364.32 li
cp
1 1 1 rgb
f
gsave
143.392 389.107 mo
85.728 389.107 li
84.7764 389.107 84.0049 388.335 84.0049 387.384 cv
84.0049 352.461 li
84.0049 351.51 84.7764 350.739 85.728 350.739 cv
143.392 350.739 li
144.343 350.739 145.115 351.51 145.115 352.461 cv
145.115 387.384 li
145.115 388.335 144.343 389.107 143.392 389.107 cv
clp
122.813 409.571 mo
108.366 409.571 li
101.717 409.571 96.3271 404.181 96.3271 397.532 cv
96.3271 390.71 li
96.3271 384.061 101.717 378.671 108.366 378.671 cv
122.813 378.671 li
129.461 378.671 134.852 384.061 134.852 390.71 cv
134.852 397.532 li
134.852 404.181 129.461 409.571 122.813 409.571 cv
cp
.0470588 .352941 .603922 rgb
f
137.114 369.473 mo
136.756 369.435 li
137.743 360.044 li
138.082 356.817 138.036 354.38 134.323 352.423 cv
134.491 352.105 li
138.396 354.164 138.444 356.822 138.101 360.083 cv
137.114 369.473 li
cp
.164706 .156863 .45098 rgb
f
127.89 352.079 mo
101.919 351.529 li
105.694 362.204 li
125.543 362.173 li
127.89 352.079 li
cp
.0470588 .352941 .603922 rgb
f
115.481 359.442 mo
96.9141 352.101 li
116.169 343.473 li
134.84 352.294 li
115.481 359.442 li
cp
.109804 .482353 .729412 rgb
f
135.208 371.991 mo
137.103 368.625 li
138.367 372.275 li
135.208 371.991 li
cp
.164706 .156863 .45098 rgb
f
grestore
75.8193 355.338 mo
58.3594 355.338 li
58.8252 387 li
62.1597 387 li
62.1597 387 64.6841 371.072 65.6353 362.268 cv
67.9468 362.268 li
68.6421 387 li
71.9766 387 li
71.9766 387 75.9116 362.167 75.8062 357.38 cv
75.8955 357.022 75.8193 355.338 75.8193 355.338 cv
cp
.854902 .247059 .227451 rgb
f
75.8193 355.338 mo
58.3594 355.338 li
56.1797 335.653 li
55.9844 334.046 57.8125 332.668 60.1382 332.668 cv
74.04 332.668 li
76.3657 332.668 78.1943 334.046 77.999 335.653 cv
75.8193 355.338 li
cp
1 .392157 .372549 rgb
f
69.2466 332.54 mo
69.2466 329.635 li
69.2466 328.977 68.2651 329.033 67.6812 329.033 cv
65.8022 329.033 li
65.2183 329.033 64.2368 329.566 64.2368 330.224 cv
64.2368 332.54 li
64.0728 332.752 64.7441 334.927 66.5225 334.8 cv
69.5659 334.583 69.2466 332.754 69.2466 332.54 cv
cp
.968627 .584314 .552941 rgb
f
62.6045 329.03 mo
63.3594 331.583 65.4951 331.193 68.0493 330.438 cv
70.604 329.683 72.0625 327 71.3081 324.446 cv
70.5532 321.891 67.8701 320.433 65.3159 321.187 cv
62.7617 321.942 61.8496 326.475 62.6045 329.03 cv
cp
.992157 .658824 .639216 rgb
f
gsave
62.6046 329.03 mo
63.3593 331.583 65.4951 331.193 68.0494 330.438 cv
70.604 329.683 72.0625 327 71.3081 324.446 cv
70.5532 321.891 67.8702 320.433 65.3159 321.187 cv
62.7617 321.942 61.8496 326.475 62.6046 329.03 cv
clp
67.9165 323.571 mo
67.9165 323.571 67.9165 325.274 68.1514 325.274 cv
68.3862 325.274 69.2671 324.921 69.9131 325.744 cv
70.5591 326.566 69.8545 327.388 69.0908 327.565 cv
68.3276 327.741 68.856 329.738 70.6768 329.385 cv
72.4971 329.033 73.1431 324.746 72.2036 323.101 cv
71.2637 321.457 68.2686 319.636 67.2114 319.753 cv
66.1543 319.871 59.1841 323.625 59.1841 323.625 cv
67.9165 323.571 li
cp
.164706 .156863 .45098 rgb
f
grestore
59.1621 332.813 mo
59.1621 332.813 57.4287 333.023 56.7012 333.335 cv
54.2725 334.377 47.083 339.146 47.083 339.146 cv
46.1382 339.657 45.7095 341.328 46.2275 342.269 cv
47.3511 344.31 54.6045 350.048 54.6045 350.048 cv
56.5381 347.892 li
51.5107 342.217 li
51.5107 342.217 58.0796 339.998 60.2842 339.34 cv
61.269 339.047 59.6455 335.065 59.6455 335.065 cv
59.1621 332.813 li
cp
1 .392157 .372549 rgb
f
58.7998 386.958 mo
62.1631 386.958 li
62.1631 389.167 li
56.3262 389.167 li
55.9409 389.167 55.8086 388.3 56.146 388.115 cv
58.7998 386.958 li
cp
.0666667 .133333 .337255 rgb
f
71.8423 386.958 mo
68.479 386.958 li
68.479 389.167 li
74.3159 389.167 li
74.7012 389.167 74.8335 388.3 74.4961 388.115 cv
71.8423 386.958 li
cp
f
74.771 357.284 mo
59.4365 357.284 li
59.4365 343.565 li
74.771 343.565 li
74.771 357.284 li
cp
1 1 1 rgb
f
54.6045 350.048 mo
59.7144 352.61 li
60.2793 351.69 li
56.5381 347.892 li
54.6045 350.048 li
cp
.968627 .584314 .552941 rgb
f
75.1069 332.813 mo
75.1069 332.813 76.8403 333.023 77.5674 333.335 cv
79.9966 334.377 87.186 339.146 87.186 339.146 cv
88.1309 339.657 88.5596 341.328 88.0415 342.269 cv
86.9175 344.31 79.6646 350.048 79.6646 350.048 cv
77.731 347.892 li
82.7583 342.217 li
82.7583 342.217 76.189 339.998 73.9844 339.34 cv
73 339.047 74.6235 335.065 74.6235 335.065 cv
75.1069 332.813 li
cp
1 .392157 .372549 rgb
f
79.6646 350.048 mo
74.5547 352.61 li
73.9893 351.69 li
77.731 347.892 li
79.6646 350.048 li
cp
.968627 .584314 .552941 rgb
f
72.21 349.216 mo
62.0698 349.216 li
62.0698 347.577 li
72.21 347.577 li
72.21 349.216 li
cp
.164706 .156863 .45098 rgb
f
72.21 352.945 mo
62.0698 352.945 li
62.0698 351.304 li
72.21 351.304 li
72.21 352.945 li
cp
f
31.7808 340.601 mo
33.8765 340.601 li
33.8765 323.14 li
31.7808 323.14 li
31.7808 340.601 li
cp
.0666667 .133333 .337255 rgb
f
30.8208 322.077 mo
30.8208 320.959 32.8442 314.671 32.8442 314.671 cv
32.8442 314.671 34.8677 320.959 34.8677 322.077 cv
34.8677 323.195 33.9619 324.1 32.8442 324.1 cv
31.7266 324.1 30.8208 323.195 30.8208 322.077 cv
cp
.380392 .701961 .858824 rgb
f
28.8633 329.18 mo
28.0732 328.39 25.0581 322.513 25.0581 322.513 cv
25.0581 322.513 30.9351 325.528 31.7251 326.319 cv
32.5156 327.109 32.5156 328.39 31.7251 329.18 cv
30.9351 329.97 29.6538 329.97 28.8633 329.18 cv
cp
f
33.9629 326.319 mo
34.7534 325.528 40.6304 322.513 40.6304 322.513 cv
40.6304 322.513 37.6147 328.39 36.8247 329.18 cv
36.0347 329.97 34.7534 329.97 33.9629 329.18 cv
33.1729 328.39 33.1729 327.109 33.9629 326.319 cv
cp
f
32.4111 330.018 mo
28.6123 326.219 li
28.7637 326.067 li
32.563 329.867 li
32.4111 330.018 li
cp
.0666667 .133333 .337255 rgb
f
33.1289 330.018 mo
32.9775 329.867 li
36.7769 326.067 li
36.9282 326.219 li
33.1289 330.018 li
cp
f
32.9644 325.752 mo
32.7505 325.752 li
32.7505 320.379 li
32.9644 320.379 li
32.9644 325.752 li
cp
f
33.2817 320.379 mo
33.2817 320.614 33.0918 320.804 32.8574 320.804 cv
32.623 320.804 32.4331 320.614 32.4331 320.379 cv
32.4331 320.145 32.623 319.956 32.8574 319.956 cv
33.0918 319.956 33.2817 320.145 33.2817 320.379 cv
cp
f
37.2212 326.102 mo
37.2212 326.336 37.0313 326.527 36.7969 326.527 cv
36.5625 326.527 36.3726 326.336 36.3726 326.102 cv
36.3726 325.868 36.5625 325.677 36.7969 325.677 cv
37.0313 325.677 37.2212 325.868 37.2212 326.102 cv
cp
f
29.1309 326.102 mo
29.1309 326.336 28.9409 326.527 28.7065 326.527 cv
28.4722 326.527 28.2822 326.336 28.2822 326.102 cv
28.2822 325.868 28.4722 325.677 28.7065 325.677 cv
28.9409 325.677 29.1309 325.868 29.1309 326.102 cv
cp
f
36.0356 331.917 mo
29.7495 331.917 li
29.7495 331.917 28.3613 332.569 28.1968 334.681 cv
27.8965 338.53 30.3071 345.301 30.3071 345.301 cv
36.2388 345.301 li
36.2388 345.301 38.2095 337.221 37.7744 334.681 cv
37.4248 332.643 36.0356 331.917 36.0356 331.917 cv
cp
.054902 .592157 .803922 rgb
f
627.974 31.0005 mo
626.38 41.7617 620.331 43.0845 617.611 47.7402 cv
614.787 52.5762 615.221 54.5156 612.431 54.1172 cv
608.468 53.5508 609.207 50.3892 606.452 46.146 cv
603.299 41.2896 597.285 40.5659 596.887 31.0005 cv
596.529 22.4233 603.846 15.4565 612.431 15.4565 cv
621.015 15.4565 629.232 22.5088 627.974 31.0005 cv
cp
.996078 .717647 .709804 rgb
f
608.553 29.3838 mo
608.458 29.3838 608.354 29.4194 608.272 29.5195 cv
605.447 32.896 li
605.243 33.1392 605.202 33.4556 605.336 33.7437 cv
605.471 34.0308 605.74 34.2026 606.058 34.2026 cv
608.928 34.2026 li
608.928 29.7539 li
608.928 29.562 608.801 29.4487 608.683 29.4063 cv
608.553 29.3838 li
cp
616.147 34.2026 mo
619.209 34.2026 li
619.468 34.2026 619.687 34.062 619.794 33.8267 cv
619.902 33.5918 619.865 33.3345 619.696 33.1387 cv
616.42 29.3403 li
616.249 29.3154 li
616.226 29.3252 616.147 29.3652 616.147 29.4678 cv
616.147 34.2026 li
cp
616.147 49.9434 mo
615.759 49.9434 li
615.759 34.5913 li
609.316 34.5913 li
609.316 48.1387 li
608.928 48.1387 li
608.928 34.5913 li
606.058 34.5913 li
605.592 34.5913 605.182 34.3291 604.984 33.9077 cv
604.787 33.4868 604.851 33.0029 605.148 32.646 cv
607.973 29.271 li
608.178 29.022 608.507 28.9307 608.813 29.04 cv
609.119 29.1494 609.316 29.4297 609.316 29.7539 cv
609.316 34.2026 li
615.759 34.2026 li
615.759 29.4678 li
615.759 29.2397 615.89 29.0435 616.101 28.9561 cv
616.312 28.8687 616.543 28.9146 616.704 29.0762 cv
619.991 32.8853 li
620.258 33.1938 620.317 33.6172 620.147 33.9883 cv
619.978 34.3604 619.618 34.5913 619.209 34.5913 cv
616.147 34.5913 li
616.147 49.9434 li
cp
1 .392157 .372549 rgb
f
579.649 106.398 mo
576.857 105.984 574.7 100.875 576.639 97.8042 cv
578.578 94.7339 579.649 93.7944 578.033 90.7241 cv
576.417 87.6538 571.73 85.23 573.186 81.3521 cv
574.64 77.4736 579.326 77.312 578.194 73.7573 cv
577.063 70.2021 572.517 68.7646 574.741 63.2031 cv
576.751 58.1807 581.327 60.748 581.327 54.9438 cv
581.327 50 574.295 45.0659 580.457 41.439 cv
585.559 38.4355 588.925 46.3926 588.861 50.7583 cv
588.749 58.3481 582.89 60.4131 585.143 65.1929 cv
586.265 67.5718 590.668 69.0557 589.698 75.0347 cv
588.729 81.0132 583.042 80.3823 583.042 84.0991 cv
583.042 87.8154 589.933 89.7769 589.363 96.7993 cv
588.861 102.994 587.912 107.626 579.649 106.398 cv
cp
.635294 .8 .854902 rgb
f
581.521 107.292 mo
581.133 107.292 li
581.133 106.301 581.945 104.487 582.807 102.567 cv
583.435 101.164 584.085 99.7134 584.376 98.646 cv
585.497 94.5347 582.69 91.0454 580.641 88.4971 cv
579.662 87.2803 578.816 86.2295 578.572 85.3555 cv
577.761 82.4478 579.548 80.8374 581.276 79.2798 cv
582.497 78.1797 583.76 77.0425 584.152 75.4351 cv
584.711 73.1401 583.688 71.9214 582.503 70.5107 cv
581.388 69.1831 580.124 67.6792 579.905 65.0054 cv
579.771 63.3564 580.735 62.0459 581.853 60.5278 cv
583.103 58.8286 584.52 56.9028 584.93 53.9131 cv
585.552 49.3657 583.04 46.0547 583.015 46.0215 cv
583.322 45.7837 li
583.349 45.8179 585.96 49.2515 585.314 53.9653 cv
584.892 57.0537 583.443 59.0215 582.165 60.7578 cv
581.095 62.2134 580.17 63.4697 580.293 64.9731 cv
580.501 67.5239 581.723 68.978 582.801 70.2607 cv
584.001 71.6904 585.136 73.0405 584.529 75.5269 cv
584.109 77.2505 582.801 78.4292 581.536 79.5688 cv
579.82 81.1147 578.2 82.5752 578.946 85.2505 cv
579.17 86.0483 579.991 87.0703 580.943 88.2539 cv
583.046 90.8667 585.925 94.4458 584.751 98.7485 cv
584.452 99.8447 583.796 101.309 583.161 102.725 cv
582.354 104.524 581.521 106.384 581.521 107.292 cv
cp
1 1 1 rgb
f
583.88 45.9028 mo
583.88 46.2959 583.562 46.6147 583.169 46.6147 cv
582.775 46.6147 582.457 46.2959 582.457 45.9028 cv
582.457 45.5103 582.775 45.1914 583.169 45.1914 cv
583.562 45.1914 583.88 45.5103 583.88 45.9028 cv
cp
f
578.339 109.072 mo
576.381 110.007 572.81 107.675 572.727 104.884 cv
572.645 102.093 572.924 101.034 570.574 99.7705 cv
568.224 98.5068 564.194 98.9746 563.455 95.8765 cv
562.717 92.7783 565.636 90.6616 563.387 88.8804 cv
561.138 87.0996 557.621 88.1367 556.65 83.6338 cv
555.773 79.5674 559.794 79.2383 557.301 75.5371 cv
555.177 72.3843 548.572 72.2593 550.943 67.2983 cv
552.906 63.1909 558.472 66.8193 560.307 69.6309 cv
563.497 74.519 560.646 78.3535 564.138 80.4336 cv
565.876 81.4688 569.32 80.5234 571.271 84.7524 cv
573.222 88.9819 569.325 91.0229 570.922 93.3931 cv
572.519 95.7632 577.755 94.0532 580.41 98.7764 cv
582.751 102.943 584.137 106.304 578.339 109.072 cv
cp
.635294 .8 .854902 rgb
f
579.631 109.029 mo
579.2 108.39 578.939 106.879 578.662 105.28 cv
578.461 104.117 578.252 102.914 577.98 102.111 cv
576.937 99.0293 573.792 98.0552 571.267 97.2725 cv
570.115 96.916 569.12 96.6079 568.582 96.1494 cv
566.794 94.625 567.245 92.8169 567.682 91.0679 cv
567.985 89.8481 568.3 88.5869 567.864 87.4067 cv
567.243 85.7241 566.133 85.4058 564.727 85.0029 cv
563.438 84.6333 561.979 84.2148 560.682 82.5923 cv
559.877 81.5854 559.93 80.3271 559.99 78.8701 cv
560.058 77.2544 560.133 75.4238 559.115 73.3516 cv
557.566 70.2026 554.56 69.1748 554.529 69.1646 cv
554.651 68.7959 li
554.781 68.8384 557.841 69.8794 559.463 73.1802 cv
560.525 75.3413 560.444 77.3066 560.379 78.8862 cv
560.318 80.3223 560.271 81.4561 560.985 82.3491 cv
562.205 83.8755 563.602 84.2759 564.834 84.6289 cv
566.226 85.0283 567.539 85.4048 568.229 87.272 cv
568.706 88.5649 568.377 89.8853 568.059 91.1616 cv
567.632 92.8711 567.229 94.4858 568.834 95.853 cv
569.312 96.2603 570.271 96.5571 571.381 96.9014 cv
573.854 97.6675 577.24 98.7168 578.349 101.986 cv
578.63 102.817 578.841 104.036 579.045 105.214 cv
579.303 106.702 579.569 108.241 579.954 108.812 cv
579.631 109.029 li
cp
1 1 1 rgb
f
555.044 68.6748 mo
555.213 68.9253 555.146 69.2651 554.896 69.4341 cv
554.646 69.603 554.306 69.5366 554.137 69.2861 cv
553.968 69.0356 554.034 68.6953 554.285 68.5264 cv
554.535 68.3579 554.875 68.4238 555.044 68.6748 cv
cp
f
578.249 112.333 mo
577.31 113.986 573.573 114.099 572.115 112.133 cv
570.658 110.167 570.328 109.266 568.005 109.534 cv
565.683 109.803 563.02 112.158 560.936 110.301 cv
558.853 108.443 559.891 105.458 557.381 105.305 cv
554.872 105.15 552.862 107.658 549.908 104.907 cv
547.241 102.422 549.968 100.171 546.32 98.7588 cv
543.213 97.5562 538.401 100.774 537.621 96.0195 cv
536.975 92.0825 542.795 91.9033 545.522 93.0054 cv
550.266 94.9224 550.138 99.1074 553.689 98.854 cv
555.458 98.728 557.461 96.3218 560.983 98.3862 cv
564.505 100.45 562.725 103.87 565.061 104.774 cv
567.396 105.679 570.305 101.825 574.58 103.892 cv
578.351 105.715 581.031 107.438 578.249 112.333 cv
cp
.635294 .8 .854902 rgb
f
579.148 111.676 mo
578.514 111.43 577.566 110.474 576.564 109.461 cv
575.838 108.726 575.086 107.966 574.489 107.526 cv
572.205 105.841 569.463 106.713 567.26 107.414 cv
566.249 107.735 565.374 108.014 564.756 107.952 cv
562.692 107.75 562.107 106.217 561.543 104.734 cv
561.151 103.708 560.748 102.647 559.849 102.021 cv
558.569 101.129 557.616 101.455 556.41 101.868 cv
555.296 102.248 554.031 102.68 552.279 102.161 cv
551.188 101.837 550.593 100.903 549.903 99.8208 cv
549.145 98.6284 548.283 97.2764 546.518 96.2993 cv
543.83 94.812 541.168 95.5796 541.142 95.5884 cv
541.031 95.2153 li
541.146 95.1821 543.877 94.3936 546.706 95.9595 cv
548.558 96.9844 549.486 98.4414 550.231 99.6123 cv
550.905 100.67 551.438 101.506 552.39 101.788 cv
554.024 102.272 555.173 101.879 556.284 101.5 cv
557.491 101.087 558.631 100.698 560.071 101.702 cv
561.068 102.396 561.494 103.515 561.906 104.595 cv
562.453 106.031 562.97 107.387 564.794 107.565 cv
565.338 107.619 566.173 107.352 567.142 107.044 cv
569.309 106.354 572.276 105.411 574.72 107.213 cv
575.341 107.671 576.104 108.442 576.841 109.188 cv
577.771 110.127 578.731 111.098 579.289 111.314 cv
579.148 111.676 li
cp
1 1 1 rgb
f
541.26 94.9546 mo
541.506 95.0503 541.629 95.3281 541.533 95.5747 cv
541.438 95.8218 541.16 95.9443 540.913 95.8491 cv
540.666 95.7534 540.543 95.4756 540.639 95.2285 cv
540.734 94.9814 541.013 94.8589 541.26 94.9546 cv
cp
f
586.089 129.838 mo
577.935 129.838 li
575.522 110.293 li
575.522 110.293 575.86 105.216 582.666 105.505 cv
587.912 105.729 588.501 110.293 588.501 110.293 cv
586.089 129.838 li
cp
.164706 .156863 .45098 rgb
f
633.476 121.846 mo
631.532 116.599 630.055 108.072 632.698 102.607 cv
635.613 96.583 640.83 97.1987 641.638 92.6963 cv
642.998 85.1177 639.889 82.7856 638.334 76.9556 cv
637.183 72.6367 638.547 65.5371 644.941 65.1011 cv
653.492 64.5181 651.758 72.9668 658.351 72.6802 cv
662.82 72.4858 671.824 63.0181 676.812 71.9028 cv
683.03 82.98 664.152 84.2339 663.209 86.6719 cv
660.877 92.6963 670.66 86.0508 669.622 93.668 cv
669.039 97.9434 658.156 96.7773 658.351 102.802 cv
658.507 107.662 658.351 112.129 651.354 118.348 cv
644.358 124.567 641.443 124.178 641.443 124.178 cv
633.476 121.846 li
cp
.635294 .8 .854902 rgb
f
637.241 125.577 mo
636.883 125.426 li
637.138 124.819 638.008 123.53 639.211 121.745 cv
642.64 116.66 649.021 107.195 648.712 101.587 cv
648.3 94.1157 651.348 83.832 657.808 79.4897 cv
664.154 75.2246 670.944 73.8296 671.013 73.8164 cv
671.089 74.1973 li
671.021 74.2104 664.305 75.5923 658.025 79.8125 cv
651.684 84.0742 648.693 94.2012 649.1 101.566 cv
649.416 107.304 643.229 116.479 639.533 121.962 cv
638.387 123.662 637.481 125.005 637.241 125.577 cv
cp
1 1 1 rgb
f
636.608 122.824 mo
636.604 122.79 636.229 119.366 636.964 111.969 cv
637.521 106.369 639.124 103.929 641.343 100.552 cv
642.084 99.4248 642.925 98.146 643.804 96.6177 cv
650.259 85.397 646.848 75.4429 645.392 71.1924 cv
645.291 70.8999 li
645.659 70.7744 li
645.759 71.0669 li
647.232 75.3672 650.684 85.438 644.141 96.811 cv
643.256 98.3496 642.412 99.6333 641.668 100.766 cv
639.479 104.096 637.898 106.502 637.351 112.008 cv
636.62 119.355 636.991 122.746 636.995 122.779 cv
636.608 122.824 li
cp
f
639.553 125.767 mo
639.207 125.589 li
641.433 121.288 643.292 118.95 646.859 115.967 cv
647.138 115.734 647.425 115.499 647.715 115.26 cv
651.245 112.357 655.246 109.067 654.181 103.31 cv
653.215 98.0962 654.187 94.0127 657.068 91.1719 cv
657.341 91.4492 li
654.557 94.1934 653.622 98.1602 654.562 103.239 cv
655.67 109.221 651.396 112.736 647.962 115.56 cv
647.672 115.798 647.387 116.033 647.108 116.266 cv
643.587 119.21 641.75 121.519 639.553 125.767 cv
cp
f
646.286 71.2778 mo
646.109 71.6987 645.625 71.8965 645.204 71.7197 cv
644.782 71.543 644.585 71.0581 644.762 70.6372 cv
644.938 70.2163 645.423 70.0181 645.845 70.1948 cv
646.266 70.3716 646.463 70.8564 646.286 71.2778 cv
cp
f
671.813 74.3267 mo
671.636 74.748 671.151 74.9458 670.73 74.769 cv
670.309 74.5918 670.111 74.1074 670.288 73.6865 cv
670.465 73.2651 670.949 73.0674 671.371 73.2441 cv
671.792 73.4209 671.989 73.9058 671.813 74.3267 cv
cp
f
657.918 91.5103 mo
657.741 91.9316 657.256 92.1294 656.835 91.9526 cv
656.414 91.7754 656.216 91.291 656.393 90.8701 cv
656.57 90.4487 657.055 90.251 657.476 90.4277 cv
657.896 90.6045 658.095 91.0894 657.918 91.5103 cv
cp
f
633.765 125.344 mo
633.765 121.56 636.832 118.493 640.616 118.493 cv
644.4 118.493 647.468 121.56 647.468 125.344 cv
647.468 129.128 644.4 132.196 640.616 132.196 cv
636.832 132.196 633.765 129.128 633.765 125.344 cv
cp
.168627 .47451 .901961 rgb
f
594.161 117.843 mo
634.459 117.843 li
634.459 102.453 li
594.161 102.453 li
592.148 102.453 590.517 104.816 590.517 107.73 cv
590.517 112.566 li
590.517 115.481 592.148 117.843 594.161 117.843 cv
cp
.509804 .188235 .141176 rgb
f
594.769 116.061 mo
634.408 116.061 li
634.408 104.236 li
594.769 104.236 li
593.223 104.236 593.223 116.061 594.769 116.061 cv
cp
1 1 1 rgb
f
gsave
594.768 116.06 mo
634.408 116.06 li
634.408 104.236 li
594.768 104.236 li
593.223 104.236 593.223 116.06 594.768 116.06 cv
clp
592.44 114.034 mo
635.168 114.034 li
635.168 114.655 li
592.44 114.655 li
592.44 114.034 li
cp
.701961 .890196 .937255 rgb
f
592.44 111.963 mo
635.168 111.963 li
635.168 112.584 li
592.44 112.584 li
592.44 111.963 li
cp
f
592.44 109.893 mo
635.168 109.893 li
635.168 110.514 li
592.44 110.514 li
592.44 109.893 li
cp
f
592.44 107.822 mo
635.168 107.822 li
635.168 108.443 li
592.44 108.443 li
592.44 107.822 li
cp
f
592.44 105.751 mo
635.168 105.751 li
635.168 106.372 li
592.44 106.372 li
592.44 105.751 li
cp
f
grestore
606.012 102.787 mo
606.012 102.787 603.436 106.433 605.219 108.621 cv
607.002 110.808 621.566 109.093 622.161 106.662 cv
622.756 104.231 621.27 101.328 621.27 101.328 cv
606.012 102.787 li
cp
.607843 .607843 .607843 rgb
f
630.682 102.646 mo
605.153 102.646 li
605.153 100.774 li
630.682 100.774 li
630.682 102.646 li
cp
.0470588 .360784 .607843 rgb
f
603.137 71.1587 mo
600.362 71.5552 593.724 87.1436 595.705 90.7104 cv
597.687 94.2773 608.586 98.4385 608.586 98.4385 cv
607.991 92.2954 li
607.991 92.2954 600.527 89.125 601.121 87.1436 cv
601.716 85.1621 606.01 77.7642 606.01 77.7642 cv
603.137 71.1587 li
cp
1 .392157 .372549 rgb
f
621.712 71.1587 mo
624.486 71.5552 631.13 87.1436 629.148 90.7104 cv
627.166 94.2773 616.268 98.4385 616.268 98.4385 cv
616.862 92.2954 li
616.862 92.2954 624.326 89.125 623.731 87.1436 cv
623.137 85.1621 618.844 77.7642 618.844 77.7642 cv
621.712 71.1587 li
cp
f
604.845 70.7104 mo
620.083 70.7104 li
622.377 70.7104 624.216 72.5347 624.141 74.7358 cv
624.141 74.7358 621.235 86.5996 621.201 90.5781 cv
621.183 92.7593 621.889 99.2769 621.889 99.2769 cv
603.045 99.2769 li
603.045 99.2769 603.913 92.4653 603.896 90.1821 cv
603.865 86.2974 600.787 74.7358 600.787 74.7358 cv
600.712 72.5347 602.551 70.7104 604.845 70.7104 cv
cp
f
614.416 73.6895 mo
614.416 73.6895 614.227 75.2871 612.521 75.2056 cv
610.653 75.1167 610.518 73.6895 610.518 73.6895 cv
610.518 66.271 li
614.416 66.271 li
614.416 73.6895 li
cp
.968627 .584314 .552941 rgb
f
617.28 65.9453 mo
617.28 68.604 615.125 72.5645 612.467 72.5645 cv
609.808 72.5645 607.652 68.604 607.652 65.9453 cv
607.652 63.2866 609.808 61.1313 612.467 61.1313 cv
615.125 61.1313 617.28 63.2866 617.28 65.9453 cv
cp
.988235 .658824 .619608 rgb
f
625.23 100.896 mo
599.703 100.896 li
599.703 85.6777 li
625.23 85.6777 li
625.23 100.896 li
cp
.164706 .156863 .45098 rgb
f
614.814 93.0264 mo
614.814 94.3228 613.763 95.3735 612.467 95.3735 cv
611.17 95.3735 610.119 94.3228 610.119 93.0264 cv
610.119 91.73 611.17 90.6792 612.467 90.6792 cv
613.763 90.6792 614.814 91.73 614.814 93.0264 cv
cp
.0470588 .360784 .607843 rgb
f
610.758 109.016 mo
610.758 109.016 610.307 109.446 608.978 110.004 cv
607.61 110.58 604.906 111.649 605.312 112.828 cv
605.856 114.414 607.764 114.298 609.027 113.918 cv
611.768 113.095 614.619 111.162 614.619 111.162 cv
610.758 109.016 li
cp
.168627 .47451 .901961 rgb
f
614.035 104.878 mo
618.669 101.496 621.091 98.9961 626.293 95.8354 cv
627.53 95.083 628.379 94.8584 630.526 95.7007 cv
632.354 96.4175 632.158 99.5635 631.16 100.875 cv
628.167 104.809 616.634 110.242 614.302 111.064 cv
613.297 111.419 609.742 108.426 611.186 106.994 cv
611.897 106.288 612.781 105.793 614.035 104.878 cv
cp
.701961 .890196 .937255 rgb
f
611.897 111.395 mo
611.897 111.395 613.027 112.888 614.341 113.905 cv
615.912 115.119 616.995 115.521 618.271 114.928 cv
620.121 114.07 618.42 112.253 616.983 110.816 cv
614.855 108.689 613.334 107.807 613.334 107.807 cv
611.897 111.395 li
cp
.168627 .47451 .901961 rgb
f
607.743 66.8818 mo
607.743 66.8818 609.395 64.6528 609.923 63.0674 cv
610.451 61.4824 610.766 63.1665 613.044 64.9004 cv
614.233 65.8052 617.238 66.9316 617.238 66.9316 cv
617.238 66.9316 617.924 63.9199 616.858 62.374 cv
614.332 58.708 609.164 58.9482 607.595 63.2324 cv
606.802 65.3955 607.743 66.8818 607.743 66.8818 cv
cp
.164706 .156863 .45098 rgb
f
612.132 106.951 mo
614.111 108.586 li
614.111 108.586 614.796 109.142 615.144 109.79 cv
615.789 110.995 613.562 113.438 612.115 112.001 cv
610.67 110.564 609.379 109.016 609.379 109.016 cv
612.132 106.951 li
cp
.960784 .592157 .384314 rgb
f
606.239 109.532 mo
600.851 106.821 597.55 105.846 594.088 100.967 cv
593.207 99.7251 592.853 97.6694 593.195 96.6548 cv
593.617 95.4053 595.441 94.6572 597.588 95.1689 cv
599.392 95.5991 611.491 105.079 613.38 106.865 cv
614.193 107.635 611.713 111.485 609.681 110.823 cv
608.679 110.496 607.696 110.265 606.239 109.532 cv
cp
.560784 .835294 .898039 rgb
f
636.732 118.005 mo
584.505 118.005 li
584.505 133.795 li
636.732 133.795 li
638.797 133.795 640.472 131.371 640.472 128.381 cv
640.472 123.419 li
640.472 120.429 638.797 118.005 636.732 118.005 cv
cp
1 .392157 .372549 rgb
f
636.109 119.834 mo
584.557 119.834 li
584.557 131.966 li
636.109 131.966 li
637.695 131.966 637.695 119.834 636.109 119.834 cv
cp
1 1 1 rgb
f
gsave
636.109 119.834 mo
584.557 119.834 li
584.557 131.966 li
636.109 131.966 li
637.695 131.966 637.695 119.834 636.109 119.834 cv
clp
638.498 121.914 mo
583.777 121.914 li
583.777 121.276 li
638.498 121.276 li
638.498 121.914 li
cp
.701961 .890196 .937255 rgb
f
638.498 124.038 mo
583.777 124.038 li
583.777 123.401 li
638.498 123.401 li
638.498 124.038 li
cp
f
638.498 126.163 mo
583.777 126.163 li
583.777 125.525 li
638.498 125.525 li
638.498 126.163 li
cp
f
638.498 128.287 mo
583.777 128.287 li
583.777 127.65 li
638.498 127.65 li
638.498 128.287 li
cp
f
638.498 130.412 mo
583.777 130.412 li
583.777 129.774 li
638.498 129.774 li
638.498 130.412 li
cp
f
grestore
616.031 53.9146 mo
616.031 55.8711 614.444 57.4575 612.488 57.4575 cv
610.531 57.4575 608.945 55.8711 608.945 53.9146 cv
608.945 51.958 610.531 50.3716 612.488 50.3716 cv
614.444 50.3716 616.031 51.958 616.031 53.9146 cv
cp
.168627 .47451 .901961 rgb
f
615.854 52.5229 mo
609.122 52.5229 li
608.34 52.5229 607.705 51.8887 607.705 51.1064 cv
607.705 49.5552 li
607.705 48.7729 608.34 48.1387 609.122 48.1387 cv
615.854 48.1387 li
616.637 48.1387 617.271 48.7729 617.271 49.5552 cv
617.271 51.1064 li
617.271 51.8887 616.637 52.5229 615.854 52.5229 cv
cp
.45098 .701961 1 rgb
f
614.237 1.74902 mo
614.237 2.71484 612.488 5.83008 612.488 5.83008 cv
612.488 5.83008 610.739 2.71484 610.739 1.74902 cv
610.739 .783203 611.522 0 612.488 0 cv
613.454 0 614.237 .783203 614.237 1.74902 cv
cp
.701961 .890196 .937255 rgb
f
596.53 5.62549 mo
597.014 6.4624 597.056 10.0342 597.056 10.0342 cv
597.056 10.0342 593.984 8.21143 593.501 7.37451 cv
593.018 6.53809 593.305 5.46875 594.141 4.98584 cv
594.978 4.50244 596.047 4.78906 596.53 5.62549 cv
cp
f
583.134 17.8364 mo
583.971 18.3193 585.794 21.3916 585.794 21.3916 cv
585.794 21.3916 582.222 21.3486 581.385 20.8657 cv
580.549 20.3828 580.262 19.313 580.745 18.4766 cv
581.228 17.6401 582.298 17.3535 583.134 17.8364 cv
cp
f
577.638 35.1094 mo
578.604 35.1094 581.719 36.8584 581.719 36.8584 cv
581.719 36.8584 578.604 38.6074 577.638 38.6074 cv
576.672 38.6074 575.889 37.8242 575.889 36.8584 cv
575.889 35.8926 576.672 35.1094 577.638 35.1094 cv
cp
f
593.726 66.2124 mo
594.208 65.376 597.28 63.5527 597.28 63.5527 cv
597.28 63.5527 597.237 67.125 596.755 67.9614 cv
596.271 68.7979 595.202 69.0845 594.365 68.6016 cv
593.529 68.1187 593.242 67.0488 593.726 66.2124 cv
cp
f
628.705 67.832 mo
628.222 66.9956 628.18 63.4233 628.18 63.4233 cv
628.18 63.4233 631.251 65.2466 631.734 66.083 cv
632.218 66.9194 631.931 67.9893 631.094 68.4722 cv
630.258 68.9551 629.188 68.6685 628.705 67.832 cv
cp
f
642.102 55.6211 mo
641.265 55.1382 639.441 52.0659 639.441 52.0659 cv
639.441 52.0659 643.014 52.1089 643.851 52.5918 cv
644.687 53.0747 644.974 54.1445 644.49 54.981 cv
644.008 55.8174 642.938 56.104 642.102 55.6211 cv
cp
f
647.598 38.3481 mo
646.632 38.3481 643.517 36.5991 643.517 36.5991 cv
643.517 36.5991 646.632 34.8501 647.598 34.8501 cv
648.563 34.8501 649.347 35.6333 649.347 36.5991 cv
649.347 37.5654 648.563 38.3481 647.598 38.3481 cv
cp
f
643.721 20.6416 mo
642.884 21.1245 639.312 21.167 639.312 21.167 cv
639.312 21.167 641.135 18.0952 641.972 17.6123 cv
642.809 17.1289 643.878 17.4155 644.361 18.2524 cv
644.844 19.0889 644.558 20.1582 643.721 20.6416 cv
cp
f
631.51 7.24512 mo
631.027 8.08154 627.955 9.90479 627.955 9.90479 cv
627.955 9.90479 627.998 6.33252 628.48 5.49609 cv
628.964 4.65967 630.033 4.37305 630.87 4.85596 cv
631.706 5.33887 631.993 6.40869 631.51 7.24512 cv
cp
f
479.472 90.5615 mo
369.268 90.5615 li
369.268 22.2168 li
479.472 22.2168 li
479.472 90.5615 li
cp
.0392157 .364706 .756863 rgb
f
475.453 87.1084 mo
373.287 87.1084 li
373.287 17.8706 li
417.076 17.8706 li
422.479 21.1123 li
428.361 17.8706 li
475.453 17.8706 li
475.453 87.1084 li
cp
.635294 .8 .854902 rgb
f
421.972 20.8076 mo
417.076 17.8706 li
373.287 17.8706 li
373.287 87.1084 li
421.972 87.1084 li
421.972 20.8076 li
cp
.717647 .87451 .917647 rgb
f
414.195 29.8955 mo
379.86 29.8955 li
379.86 29.2354 li
414.195 29.2354 li
414.195 29.8955 li
cp
.635294 .8 .854902 rgb
f
414.195 33.7373 mo
379.86 33.7373 li
379.86 33.0771 li
414.195 33.0771 li
414.195 33.7373 li
cp
f
414.195 42.3813 mo
379.86 42.3813 li
379.86 41.7212 li
414.195 41.7212 li
414.195 42.3813 li
cp
f
465.938 42.7412 mo
431.604 42.7412 li
431.604 42.0811 li
465.938 42.0811 li
465.938 42.7412 li
cp
.717647 .87451 .917647 rgb
f
465.938 29.8955 mo
431.604 29.8955 li
431.604 29.2354 li
465.938 29.2354 li
465.938 29.8955 li
cp
f
465.938 55.5874 mo
431.604 55.5874 li
431.604 54.9268 li
465.938 54.9268 li
465.938 55.5874 li
cp
f
432.083 44.4521 mo
432.083 49.7563 427.783 54.0566 422.479 54.0566 cv
417.175 54.0566 412.875 49.7563 412.875 44.4521 cv
412.875 39.1479 417.175 34.8481 422.479 34.8481 cv
427.783 34.8481 432.083 39.1479 432.083 44.4521 cv
cp
1 .392157 .372549 rgb
f
420.134 40.5728 mo
426.985 44.5278 li
420.134 48.4834 li
420.134 40.5728 li
cp
1 1 1 rgb
f
495.742 93.4785 mo
493.822 93.4785 li
493.44 93.4785 493.131 93.1689 493.131 92.7871 cv
493.131 91.7686 li
495.692 91.6182 li
495.742 93.4785 li
cp
.968627 .584314 .552941 rgb
f
470.141 95.7153 mo
468.58 96.4355 li
468.197 96.4355 467.617 93.4873 467.617 93.1055 cv
467.617 92.0874 li
470.179 91.9365 li
470.141 95.7153 li
cp
f
490.784 90.8647 mo
478.108 90.8647 li
478.446 117.945 li
480.867 117.945 li
480.867 117.945 482.7 104.321 483.391 96.792 cv
485.069 96.792 li
485.573 117.945 li
487.994 117.945 li
487.994 117.945 490.852 96.7056 490.774 92.6108 cv
490.84 92.3047 490.784 90.8647 490.784 90.8647 cv
cp
.054902 .592157 .803922 rgb
f
490.784 90.8647 mo
478.108 90.8647 li
476.525 74.0273 li
476.384 72.6538 477.711 71.4751 479.399 71.4751 cv
489.493 71.4751 li
491.182 71.4751 492.509 72.6538 492.367 74.0273 cv
490.784 90.8647 li
cp
.164706 .156863 .45098 rgb
f
483.846 74.5762 mo
484.013 75.0068 484.612 75.0317 484.813 74.6167 cv
485.375 73.4595 486.617 71.7319 486.617 71.3652 cv
486.617 68.8804 li
486.617 68.3179 485.778 68.3652 485.278 68.3652 cv
483.671 68.3652 li
483.172 68.3652 482.332 68.8213 482.332 69.3843 cv
482.332 71.3652 li
482.332 71.728 483.397 73.4194 483.846 74.5762 cv
cp
.968627 .584314 .552941 rgb
f
480.936 68.3628 mo
481.582 70.5474 483.408 70.2129 485.594 69.5669 cv
487.778 68.9214 489.025 66.627 488.38 64.4419 cv
487.734 62.2573 485.44 61.0098 483.255 61.6553 cv
481.07 62.3008 480.29 66.1777 480.936 68.3628 cv
cp
.988235 .658824 .619608 rgb
f
gsave
480.935 68.3628 mo
481.582 70.5474 483.408 70.2129 485.594 69.5669 cv
487.778 68.9214 489.025 66.6269 488.38 64.4418 cv
487.734 62.2573 485.44 61.0097 483.255 61.6552 cv
481.07 62.3007 480.29 66.1777 480.935 68.3628 cv
clp
485.479 63.6938 mo
485.479 63.6938 485.479 65.1504 485.681 65.1504 cv
485.881 65.1504 486.635 64.8491 487.188 65.5522 cv
487.74 66.2554 487.137 66.959 486.484 67.1094 cv
485.831 67.2603 486.283 68.9683 487.84 68.6665 cv
489.397 68.3652 489.95 64.6982 489.146 63.292 cv
488.343 61.8857 485.781 60.3281 484.877 60.4287 cv
483.973 60.5293 478.011 63.7393 478.011 63.7393 cv
485.479 63.6938 li
cp
.164706 .156863 .45098 rgb
f
grestore
476.61 73.271 mo
472.787 83.5557 li
467.079 92.1133 li
470.08 92.7739 li
470.08 92.7739 473.477 89.9082 475.723 87.1313 cv
477.563 84.856 478.31 82.6143 478.514 82.2749 cv
478.965 81.5215 479.172 73.5347 479.172 73.5347 cv
476.61 73.271 li
cp
.164706 .156863 .45098 rgb
f
491.322 72.0278 mo
498.758 78.4194 li
499.454 79.0181 499.715 79.9819 499.414 80.8506 cv
495.692 91.6182 li
493.131 91.7686 li
495.09 81.5215 li
495.09 81.5215 489.83 77.8794 489.665 77.6035 cv
489.213 76.8501 489.589 73.5347 489.589 73.5347 cv
491.322 72.0278 li
cp
f
478.413 117.91 mo
480.874 117.91 li
480.874 119.798 li
475.882 119.798 li
475.553 119.798 475.439 119.058 475.728 118.898 cv
478.413 117.91 li
cp
f
485.646 117.91 mo
488.107 117.91 li
488.107 119.798 li
483.115 119.798 li
482.786 119.798 482.673 119.058 482.961 118.898 cv
485.646 117.91 li
cp
f
gsave
490.784 90.8647 mo
478.108 90.8647 li
476.525 74.0273 li
476.384 72.6538 477.711 71.4751 479.399 71.4751 cv
489.493 71.4751 li
491.182 71.4751 492.509 72.6538 492.367 74.0273 cv
490.784 90.8647 li
clp
477.566 85.5151 mo
477.35 85.5151 li
477.35 76.3223 li
477.566 76.3223 li
477.566 85.5151 li
cp
.054902 .592157 .803922 rgb
f
grestore
418.455 95.1069 mo
431.481 95.1069 li
431.134 122.936 li
428.646 122.936 li
428.646 122.936 426.763 108.936 426.053 101.198 cv
424.328 101.198 li
422.578 111.37 li
415.345 119.139 li
413.445 117.469 li
418.931 109.063 li
418.931 109.063 418.431 98.6982 418.465 96.9014 cv
418.398 96.5869 418.455 95.1069 418.455 95.1069 cv
cp
.635294 .8 .854902 rgb
f
418.455 95.1069 mo
431.481 95.1069 li
433.107 77.8037 li
433.253 76.3926 431.89 75.1812 430.154 75.1812 cv
419.782 75.1812 li
418.047 75.1812 416.683 76.3926 416.828 77.8037 cv
418.455 95.1069 li
cp
1 .392157 .372549 rgb
f
425.031 77.0142 mo
422.724 77.0142 422.737 75.4453 422.737 75.0684 cv
422.737 72.5151 li
422.737 71.9365 423.6 71.9854 424.112 71.9854 cv
425.765 71.9854 li
426.277 71.9854 427.141 72.4541 427.141 73.0322 cv
427.141 75.0684 li
427.141 75.4409 426.897 77.0142 425.031 77.0142 cv
cp
.968627 .584314 .552941 rgb
f
428.575 71.9824 mo
427.912 74.228 426.034 73.8838 423.789 73.2207 cv
421.544 72.5571 420.262 70.1992 420.925 67.9536 cv
421.589 65.7085 423.946 64.4263 426.191 65.0898 cv
428.438 65.7534 429.238 69.7373 428.575 71.9824 cv
cp
.988235 .658824 .619608 rgb
f
417.902 75.749 mo
417.902 75.749 411.879 82.1733 409.754 84.1968 cv
408.582 85.3135 409.754 86.1509 410.424 86.9878 cv
412.281 89.3101 418.295 93.4634 418.295 93.4634 cv
417.96 89.9468 li
414.331 85.7041 li
414.331 85.7041 419.436 81.7627 419.605 81.479 cv
420.07 80.7046 419.683 77.2979 419.683 77.2979 cv
417.902 75.749 li
cp
1 .392157 .372549 rgb
f
432.076 75.749 mo
432.076 75.749 438.1 82.1733 440.225 84.1968 cv
441.396 85.3135 440.225 86.1509 439.555 86.9878 cv
437.697 89.3101 430.747 93.6099 430.747 93.6099 cv
430.867 89.8882 li
435.646 85.7041 li
435.646 85.7041 430.543 81.7627 430.373 81.479 cv
429.908 80.7046 430.295 77.2979 430.295 77.2979 cv
432.076 75.749 li
cp
f
431.168 122.9 mo
428.639 122.9 li
428.639 124.84 li
433.77 124.84 li
434.107 124.84 434.224 124.08 433.928 123.916 cv
431.168 122.9 li
cp
.164706 .156863 .45098 rgb
f
415.345 119.139 mo
413.445 117.469 li
412.164 118.925 li
416.017 122.313 li
416.271 122.537 416.86 122.043 416.746 121.724 cv
415.345 119.139 li
cp
f
427.221 63.7246 mo
426.215 62.9092 425.267 64.2271 424.15 64.6177 cv
423.034 65.0083 421.108 63.9756 420.048 65.0923 cv
418.987 66.2085 420.271 68.2183 420.326 69 cv
420.383 69.7813 419.816 71.6064 420.494 72.6841 cv
421.108 73.6611 422.644 74.2192 424.346 73.4097 cv
425.46 72.8804 424.066 71.1211 423.844 70.1719 cv
423.62 69.2231 423.788 68.0508 425.128 69.0278 cv
425.734 69.4702 426.807 69.9751 426.719 68.4697 cv
426.606 66.5713 429.426 65.5107 427.221 63.7246 cv
cp
.262745 .588235 .792157 rgb
f
402.607 75.6221 mo
401.76 76.0933 401.118 78.2588 400.608 82.498 cv
400.099 86.7373 400.209 87.4648 400.449 87.9453 cv
400.688 88.4253 404.675 94.0596 404.675 94.0596 cv
406.854 93.8096 li
404.104 85.7041 li
404.104 85.7041 406.317 80.4189 405.39 75.5625 cv
405.252 74.8423 402.607 75.6221 402.607 75.6221 cv
cp
.180392 .701961 .858824 rgb
f
398.063 64.5078 mo
398.063 64.5078 394.475 63.8115 392.761 67.5073 cv
392.252 68.605 392.088 70.1748 392.159 71.5317 cv
392.19 72.1206 391.462 77.8164 392.053 77.8164 cv
396.23 73.7456 li
398.063 64.5078 li
cp
.290196 .290196 .6 rgb
f
392.084 91.9658 mo
403.962 91.9658 li
403.646 117.341 li
401.377 117.341 li
401.377 117.341 399.659 101.987 399.012 94.9316 cv
397.439 94.9316 li
396.967 117.341 li
394.698 117.341 li
394.698 117.341 392.021 97.439 392.093 93.6021 cv
392.032 93.3154 392.084 91.9658 392.084 91.9658 cv
cp
.164706 .156863 .45098 rgb
f
392.084 91.9658 mo
403.962 91.9658 li
402.327 85.9009 li
405.445 76.1885 li
405.578 74.9014 404.334 73.7969 402.752 73.7969 cv
393.294 73.7969 li
391.712 73.7969 390.469 74.9014 390.602 76.1885 cv
393.972 85.9009 li
392.084 91.9658 li
cp
.054902 .592157 .803922 rgb
f
398.08 75.4683 mo
395.977 75.4683 395.988 74.0376 395.988 73.6938 cv
395.988 71.3657 li
395.988 70.8384 396.775 70.8833 397.243 70.8833 cv
398.749 70.8833 li
399.217 70.8833 400.004 71.3105 400.004 71.8379 cv
400.004 73.6938 li
400.004 74.0337 399.782 75.4683 398.08 75.4683 cv
cp
.968627 .584314 .552941 rgb
f
401.313 70.8804 mo
400.707 72.9277 398.995 72.6143 396.948 72.0093 cv
394.9 71.4043 393.731 69.2539 394.337 67.207 cv
394.941 65.1597 397.092 63.9907 399.139 64.5952 cv
401.187 65.2002 401.917 68.833 401.313 70.8804 cv
cp
.988235 .658824 .619608 rgb
f
gsave
401.313 70.8804 mo
400.707 72.9277 398.995 72.6143 396.948 72.0093 cv
394.9 71.4044 393.732 69.2538 394.337 67.2071 cv
394.941 65.1596 397.092 63.9908 399.139 64.5952 cv
401.186 65.2002 401.917 68.833 401.313 70.8804 cv
clp
397.055 66.5054 mo
397.055 66.5054 397.055 67.8706 396.866 67.8706 cv
396.679 67.8706 395.973 67.5884 395.454 68.2471 cv
394.937 68.9063 395.083 69.605 395.694 69.7461 cv
396.307 69.8872 395.904 75.3848 394.444 75.1025 cv
392.985 74.8203 392.865 67.4468 393.619 66.1289 cv
394.372 64.811 396.772 63.3521 397.619 63.4463 cv
398.467 63.5405 404.053 66.5483 404.053 66.5483 cv
397.055 66.5054 li
cp
.290196 .290196 .6 rgb
f
grestore
403.677 117.309 mo
401.37 117.309 li
401.37 119.078 li
406.048 119.078 li
406.356 119.078 406.463 118.384 406.192 118.234 cv
403.677 117.309 li
cp
.988235 .384314 .384314 rgb
f
396.898 117.309 mo
394.592 117.309 li
394.592 119.078 li
399.271 119.078 li
399.579 119.078 399.685 118.384 399.415 118.234 cv
396.898 117.309 li
cp
f
393.541 94.0498 mo
395.648 93.1675 li
395.648 93.1675 396.279 95.0122 395.237 95.6611 cv
393.932 96.4746 393.541 94.0498 393.541 94.0498 cv
cp
.968627 .584314 .552941 rgb
f
391.178 74.6343 mo
390.329 75.1055 389.691 77.5449 389.182 81.7837 cv
388.672 86.0229 388.782 86.7505 389.022 87.231 cv
389.262 87.7114 393.541 94.0498 393.541 94.0498 cv
395.648 93.1675 li
391.88 85.9189 li
391.88 85.9189 392.966 80.1499 392.799 78.2183 cv
392.605 75.9912 391.178 74.6343 391.178 74.6343 cv
cp
.180392 .701961 .858824 rgb
f
406.854 93.8096 mo
404.681 94.0425 li
404.681 94.0425 404.812 95.9878 406.022 96.1841 cv
407.541 96.4302 406.854 93.8096 406.854 93.8096 cv
cp
.968627 .584314 .552941 rgb
f
397.475 65.0972 mo
396.832 65.0972 395.6 63.1689 396.725 62.0977 cv
397.784 61.0889 399.5 62.0127 399.563 63.1152 cv
399.67 64.9902 398.867 65.0972 397.475 65.0972 cv
cp
.290196 .290196 .6 rgb
f
460.296 94.6196 mo
449.345 94.6196 li
449.637 118.017 li
451.729 118.017 li
451.729 118.017 453.312 106.246 453.908 99.7407 cv
455.358 99.7407 li
455.794 118.017 li
457.886 118.017 li
457.886 118.017 460.354 99.6665 460.288 96.1289 cv
460.344 95.8643 460.296 94.6196 460.296 94.6196 cv
cp
.968627 .584314 .552941 rgb
f
449.308 117.983 mo
451.673 117.983 li
451.673 119.798 li
446.875 119.798 li
446.558 119.798 446.449 119.086 446.727 118.933 cv
449.308 117.983 li
cp
1 .392157 .372549 rgb
f
455.573 117.983 mo
457.938 117.983 li
457.938 119.798 li
453.141 119.798 li
452.823 119.798 452.715 119.086 452.992 118.933 cv
455.573 117.983 li
cp
f
449.741 86.9849 mo
459.964 86.9849 li
459.964 86.9849 462.222 88.0449 462.489 91.4795 cv
462.978 97.7383 459.058 108.75 459.058 108.75 cv
449.411 108.75 li
449.411 108.75 446.206 95.6089 446.914 91.4795 cv
447.482 88.1646 449.741 86.9849 449.741 86.9849 cv
cp
.509804 .188235 .141176 rgb
f
459.964 87.1221 mo
449.741 87.1221 li
449.058 74.6606 li
448.952 73.6445 449.935 72.772 451.185 72.772 cv
459.238 72.772 li
460.488 72.772 461.471 73.6445 461.365 74.6606 cv
459.964 87.1221 li
cp
.854902 .247059 .227451 rgb
f
gsave
459.964 87.122 mo
449.741 87.122 li
449.058 74.6607 li
448.952 73.6445 449.935 72.7719 451.184 72.7719 cv
459.238 72.7719 li
460.488 72.7719 461.471 73.6445 461.365 74.6607 cv
459.964 87.122 li
clp
458.78 72.4194 mo
458.78 74.4829 457.107 76.1558 455.044 76.1558 cv
452.98 76.1558 451.308 74.4829 451.308 72.4194 cv
451.308 70.356 452.98 68.6831 455.044 68.6831 cv
457.107 68.6831 458.78 70.356 458.78 72.4194 cv
cp
.968627 .584314 .552941 rgb
f
grestore
441.526 71.7124 mo
442.353 71.1284 li
442.665 70.9077 443.098 70.9819 443.318 71.2944 cv
444.617 73.1323 li
442.683 74.5493 li
441.32 72.9741 li
441.024 72.5703 441.117 72.002 441.526 71.7124 cv
cp
.968627 .584314 .552941 rgb
f
450.347 72.9502 mo
449.338 73.3423 448.665 74.5195 448.272 75.8647 cv
447.881 77.2095 446.367 80.0679 446.367 80.0679 cv
444.617 73.1323 li
442.683 74.5493 li
442.683 74.5493 443.581 81.8696 444.742 84.3838 cv
445.414 85.8408 448.329 85.0562 450.683 79.8438 cv
451.536 77.9531 450.347 72.9502 450.347 72.9502 cv
cp
.854902 .247059 .227451 rgb
f
460.547 73.1743 mo
460.547 73.1743 462.061 74.3511 463.237 76.3691 cv
464.414 78.3867 467.039 84.4697 467.319 85.0303 cv
467.6 85.5908 468.618 93.127 468.618 93.127 cv
466.488 93.5752 li
463.489 84.8042 li
459.37 78.2744 li
460.547 73.1743 li
cp
f
468.618 93.127 mo
466.488 93.5752 li
466.488 93.5752 466.292 95.5933 466.432 95.7612 cv
466.572 95.9292 467.356 96.6582 467.665 96.77 cv
467.974 96.8823 469.318 96.3218 469.543 96.0977 cv
469.767 95.8735 468.702 93.1548 468.618 93.127 cv
cp
.968627 .584314 .552941 rgb
f
457.222 65.4209 mo
457.222 65.0474 459.688 61.7593 459.912 61.7593 cv
460.136 61.7593 462.153 65.1968 462.079 65.5703 cv
462.004 65.9443 457.297 66.3179 457.297 66.3179 cv
457.222 65.4209 li
cp
.509804 .188235 .141176 rgb
f
454.309 73.6211 mo
455.72 73.6211 li
456.157 73.6211 456.513 73.2207 456.513 72.7271 cv
456.513 70.9888 li
456.513 70.4951 456.157 70.0947 455.72 70.0947 cv
454.309 70.0947 li
453.87 70.0947 453.516 70.4951 453.516 70.9888 cv
453.516 72.7271 li
453.516 73.2207 453.87 73.6211 454.309 73.6211 cv
cp
.968627 .584314 .552941 rgb
f
450.974 68.4175 mo
450.687 70.396 452.266 70.7998 454.244 71.0869 cv
456.223 71.374 458.059 70.0029 458.347 68.0244 cv
458.633 66.0464 457.263 64.2095 455.284 63.9224 cv
453.306 63.6353 451.261 66.439 450.974 68.4175 cv
cp
1 .533333 .376471 rgb
f
450.974 68.4175 mo
450.687 70.396 452.266 70.7998 454.244 71.0869 cv
456.223 71.374 458.059 70.0029 458.347 68.0244 cv
458.633 66.0464 457.263 64.2095 455.284 63.9224 cv
453.306 63.6353 451.261 66.439 450.974 68.4175 cv
cp
.988235 .658824 .619608 rgb
f
gsave
450.974 68.4175 mo
450.687 70.396 452.266 70.7997 454.244 71.0868 cv
456.223 71.3741 458.059 70.0029 458.347 68.0244 cv
458.633 66.0464 457.263 64.2095 455.284 63.9224 cv
453.306 63.6353 451.261 66.439 450.974 68.4175 cv
clp
451.478 65.6172 mo
456.311 68.2534 li
456.311 68.2534 457.23 67.2373 457.631 68.2446 cv
457.978 69.1157 456.598 69.6235 456.547 69.8843 cv
456.132 72.0376 457.813 73.2886 459.041 70.8335 cv
460.27 68.3784 459.82 64.2749 459.499 64.127 cv
459.177 63.979 456.146 62.0967 455.905 61.9858 cv
455.664 61.8745 452.688 64.1084 452.366 63.9604 cv
452.044 63.8125 451.478 65.6172 451.478 65.6172 cv
cp
.509804 .188235 .141176 rgb
f
grestore
387.938 72.6987 mo
388.29 72.1689 388.446 70.7339 388.009 70.4751 cv
387.578 70.2207 386.401 69.4219 386.014 70.3638 cv
385.515 72.2666 li
387.486 73.376 li
387.938 72.6987 li
cp
.968627 .584314 .552941 rgb
f
362.51 89.5615 mo
375.441 89.5615 li
375.096 117.188 li
372.627 117.188 li
372.627 117.188 370.757 103.29 370.053 95.6084 cv
368.341 95.6084 li
367.826 117.188 li
365.356 117.188 li
365.356 117.188 362.441 95.5205 362.52 91.3433 cv
362.454 91.0313 362.51 89.5615 362.51 89.5615 cv
cp
1 .392157 .372549 rgb
f
362.51 89.5615 mo
375.441 89.5615 li
377.056 72.3857 li
377.2 70.9844 375.846 69.7822 374.124 69.7822 cv
363.827 69.7822 li
362.105 69.7822 360.751 70.9844 360.896 72.3857 cv
362.51 89.5615 li
cp
.635294 .8 .854902 rgb
f
369.038 71.6016 mo
366.747 71.6016 366.761 70.0439 366.761 69.6699 cv
366.761 67.1353 li
366.761 66.561 367.617 66.6094 368.127 66.6094 cv
369.767 66.6094 li
370.275 66.6094 371.132 67.0752 371.132 67.6489 cv
371.132 69.6699 li
371.132 70.04 370.891 71.6016 369.038 71.6016 cv
cp
.968627 .584314 .552941 rgb
f
372.557 66.6069 mo
371.897 68.8354 370.034 68.4941 367.806 67.8354 cv
365.577 67.1768 364.304 64.8364 364.962 62.6074 cv
365.621 60.3789 367.962 59.106 370.19 59.7646 cv
372.419 60.4233 373.215 64.3779 372.557 66.6069 cv
cp
.988235 .658824 .619608 rgb
f
gsave
372.557 66.6069 mo
371.898 68.8354 370.034 68.4941 367.806 67.8355 cv
365.577 67.1768 364.304 64.8365 364.962 62.6075 cv
365.621 60.379 367.962 59.1059 370.19 59.7646 cv
372.419 60.4234 373.215 64.3779 372.557 66.6069 cv
clp
367.922 61.8442 mo
367.922 61.8442 367.922 63.3301 367.717 63.3301 cv
367.512 63.3301 366.743 63.0229 366.18 63.7402 cv
365.615 64.4575 366.23 65.1748 366.896 65.3286 cv
367.563 65.4824 367.102 67.2246 365.514 66.917 cv
363.925 66.6094 363.361 62.8691 364.181 61.4341 cv
365.001 59.9995 367.614 58.4106 368.536 58.5132 cv
369.459 58.6157 375.541 61.8906 375.541 61.8906 cv
367.922 61.8442 li
cp
1 .392157 .372549 rgb
f
grestore
377.119 71.8325 mo
380.417 78.1777 li
385.515 72.2666 li
385.515 72.0449 387.879 72.9316 387.584 73.4487 cv
387.104 74.2876 383.815 80.9854 381.229 83.7192 cv
379.786 85.2446 375.549 79.6699 375.318 79.2861 cv
374.95 78.6724 374.451 74.8721 374.382 72.7515 cv
374.366 72.2617 374.732 71.8442 375.22 71.7939 cv
375.983 70.4194 li
376.406 70.376 376.971 71.4336 377.119 71.8325 cv
cp
.635294 .8 .854902 rgb
f
361.961 70.3457 mo
361.961 70.3457 355.982 76.7231 353.873 78.7319 cv
352.709 79.8398 353.873 80.6714 354.538 81.5024 cv
356.382 83.8071 362.352 87.9307 362.352 87.9307 cv
362.019 84.4395 li
358.417 80.228 li
358.417 80.228 363.483 76.3154 363.652 76.0337 cv
364.113 75.2651 363.729 71.8828 363.729 71.8828 cv
361.961 70.3457 li
cp
f
375.131 117.152 mo
372.62 117.152 li
372.62 119.078 li
377.712 119.078 li
378.049 119.078 378.164 118.322 377.87 118.16 cv
375.131 117.152 li
cp
.164706 .156863 .45098 rgb
f
367.752 117.152 mo
365.241 117.152 li
365.241 119.078 li
370.333 119.078 li
370.67 119.078 370.785 118.322 370.49 118.16 cv
367.752 117.152 li
cp
f
gsave
362.51 89.5616 mo
375.441 89.5616 li
377.056 72.3857 li
377.2 70.9844 375.846 69.7822 374.124 69.7822 cv
363.827 69.7822 li
362.105 69.7822 360.751 70.9844 360.896 72.3857 cv
362.51 89.5616 li
clp
376.215 84.1045 mo
375.993 84.1045 li
375.993 74.7271 li
376.215 74.7271 li
376.215 84.1045 li
cp
.054902 .592157 .803922 rgb
f
grestore
363.349 87.7642 mo
363.983 87.7104 364.372 87.0762 364.307 86.4424 cv
364.097 84.4116 li
364.074 84.0225 363.461 84.1401 363.071 84.1621 cv
362.019 84.4395 li
362.352 87.9307 li
362.352 87.9307 363.097 87.7856 363.349 87.7642 cv
cp
.968627 .584314 .552941 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.2.1%%For: (\617\750\754) ()%%Title: (1808.i216.037.P.m005.c20.video tutorials online training courses set [\757\760\745\756\741\760\740\747\756\742\740\755\755\773\750].eps)%%CreationDate: 18.08.18 11:04%%Canvassize: 16383%AI9_DataStream%Gb",Kq*NiIo'lAT]L09WdM@F9f`p/n&41(uTg8@+R`%IKZSY>$l2BZ:m,-#X[cPG!bT8aX]ff(:g1EgC9d=@q[b0k(C\?h0Z1[Q`%:/c0@L2Q''7F*Qak032YX89!N*@R+a\n5G<4g3V?%AgJFD)2R#j:0q"C8Ft=hsd)JSPH6NFh;E@^X_R$jjsFBc.nV3%)9<_c^sU7%rlGn'[sC(k>M(bCb&uSl[lOu-QXb:E@JU")IG]`>:`VbFfK.Z$!+aFAojCnK0GL,7h'gG%!Kd<)IGORVlePmfmF>Fcmn]Te@?^5)%pUmrXiR$(P:5(oRn7/W^*P$U5a#hL6V;PkP8IepKQJ6:%TM(OeFJI8+7Ju-%J2YQcT*5u0*u,aoKV,ZBShm=7SXgC:U%.$.Ou#f,%<>4KE&adp'+H_!I?DHo"4c_S#Ro\Ci/SLRZs2\P8=eIsD>;4U?_;HESbVMsjEu&829m*P-)&A5Lm/<o1s"*8<H#CmmE'>$u]tO:B%J74aY_LN@2h<k)GkC'\n"/7LQ3LgC[Xd\DTP%!1Pmh/DB'^<BF^qSP`p3JDC>CIYsY`uI/n^H6AUZ2:GE2KVIKC-,!gi%V6&MC#n%SR]GM^frTh4f@S6Q.$SJRuu0:M05O]XH0cAAh@E5%a;TQ:Aq]Z>["@_ge:ZBSD<>XCXJBR[%,D@6\E_>dU+Bsb=;jEpNg.EN*=aA%f!_BRXlQtbT\K-OD6;>RRWm^p&a"0KVRt_Hk.cVBkng;TDfZWVqn_#&PccsMc'c'5Mg_hipYi$0:93:/C`]urjpJNITpLDZFM&Un%nO[VY^'=W"h0St?f\3QO?j0'N^M/T!9fL=8\cI:4Kmu#N?Sr)g1#O^;+5pS(_e8a[)*-R)HLm3\\(]J]n1j)aCUoLDV`f;N420Hk%4#qn"E$4nKZ3oIi`o(2.%5Fep^gGoLb(dmM?mTX:^n*B9h1qRPofk,K(T<s8cnN_u?F<:'W(;`[_ue@_P<8U@"^<!LV7#+Pi@jsm%,gms^#ZI!5KJ9,qLfdD[C5F%^W1q*fN<B%B<]KqMhsZaWDKYMfHP.pch?g+cY?C0tS:@QX/(,R1?Sa)PY_`$1R<!XS>cjQ%Z.&05%jRue0T15^c9#q[!^0>u\3-k9i2?!];=B%'#Lq]1J\Z,,H6gLI>l4H+j,D4dF$I.rbkB)*M(ZMm#7oL(@A7C*F9j4rXUCn0VU8\,"%keDfQPeMb.X$S4:RLfZA+!EM/%6kj3Rd9kDj,VkXWE1_h"&738JR6bNnSX0!#D,e^7/L*Qpit+/M>fCC>CO9?huZHB+U]D2]b0Lf%@"skaioos1!`>2GFH%bN#k84N:ihcQU/h@fV@.\]hP`'_:9S!s]tM2:T%?NHe8sr`3iK4og3IM&]mngDoqYJMm'rUt2ceJeKKcCp%_5,BDp$4c%CZb\#2'S3W7?X,R^lWdmphf8hPfAI$eF6es^Nfe`Uhh5-/<%%Y<JCI[pL+/O2SaQL1&RDCRT]Qq<I"sQ4ans4X(\?A%S\O36=O,1ig[L^%dfN@M;a9XC4AbnG1Q-r^`uQR*4fS=dNn;5,[G9bRZPWRps69JNPAu%`:0!P3-b72ZBWub%0D!6Wqn1:4=$Jn5%N@<A")cR/j&'E-m,o6O1CV>qR8;La,N^J^u9IYuU&YUG<9]Rg$7OqO7g6#%ET"gJ/pcG#k+2o[CjT")Pa:"IB"i#KF*iK`,W7NAk%J7[kA%!>`!>HcpEm"<&Nod6EZlV&Kfd.0'Sd;84ClC\e<@aV#](nsVG%Ut-qIo5;BF!<f'DV$C_]\e.q@1(sI;#K$edO$0flo2AR%4nh_jrlAZS*>Mg?'=$eHh7fMu-j[tlOW>YNX,\(a6m_*b:D*fX@)l+?RTY/l_$QL:g)`\>-F4gE3Ls*JhAiqJAGq.7Y'p4pXa[25%D/eYo"X7[M\A>SWenVQr?#l5X/qp>C!#_IDqd(h!8%Ia*@EKReb[JX6VX&GnN;o]kFOY<Hiq2-:lJ9Zq8jMO9?)G_]r%7N--82^L%A'-p2b[X8n5FKQVGtb]d@l!J*a-6dd.JK2F[+jnIU`0.&3Yk0QO6>u&\@'mPs3^c^Xr#0q\jWYSFXCn5="AQGlBD[I`i"nk?TU<(%IXdT"\V4Y]L>20?lYa$g)QRR/>URjs=pg[&RnaKsQ9lkKDF,\JRefr5LK[2<?*?2!U>NiL]1k9@U4qp..>k*4<B<hFccKiR6.QQr%r=kAM;=*!af&U]DDSL8R<kZ2HRgP3Yl"lWWC%QXL@Cna=8R,e_?i,#qjCne-p3jEVrboF!oU755)6RuXGbmlFXjue3gp<Xge[S=S%5.G=r^PQLshdeeGmj=Pu2:^ogeO;CF$pLeSHp^rM:937<<Dj!QXsW)hm>2!K&aK<1=X82;#(F!__:44Ve*?E%TE0'@UA<9DW$`N%%VtsrPA!uZ?[%9DP;'?'fkf-SjG,HeMcKS&ZSJ5$FKq1>Jo`g0=G3Zc)L=])'F*K2L=aCN2[7]ecp2dE#=OX&B"YsA,7Uf/O)E^C.%F6\qr[_0njLU=Z^Ak;1jFJl'eFT]_U8^;+>h2Qdpp%IR4h!#7FKf%7pC*S:nLH`D^12F"X?gN$os!I33h8Mc"2*^mbBud@+q^Ih-%;"!&j=KCJQH?[8`]+^T*PD;?p]8.o7Iu31CC+R,#VgX0+&5H7Gdpr2d!bod[dOc5%=)giEl;5R?d+&uo[l7/>c&&$+?*TT;6Df7S%?>n!bQ)rYCQQCErc4d+D51@)jn)dd:aTgu]3t"23n+P>&Kg&2h/PNjpR#Jr4.u[\XML/;LM^52u-D'*o`d*H01VK:V[oq0#:7aPr%06\c'OC%?[GN=5DDTUUhgMD38T'+SO$7Rl/L2'sT>.]uB;U16PE/bgc&uBo`mCQ@/?VT3ogUB^R1gF^/ns8<8HPY#07(K"PC@'tK%4R#cOgFt$7Q*P7AFj&jue+Dsllb1m98u*2O%;Xb9T12D;L@WeSo2?WK]2^d29Qme@Ij%V-i@a7]*2Q:73NDt*Wn\fu#$C'?S";]%%JJERa._b^;)3:`W%7Cu$PI]XQX8PM;bgrhJMd5u0Z0?LD##@^e<ib9PE@K6@94%Y'K?5<?_C4XB/WG0&>4LV(D_dBZEM_<kGFV-p%MIKL$lg;)XGV#td)#@e&f2>kf_[B24/T]EU2,Yh5.Wt](+9"LmhoQ9,];4V5dMXaOi!l+GDR81jUDU-^$icN!(U[X`Bb33Wo]dGf%K1LR2e40ME1l*(Y<i29Ke%0qqAfAVDHUTI(9i8AH&YaRV&g:020_HpU<[L.,[dp:X&L,KDRGL>fgT9_@G9@JA"V+ZZ7$\+@,spD;%6jWJR-:4MjD,[K>mQ_sa$65r"VS/OW&8<OWXY^!;,skT"5U&T'*2\0.?e-jJmE+BZ_mRu\i.eab)_^\QP;\ZQrUT3%RA]^r!SOYo%!&rF'mCtBXY^''>lRr`#1TGJB1erpQ=E],7p#0r3?3i^CAK$te)D@c9Io8O+`]=c0R=NE_e4g:KoaUsW"7!>;-P+msM5O$0h.cDD%R895qb/@4*Su,7FakId?f=V&D/QB7F\)VDI#$/0!d]=#G5Ij*-A"B``s69qGQ(0ippPU9-RjS),.XLJ/d[bhH"_?:]rEmn.n_Lqb%f6cLn=se%*CU?Q;&TCCGWi.jlhGLsHqL(@a;5ilm]i(;Ohbqj;a/Ib4lSg/"P?knBmF^3nb;Ud4T^:g#)nUA_9nC.qhd:AW(I24a%,BE(TVW:\iri>,<mkT9FJ!],Lg_FAphh^BdrdKc>Z!6Y79353^7:(2lAssNSV`n*B'c-h;AF4.kjo:f3$WDD`38J>:<WQD6*Ze,K%ZMf:=3VB@5PB8i8F[I?9QFVHW@e.l9D4&C32f?KWSNQNYP3;Ha"A]B)O2=X5\p>%8:T*&2Bm@<*P5c:HZa@17e>ff1.>(iud]VT(%\(e"5DGSp`Cg<M0b`hDC<OQD*m9!]dNofq?GW%.;2;>AUXi,-qa"huo+PX0FFtBs?bA>3Snu-G>a-*Magp>Lpj`Heo[S&UqOcq5R%3+TXcfe-jE9.:PSYNPebIjU?9Y90D/i:hpT?@b&''nbVGE4^YHpUt\C3QDJ&+YpJ%d8@[EXgOUjWgbG<qbW"4fBnc5EPHPtk'fo<%`Cj"+'Ur.B.&OoL=!hVnahgVP3%54_A`9FH'2D/2Tk,sTRu8`OmT1Cs:/$Lk4NkbccYG.ce`JH9cD_npQN,H=^=QTWGdZX6a)-jl%K[#*C=+@^#j?T@#_j>IB)QDrn07/%$.dm?%NIGfq.qu:'%LV&pPbV2*GHlbBk,&b:9&.@g#_dJ\VDX0q3uD\R*;M%(jL]94$MJT)%C9kdUE,#],fDf]?DiuI<2-f/Gp(pZfPs1p$>U,/4A?h%DG*0`rZIhS]]?"FtG9M,Q+r*4`+T`Mq_T61&;e*p[Z&;2YMjr'G[m.]>%)F?*(_T00?Z'W(F*<4T^?p%)Pi]e>t\KNtS)is'X3+8?uahN\+:[=/@'XnBZ8+NQ/@r$CUfi;=lJ*hu2Do\u@N&>7ZCg'5*VTWk/%lI2cVZKl)!7[K[jX-m.>Q<Fko]dh4.Q+=$Kb,"3.G,7m4!SgN7\,T'g]7(.2hMGHPrUV+Z1u_7MCS#p#:3N^!3uE?'-;8kJXZ#ul%4t:X@o-_N(8',^qkl4EDe=To)e2fYUH9Ie^*Ntc(VV[bQ]M5p72f.r(nF96kiR>Z!]Cr1=jp0^S5=j=ifnkp^`(QAf&sg0/5d-:O%Mgt$"1c\:)f_+R`]BkY4W9.UpV(b&N_X^AXp(Xsu9phML,iHF_)=*iL"L'Ei0YK*W/WBnc[l4q]@d$r??qNQ&>I09p8AK_q%@n7u%A<DBm(dJiCaSa@mjNnG&\S4s)m\1M>e8_NPf72PTVb"qk[3h"YB`"5QWEs3!aL.X?hs8g>ePRJ<fpflgqfP-J;9i;&lVCI':VP*6%d-Z/@Nq^0S26/0RMLjd=+%r,oHJ.XD[UDK#8])X\m.E#ua\e\0^Fpo;%X1c^B6U84Sr).V.G<N+_s?Coh49]uA_u:E;t?,Zm-(iT%R%UQ#)#Wd81aS-lG1:4`;J6aoFo>rGY3sl-)i:#Z^Bs!o+t!3cc=,T8+`j-iB%a!k,JDeMH+#bfI6R%lbHi2+aeFR4?Ls`/,>*SW%Q:H%<ESM8pRF3X\'I07,*2:ML3#Hd3rGG,8HBSc6>7s08Rk\U<c39mhkIB<9(c3k9]9=V*GtaXHF=f!eo9hA+.J&r_T.0B"DSOLS%ffZs+51A?03kCeee)V28\'/QTN)8XnAPQ1d1hBE\jttn#VocRb:/`&^18j@`&$4Yp[jfk[Vq5qbfP8rs4)PE(HPaAm4*'``A6V/X%ZTap^9`:GP\+IUeG5#<dir7.KeodLm^CcuR^DOQWN<.WOO7g>niifU>*Vs[HF?.B-XgVH9p\leA#mkd%IoAN)cAPtX12<huAuC*;%UdJYWQUi!lf.C/LG9u<oXp[Fj2Y*2T0k<?CqJb`JST8Li6V?1SpS@dK8TUggeJ%9^)[=JmIonPhdb(V3BrmCui@./a]TTbTC=4WJ%.9rgf$J0e,EO(;Nmi8l<0-uP9V).l89VYD\b2Uq:PLRoIhSF^q]/rg3l]\0_D0]=aH7p;L'"_`ohNfhbKma?$QG911<i3X08:P"6%;tJI^DcVDWqS2Dudn=3?%bI(71HlXdH96Sc7V8o9(<aZJQHWaIN%s[UQ$E`hQFddC^*<rbB6uQ55A?g%!T3Oi2("LdFO\PD''Z[F%oq+(/4S2MJcLT>Ako>!Vq/^iqib,RMH9/'^4EU6#L@06M]p"2;k-j\^U!Q\-2lB`Fh3"egi;NIFQegj;N_Gd6Va?bO?'^*-R4asm%LL?#4=_^BeWNt9Tb&0uh21($m3r!XtU>Qe`s69f-McbIQDCE%/n(cd=CKBl]h3<-JJY\,]PMAJdl;lcMdVtnZaYsK![1HA[MYND-%.>1A_P!5^E3C12i?8YZ^Cc7r$G>+%G/R8'm*b0!@6CPoZIj[pV4*KGrh0e8[Q<kQ80\M&Jg7&0[DXl6X<tq+6Ah:Boj7qRB/a-D_%"TPX#BUrX2:%;g\H;ect=#n:GOWF=ClJBnB\@I#7:/(&&;H#[lH)iK"R4VM1.!B4NrWab;V^&BDY'4b1KJ5!jm(%m#pc-fT4"WBO%UePNO8/[hR'u%6EGP]SLmOaS/G@2cZXdkQdX)hu"RnM?oQdiVtQARVdU-L=7Sg<.\\BXG=MTaAEB27?LkeUDcaeq%9E$cNCW\%B!%OrL`=Zfltu"_CLFI/cFu;4MVmApJZgQ'Z\0SY,/cOkIUKWZ8*!CZ3G]#Vm!4n@$m&JL9USPQ_OLHH5]Ur56b5p:2Y4r0KaJ[tbdO%G%VTJ1gBu:kmP^m\O*XQb\<N&6*[mQBUU]\%fU]=O[YEkrFRX/0P,.h`2tt>]KfV]!>@^67?RDA8p`_1H@".7.=*JTh0N)hVUIU!%``CLNZbP<.A`r)h*sg9Zm<[;`VrlP!7p\m96csfPoQNdH]nR'4!;'&^<H;<SYMYUM%D\TZB;e@<L/3?T9Q!U?-^Yk"/PM2[if;dX%,p6.Y]k2+DqI<#jp#?/+-4`3WEE%G+JB*UsXjsNGlb*njQ7H8GgQA0G+;@kk3.o+LOBU"VZ.8DdF76`tqB)oO?)udIY2=+RAes"u%or<E["8s?KLIr>E//+/6Ls/7t-6b5X3D)]nR>B'TA0rKV&XeKs;'OH16t@Vg1D-%3a@o!^&<TZ.6t@Vg1D-%3a@o!^&s6oU+u9h!%M9&@YAg28[Lt"0lR>K!Y6tRVu'9T%XUn3Fa9LNJ:P1+,l"t5a\R&V#hY.UVML'dl0bgGX,ap^pOpq^K!e)>pf.ZU(sjNa9(G,UgV%^"$ed8\Q+2I*L_f-=8PB1_Z"H6tDU-Sr(N^6tRVu'9OM.A<qG2M9&@YAg/uDOX!;jQ&3RU6tRVu#\5E1juA[$;>=$f<")eWNaf#5%LQ@U"D+/[<7nZ]"L/Cb$Zu+(/6CF6p*@5.#P<G=ebp9A9@24^b->j(A9Ois>dZeICih35M/AnbaX;VR?@El"j'7\Feb:qI?ct7lQ%Pb?:H#A&KF'=<pq[4To`:s^uHZttZ,*6_PB@c;sbGMt=s2A<2+7&uTD/':7q-<d`@C*k,pMTG-h;'mJC&XeKs9LOmTOkI:>9LNJ:%13CmLV"m]u?E/Ct%OG]W23Y53$(?^lOWlPB=-SQ_9LNJ:1)#cp7:^SE-kh`2Ls/7t-6bs;aR!//-6b5XR>K!Y7#htDft!hN6tRVu%'9S]=*%<)<I.^0$Ag/uDOdV"F,pM_-mlV8GR>B'TA0rKjMT@?J1)#e<L^]IsQ+WgC\q7JXMIgQ-So7SNeT$E>H)@("A)Ncqk`C(U%;4.aB&]-EKW6Bp1-<rA(1D>lq7:`hCSr(N^6q[/cG3_UE=t`CQAp`a0B[&q\Apn88EhnN8p<YT-R>K#+qS^Q629.Q#dPQ*;f`n?]%??\6V`1&W,9>dAXZSRfEaYMDg2Vg0WR`X('m*%lY8.h7qp6LQV9LNJ:1)#cp7:`iLSr(N^6tW$9-;uQnVIm:RAMQ-,WL;G-M9$hP%q%]Q?hsYu[7-%[fdIop>.C:f-;<\U*>*pJ+Qke@D?-FkUcnK[][$bg[do;?:0qLcAlBs8:"a/'0qEX>WOBu4n6='&q_Wd&rjVq.#%DjJLch^kYB#6V`V?hhk'#=F'g-N&RI/Trb**E=mHb_*??I!c<!<ukL81W6O,Ad.s7!ckW$:$5ot=Y"T?1pAT!9S=CuD)HMu:qGLG%?<H.DU3Bj\m^U!_lZk>^S\t*;Sbou+e[rMTMj*9"'>jXqs(2Jo1HX,q_T[EjWV8OSgVmcXMouJ".((qAp)F>AIm:j.2pYJm+n/5]%,X[*!KYL3JRC@$.6M_uN@Kitrqa?R5aUhgXabd)j(n.JoTD&7B%U2+ToD\q1)B&U9BO"qHC/t-?YLtG:4a1N3?nqEdEuD_aEX9F0%g8_f&e\&gBQZI6J2Z+p"]\rL0Sbcd0kB0Y=5g_orj'GLpQdEHGWd7S;CE9V#bCG#J$'YaG`W,T0[QXWUgnSKUi/cXW/q\6GP6NEU%0D``^qa"A<G=Rm5Jn3iZ`(7JEDmtrlL\56g:fUF*#DfnQp"g<!-<!Gf4b'dtK$Q,ca>/3nX*X']dbkn*]Hm2X&:8ONp8RgjG7T*T%c,?6qakO2LQi<del<*\5B/-,^m<<oZ`m%,]X.+l;>o/JYe9N/tdS@h5?PbD^.2p?7=JaiKJ#6<ehs`DbqXs,jQc4\ojW26h6G&iT%O2gk2Wumt0=^>IXRh`faf(+i5Yt93=;m5jhd\%lnhCM\8L9B]^>FW^:^M-O@Hdh2W:>R^r8\"\f9!I)1/jWHS'H2b/*`rO[n#3_O%WIs5u#-6]D;kX(\m-V4WSZ5c0kj"/.Io'$%4bSRAF),.m?$%(3"ip/+-Gg:-AsZJa.Y$:FCA!$#\*J0@IU@c'_Ia.EWgX<j)dqRq%gUXU#'@:N@S_Qu\l[$6Lj@-)G&hNCdVN]d*\gP$o\(gL8p&@l[9Bq8`d$7^mm=)7pmnKaU)M2?gUT:oLj1]m,j`XhpITn@b!L]U9%)PZWMKVK@gfGe`&FC968gTB<t.G(bI,n+HH[<=\d'Wcga>CIrqHsng4kkA7(Eo''FKMB7Qgh@G7fG;in\C1fS(f@XMjDfNQmLVb8%^p]rR:9NumJR@5ZU[Pf,+gmDl:9N2gS)(L\PHt$$qQ/;AF>-*]1Gi;clZRT0/[n[%!Ih.G:4o/8?@5HV(JEH2EQ8I<`Pf'Q^rpAf%WLKYUWmUkp(6o(XZ"uB"Q0G^uQ40YORbRc#G5"<aW\OM#lKS6:Er4_.^"dq9hK'4nI_@*cZl.*8%DR&LqR^(Gmrq.MKr_*7HX:P*%Xfi7t8;R;WheJ5M%Fr\D+,cqOi]dYU:HR3]<O%:3fE)qS][5Z,C!ZBX\NM&F[,H-c93qBO8V`!G/$5i;UO83Iap%Ldn%rB7dHhEs%*O!q/HaNU]!RpjpBXIbW0,/hEas'jHU@Q0"E^uf'K_=T]RpN6&*#pTQUloW%=3lHEE.uf/;d!GMbAk5E_Ig@Iqn_(`!(-f[_QUju%-YWilg(*PjjUY*i+g/)2GC::j=0CQ]nbhq%<rI=`VE$^8s2$TWL7sF3X_:/AC33"J/c5W)_V0MXlSbdMo3STJ%TYj\O4S)UTY6gW%O+?8!a;o_4>lV:hlL^22Ke@&3mMdgL)N3%@h`sP]H\)@r9%@r)U,P,NXc?<0D:X@A)lKudV$_79d,C7'3=kAU=AN[LI:r#m?1D)I%qDt[+S88<>Q=CVYI+k?m_tdWSq&V"2Gns5'CH0Ac`#RNskL`VYD)'6.jB8XE.^^?N7sVC<&[$Kt5O_fZ*13S-U>#d616&8d$qa5@%/3JJY]Z"uGiajK8.UFZo<4kmc>)DqWLo&8F8$`r4n6EXuEi%=*:!?Rp<:mR8q)sYN>).B<cLq-$.sD6cje3#8mD6q**l)2`]5a)p%=K6^OD]]$L:<+1:J>hjW4iF3R^*M>FBZ3\4,/@5GA2uIpOM7o&LRZP`<\@:-'BhMm5_o#=_aP.X'/#tDP)Hf1)lNL!1`9Ie7sXO<%$57/bnV5dYm1'n-i^pfQIb+[Y7cm9d1dV.Yk?I>V2k`L=T5%pJe8*4MH)P009K*J7(C[f3U!urS=Uib"V@kO,KLpCSm&$LpZPg8%%@nQ8SMUBqV2Y)jSSt#'6DA7/]lYB1:(gDe8/-E<6S^pZopYqd`5T,r]?9L!B7e@`="kCWM0l'E3f]o"1CFb]VP;l<>A0*<,a_=I_%^>&8N2;T%(K:mkX<jB"[(/9fD7GB[FZ/85<KQ_31S"-Th_'G2OgRX2Va"jAf@3dpH?Iof+0bfo4UUHlYSWO*;ponMp'k:4ZH38hB%h?Wp^'HYpQ0A1+I)of8O]UCBg_SVjW&@U`^R6A9o/=>R-@Y)7pjUV=Q8fdC73[85R<f]h.i?#!$U`3T1-JOob5V@5nM8`3oM@Ha<%/4FQ/nX?K?FmI)mKK);m-9W(%_Jq/*5tQH_/a%;fAt#MEa33_IhiS&tW"RW]'3O).!72PsY[hG**)]6@Vi-gB\l6e]3b\<#0t!HP%n-D_&P?-jr@8%fK'NnAp<Aa1;3'VT3M)&O!>ua@[l@N7."`6sbpLcUKh.k]JrZ.aJW(aVP*B/299X!m-dB=/W!M=bK4dceSgmG@1%@5:^1;lOYr3'(fk;CO5hULc-V-qs,:]bdi<]Om0\Zp:4XW?2p9A#ua<AZD;%HU8<$[-M+P:+4\UEZHNMMK,L\\'lA8[CDbEWK7gJ%HP/r7b">8OKlJ%@,=UR1(b*U"_amre8'PASk)U<t]M,qYe7t#-DHO!p57CSbT#@BV+=bErP"H_Fd/t9(k\e-!*P3/A)d<T]7kjnQ%j(Age".dj[hj1HTCMnZ+Z64d?h%LSE3,]4jY`RI(F$2;0'@$A32sR/9<g$De59gq1MfosB8p(=Y1l=+9Prqf\jc[amSJT7%PP?#\%j+58@,sdBIm1Q1hDCc&KdV#VhP+:Aq:eGbTje.AHKu%rts*F[)f/`DRJq<_qEP&o9E3D2nWI3kshPCaAc@+O@rBA=gq!!rh(F71!%WI2MAqt9+9jJ$)TAi0%1U(m,Nb*"``W.mb84)VYNmZ8\11pCBGd#X=*EMOfQ?qg<A4h"Pr<_gYK^Jf&eTjXErF9be"VQAJu%!@'$%Ar.6S9('^/+maNqdU:,#F\PD!R+,gTYoB[-\c!1\Y]F^&bCPG>'5h4gU`AO7GB<eSGg0LFrIYd6D<>da5G=HqR*KBcjP2Be<iED9%]c;,,DHc1Dn%7(%r3o>L@a4mholFtP.(NA7kLJkm$Oq]sH&Upsl:n:EP?-%X%_<,82Z]ISYD)@C]j.*PO)E6eWS1_7>(u5*f;j:_%\_F<Zi+P'=-$!pu[WoR"2kXFu7bg%^7T8d<qTVr$(R#rGE.\H'%9GXap36TXE2*h>j.ghnU$hk8RF/iOU-so^::2sgc$'oghU$^o%;G15rAug7+Bf3O9@)OibL\;P(/3:LrNuNJkh@>SPTsWNf!MP58f1\(o^?e4p4aDg1P)LF<L`=)]TT9An2t^c*,Y$G6K7`*XjHkqj%3N!+R?EC%L+A<F+)pLsBBG5#Z;!IA#!)uc`*&RNhG-%#M9e_HB+n#59B$,o:j0h+kEIO\Cr`tFu]8.ut=Lj"=\34d1Uu+.J\og5k%$l9j>qbkGOA7Yu)MMSJi3LSo?1?&t>aQhES[g+h"f.2L(\r3(PJNIt81lIPKFBKnTlZ/^cZGAM0Xe_0b,@u]gb%,!DI25ZUW?h2N%a7r]/+[dKZ15m)mk!,unBlV#P7%2s,EQ_Y/aN\<3,km_Xr!5kEAu7K'0MUQk-:U')LTSA\3ZEc>$R^pc.TAL36ap-:s*C5e>_V](%-rD[Wa"k@k#*GFS+"h4*m%.-QCt=-=oqT+M8Nlf;Veh<!iGgmf0!gDG3fu42fMNTLb4%LM2G_OH*0_-d1(9/IaQ!]@XHemm/J1B<%hg'1WK22k$3;REa[hgsE^"L)rg\uGLHDTp'_asshcW`!.bRZtmT+(/0LLj'upRe77_*.OR[fsd#*GA?,Dm,dC1DsFo^Y?q5>Q)@R%%%R(:k%P<dge(oM>i[DS6=?au77M?B0IPt)lS,fmJ!,sG/Ba1Ie7,6eEq'?T^Q:DVeRC[,Z`ppI\S7NZ5dc=OfOp21gQ0'4>P\'l%nZr%+rjD`=H_It'fk?m,*B3H#0&N.jHb<C'oA,2grMt)7?to<4`euG/j\k3pj/pj,^M9%c[4Q`+22hctdOkDI*R?5H=-nEtT<>?@%\%A]s2qm98m-8WQ?7./n\lV"CorbU3@X*68p#e!.V0r:4nPE;Pg1TWq.[=Y5X=kO+d]`+.j3,;eU!]l^J[<%RB.qniI^ruOr)imY%5Q3Vu><5Yg+!ro>cuP/J&+@5]/*sJ$5E,#00":J$Flg".I<DNYD`fPpch>P')muH/=X$oB-O@<3dJ&]&d9lQ2/KGR%H>=nZ(H"[B%T8uTE[ISZejlPN`]H%i0GO<H@Nu!+hoXhJ5gUpTmY^\eeln(>5nhGN4C]0Z(kL\Lql?_!.2n*s>*%\9-B(\[?MJq[-5$M<>r4]i+%oq/tnnG9uCEjb2(ihuXZoqTY9mo`X+?)pnRpiEG6j)qKfcb=e>d!>>e?`<<SqMjNbZF]u17%]lYb9+I%(7NdoNG$SHQ5?[C\*%nW%>3m<pKhcbhI<N2tL+QG!YIbm,Ct<+BqPYpPV>Ao?$iF#6T$K"4HUZiGBlFJE=(YOc2HLrI>b?5a0(<HD.spd&>&4(][dp-cF\+ZB%n=?"rd@:An?Eg=<O<n8e8+s*BFF$eHIDQc<eGN.D.-gO3>GXc4j\bj1ZS*?cL#EP,W"gd;1TMMPh_aQgZPV^<nS.+FqAWagD1;F2%DbU&0D8Og$Uca"o@XVQ5]f^`rgA1MkA\%O#m182e3+-E<]4d(.TMY0$3.UJF!7\RB]3*-1#\MpDQ4A`#i7#=qfGF7^>1bM,H<*(1%I.M^@FWWh!ZGZG*<aM%$?53*/WkH9p_s192?djT'"mc'K#>h>lAc:*(Qi3"6I+H<7l&X;l1#(#u?3Lc7gaX?3Xk/B#d&d-*fo$*Y%+$#+\jdFfp"81?&U@IJjH*u*]H#G6NI=+U+ZH[]N!V;o.5:a14++pAJ,;.G.TG(rh2Dm;&r9S]YY$CPJU@R#CK)]X8Fl(COG1]u(%hXB8Rm(_u]LIjMA8Vuj9j$.\S+`&7]f^F4$0M&,@Y2bf1*jqWASZpp'l\EX*dur>IbU_PqoAsp6S/`\,.N=(of.,%RQ%biA>cDZ4%V9NA5bL\pjW4hr;nYWPhUUX<14*k`olC5[pH*,Zm9YrT:#9-+(4oZA,c$GZ<?])&\+$:V^_osZj_V6\[SBcH-e[lQ\0Y2;3oW^89%g;.f0pb^m_B\u$rS7g$bgB!0_Dg#>TC\;S9TsS)"\t_E6Yk]ccC=ug;e:<gsqZNhKf!FPC^Ut%;4oPY+9SZtf.o/*M#IR$0n)s#b%@f?+-R5]*Wp_>=GDmbU,5O<="j`UIVVjZ5'B?L([O<!Z\q:8cPr.lqQ!hT.Wp$1f17mRBe5^\n+k!rc#=$Sl3IpCY!gJ?pOn(^te%rZ3$0m`Eq*iQ^Q!k00nP_Lp_V<qi^dgM<)3qeAf94FL0i.Qm\BdfI)Bo"gN:-\M]Fgnk<Laug[=<H'%05E0@qWV07eU)U6-q>KT"%T]3SEYcp>TI.lP[e*5K$hY_,0X^6KY6e(O4Oo<^t2m4">/*l=2qA"!1IbNl%pU=19MuIK<O1b<-X\[,h=at1fIQ1T>G$]%QWeWgq%(\C5l*j09S*r]8?2qBIZpuqrUEV6m%*A5$)kNCE&L9MIMZgg)h,f/tc&V]3_<MZg7YG/_J?_:9aY_+fd'mW`3Q%cMT/sLOeK.lV7%/@#=4)2f`4'R!Kp6>rWBGV@]V]SY0Xn1VWsb>\U7ZU7*S0`WiQ:4WoZdGtSnTTD53#[=1GU0adT5n`.<P<,PDJn!Bl?C[B^B,Q1F%1gWYIjFqSmS;PSOj`_jSp5#;K0.RYf&bB=fASl0O%'X/PG(:1;%MC:,S'W9=`Q@Y?Y_p.m;dmukd26J-j1Kc%2!)`_KFaJ7Kimk?%UT]'*,u0C5dfKnY6EHo\1,ro,/gH5GS7>/A-QpJ$#\P^$SOCtYPr^]?P488IRNYCki_@(EO(KuD9>:sY.ejXY4))^Q\G@D<[8[tl%;+Oe=bM`_N6K,a..EA8YFJNNtP$/dAf_IiZ#OWfW_mWnt#s^g/>af;pL;XWuZ'DNq)WNHVeL0,DM3C0Be7'Nj7j,TsksFi!Kk=cf%kkGUSQ#G@Y$DXj*iD$YkWiDsQZQ$4i#=&rDN_-ZNs5!$6q4P4sFELa>\bBq=_l$Re.U.-GR1k``0^'h)j^9F1A&->*:r1I'f1^>&%@<kd^O2:I8no^`eAM&D2PRI?P_q3rS`"@;b%`6Gkh0Q2*lO3;S7d81@hhKoZn\?[A2YZ&Ep3N3fok0Q/\bN@WH.A="#>W8+PK<RZ%*Gg2\s'=8`/+0&>,HRq8N%j1@U(nHa<&-A5jm)a!K(\O(DWu<,l-H.0$KeDXRtWdChgq=L7eV<)FJHJ8FbK!\@7=#Iht!K0O<<pQ%N;"==\d3ZgCs93AJ+qfaNo"pQ(@+%h_/*HX]uKGV?+^,Z]JDCm'q1PUSY9_O,&5oNr`%N&Q[X?F=KDI2Mp"VMfjh7)T;k/?(I'Ke%\(8F4/O];p0OskTmnm";P=8u*ag5AN_g&tTddb2<Qb7rpqMUtRW,4b*4*gOFD6a*"q3'Z9S5(eGj:nJ>^)T/M+NJ"6m(=P56`9b_%$m&CCS/7Af)TX>)imA,tc_CZJo?%<a,-q7/f"X%<kL=jb"pibNQ%'jfE(V(AXWqf*f/6"O0X_1TI<Y/%[fIk1ca!/9gRmq,8+3'e%J=J6YZmW8(^&lDT731<*_=_="dHRTPAX.amJ,5hNhX(9lAt=Z.\A'g!E:KuG<@b82mrh_4Qd:Z#_SP\jSh7U%]D&"(H;Y-"LaIK7%O^amT%sO8\S&9F1,7hd6ZnJ>mQaN#qpQhDafJkhrB%H]=E%q<hGe3PV9`(BUB[&/<Uub,:<-s'IqB67M-qgt&YFlMRMq%_=76A<F%9Bc8YHfgXB>C#JAoC&9ar8@Pa3nUoBQf!2)&+8K"]m/;dKtWK"0At%FNjef`SjPU_%QpBLCE?6],PhH%fZTIrT:"uX"/-(8r,A?d%rU0MJ><Q4sIfDA\"j&UM^V>0Ght^:)J+%i@%[ML=r,#GhdC`WgV=S'p@qO<^bH7O:1I_gHmK]doDCjo7e`DVHq":\$XRN01BR"k;%=0FFl>eS03PKQaFr8ht@r1Z?$nbN(2i>,@:q,4O6C%W5l#:Do8i6)N%\mNVKeeV;QhYoPF<Ra4E?Z*$'clc#rL%at9]sRQKGr;8X%@rLnUqsb?afbK.o-p8@Zo](!+e\"q!Cqfs%(,J)0)TD*XrWPj+gKf=&PT<=6/"1ZAQ.WtZ^[9RJO2(#(8$<D`=-l+9jefQ+k.\HK%3&=2GHY*14HUVdE\m(Cuk.jd]<IoX,Q:kP2]0bW_HVcF<+A=<!g#'@_F`2]t/,Q"'?9VUY:n$978,K-XRG%9/elKOnXqnaS=*OQi%"6Pc&9HMNOJj=JH>M[9-*t%n1<Et:(_XQJbk#OPO:;=$>]D-fRrkgo$NdlE`I$)VlY)]),_MkHV"U!l@qsqSoal6^+g5Fht@.Nj$%e_`$\?M"?jWaDt@gW+U4eVADN!u?MP[f>jk6@#`q4;moc4fiI7;%oXP`?E!%./FD7#j0=p(\V<Pqt')ngJN`''BP</:suZ,[@WC0%6q*DV[DUn>7D:=;'^*["ns[To$i;5O/c,/C>LDS_f2n<Ihtb2E8\tn\,2/Z6?N'L2(/8MDYe.[HH['EjkcWI.Dfo-Jb-N^IaZaRC%]j:O)1:.OZcnEsB^&#.D=l%m_)BZBD&EA7&\-L/DGupSarNbFqqH!"j,?QWS%hn=>>CQ1JE)\lInD1=7gA*T[L[%[1VTA&?`f@\I%::dVZ:EIe&i9XcQ5@"-7Na(@fAG6"tLO8-8#ESQY^LuHTJ,JS3.0_e+c]-fX@I`U;bj<d/1];)tJ,dp0fOT9<))b\2;(=:P.U35a%?b_Sf+KliNf*^EO6sSRG"ELS#^Mei]6U"]:['78OYajNZa7reR!0Tc^A._cD0"OYN(7OjlTm6iKf`$YmVlM=$g)iU^qG$'K65*\q%oPs>BdJ/+hrN#,=N5qnO'kUdRQ+?fOm,`?\/[ung/U?0WeJ;o;f,3fVFA;]7\-QH3W/2hN^A#)6jRZ-MnE.&\P<+-kk&%5"CH1qV%Sct'h%]'$rl#@tu\I`ZW4>E[t)X^pNJc"eNlW<>lH0pq.T@RYGb0S@*\_oF8;`Jl,^&[nI.rX\>g>]TiRl;jUgf2bZm4FRSeYB\G%;IT<K^sJ-`+SkaJg%07C7?Pj'c-iKTcOS&=J*.-bk5-dRdX:<(k5@0!QLP-c1>h!b>[CEV#Jfrn@JSd/GnjT:pK5J`@--T:@2Zed%V.TCuF&0;eC$f+hK"\58g%b!)+Mr/EDR32Z:;4Di:bM-Om?M>="pgQVhXRUPr*i'0;4'Z=.5J,@&$KC.4]j5MhcHj/$i)0,]jRO(%)]1.*#)1Y$iAL>eZs_)mhlk@K&&4k^;$VrSFQ^CM#@QLCHlgta?DXS`3SI8F6@JdCL+`(e6L/1ZWU)X)>H'IH"-7Be`".Lh?YL;V%H)6e]]o?qLZQ%e=QnP@cWGo%=rXR^jI7U4@m89UKbZ;2Fq<a@\C"C"+o<%T4-h@bj+Cc0lM,g0+)j`^cqE\r6Z.JGU9]Zi(9<Gih%Im7u3LZXu*[bJ3bo%]]D7qOO$eT]mli"(9Fn$%5Y]g[q:5;"k^gV5",C%YL'GH`PArBe2Fe5omjq;(a>@B]];)ceA!VmP-UG<p'\%)_aUNQ%*\r3hn9WmA6(RT\*;InfX@VJPBQ7Xi9T%@I)I\KQ?sN5(6j_Ir=*r2P*'p'Qc%L,jXLPgJ>WL]!QB?d$V3.L+l&MEc_:T%I.d+jR,"0L"-$"6o2k,FVt-U3gFF3@,'Z0,BhLWM'ktnF+@5VbIdu$nS^l/#m9QpfH>]mEgRt$`hl,JF%5NpoH]L)R"[0WgK/Gi/%]N11H=CK3m*n5/cbno5"4TGpoD5aa"IbjHARpS*T#1eFB"UpX\rmKOCL]-ei+'Jd0Ql^.BJ!$YWF0@!KIpD0,%^X=B=&9C!k"8.)%g(.<S:%*B'^s=[RHE$q356c"IT3=lPT'bKcd'H$PkYIX.(^,Rt0HNGr3U4XDMZnI&gV^B!0^(FN:TN;!TC/'&]`.oBjK8?i+#/^j%rgsCnkbC%lO)Kqml#?Msg=fZ\!U&auX7ARFqa,T$Z*th4N+94k\:b/.K,me5Ws^:5oJaOin\sAb[XP_npfKR8+4UUl="(Q[R2'IN%/uJhFeqk2!Za9nHG4Ke;GIarag0WLup07(6+Ci/dB=CiGF&,G)l\ebY7:5f?^Dq*nLZ(fSZ3Mn/YDg'7/_CI,q\T^o+L+?Lg\G=G%s*V4V0(fUZ/bol-NlMO(EjMtRqK)[.nT9%f5o;!P/KTOpg["=[U;RKn%7R&\mMF+qj[G8@[AD<V,V@"(q[Wgp"mt._G$C6(m)AE@%Vm=L)1bLsuWN=Eq07psbZpkb"-";GnrDj/\^%hQuFm8CZ[gT8(`N,!E#OS-/,K&V!K(:(+7%Ea,#k3Q="4hbll6Vf]00r"@q-Bd>%"jp37h-:KRdgCH:;d4p?qL6.@X3Q:Rr,-_mo_RF,,%JCr[oN.\pJHK@6@$"K/If'-(5=hMIe;a3=ZU;GIn$-,`;$_OogKgp_ttDO%I/?Fmc'Kf$`-k;[Ge@AMhu@,'^XDisIK&n[q-a3>dJtn.48\?G!OWqdkNCRh8bk+/HJ>\JLCLWD7\TLe]85,\gSOB3cO]*ml::n+%]llVV7JOpYk]^G7DNu;^ba)Tn6FR4?UlQ&XV:X$7Qu^N%n)8TcE5%'0"<Y%<!nt0a#T8,Bp=`+idf&!*?2h+U0C5lF#N0aU^r'J`%E!re"=,mL*>LDU@bH&hDh\WEWk.Y$qIf*IRIt,dO>mqVRH*L;#oiGK$KO^nCHMPrXV&cBWjmP?Q4tu]AIa%L%5(Cu2mk#4i:RX08%Tl^.:"(Qb52n'OP[JIS?O(#^aHWpAR;B@GI8\LVfet/o"'/]-0\c;YJ"!a_MWr@K$_N_]X[TnYA\!.OE1$<T86E.EJoEOa+),.$i%:Oqj-DK@N-DD5;"lQ'Ka_q,Z<b.&+4bJT0md<dM9a#[i&XUcD]oMu6o,L<=JM%rHA%qI[\<O6c=F@shHB]X2FNlpM6-b2ijL9@ZE%-!]d6I^>8Cb42bB:mMbr3IoQHK9M!C^k3LNLC`!aqIc[$J(._sc!SB1lP`G<HoFMl9`C!/@b\>/kNII\eRJ0GD&N!BMo,R.H'1r\%n0L<TbUocnJQME2\]0SGjqV10,a^fK[gtR#.`$3YY:tZFl?T6eL($rN%ZE2FSI&_Z"5)fQ2ALhF4L6o2$emRA?8j`T3Z(*^W(I.$%?p;B!-.QB89JrIlUfc9X";(aO[K9Pj:d5-updFM)812cb3cd.L5'XSqjlW/q5(+CT+Cg%j'm7MqH59&Z/]D2YAOT84s$\#[N@GK+%1E@E]_tSIn"1SFX:^tm<?pIUOc^:Cu0\skjJ-8+O)c/A.).M]%b="sU0N3aE):BZ0Bg=>KjheH#'aCbG>W@66:mD5'^jr(=b?G0k%0n?5ahDd-s/O@;TYcRm@%b-O?"[5f\+jp\h3X^.`AN0D8P-*gTPl\afSlZXIGi4rS!XD2).s]$c),c:ufiHs1!4U*I]aB]E;-M0q%W.:gU3D<%_/f"gpOBK1Iq1]HD([:E$o.:KT)A^UV;c>8Hj2g=^AhsmMLCje&E$#sk$`)?=O<CM[c=mgr#/G=)^RAeqA*%f73Mm;8%_I7^a!U`8d7CQ^13#X]0U^%C/RXm;8nttHG\Zff&cC;90i(>qN)d9LtF#NYt77gu>5ck2/f-^-hfm/LCC;C7cTP&s3j95qV-mm5(%(_"JS%6uBO_LP5$nr@<l)%_j&0sDlq<<3,45m^#GN4e*LmL)_7CF[O[]F>/.&d&gca,m1*$)5?L2,k5n2&-t1#2M6]OAU&7oMl;2%$R#Kq&n#-XV%BHb%9kcq>n\K+D?7jh_468q`YT=[7a3\.W!'tnTb(=V0e%icj?T;N-8GQla;!hE!3/c!%k<,=_b,Ft6ZU*6?k"'b%;Ct?g:]hDNl,#iqC$EJ[eI3,mL-]ah!nKV;<%T4?<R#Q?%#tJmcEI<M,`<,\=^e$L6c4atjD@97Yp2a@9G!jPNCa,_O@dj(;?2;[%TpibeBNNe;S.%*^R&)!!QA,ffJ=W,Q:uYS<2A4?X!F8\XknG/"7-Y4Uf+DfT)>Z1:ckh1OWSknE1G>'IK;@T1cuUcU]Tr=59*VDe%A'mQDo.1itm>MF.lC<:e5dg27T%Sa;/K^p7Sco8IcEW%IB4kO=;!gBgLjD//6CL&&Q1^_L#V@Dd%M^OdpL(!*YPhYEOQ*Mc78_I*%!F/<&(o/jDJ5hK/+N%+HK4Vpjiq<jY($mN9A#pV-/1";9TS0.3Y_iR)$s44BCSRmBa8sj9AHYO-Fsr)[dY^DE>(XQT,5Yhd7Y61c%Jnqk?_Z1\j<ccc80Wa6LYFX3!N11ifa^CZB.Wqa.JekR/bQ(P'+Fk*2/<4pN:PRQ>@L6ESKXWhk>IqZNjrV\TO7ZuFj%M8:=X<lG%]'?3uT9lcWRE?O#0&:4G_^C]Cr:*HiMD.87rK/3KA>?=CnJ1,L&`=l`,_3a(@l7;oVCj]5&DJZ_OC5l`CG9.`m._W8Cj8OUYhF4.%R=Q>Zm;U/+CG99TmkDqF%ke5)<kFA8gE=a,0a'iZ?Rt):eQ/dHn<.4Sg,09VoE7`Q1$%8n(pX7'4%=%.8YE:c9&&Z;!c/tjU.>Yl%Z-b!(6qgl0hq;&H]uLY^EG^$n<cMrp+Lg(UFRlUE'lAX\"[k[+Nj/URF7bh0$A#Jq!aQ>&+UB>r%E3jKXpBT@631j4lp<96!l_9G%EFkrG0T-ec&X=20c^Q=^Ub762-=Ck.$;"76ACV,)POp"p(A=a4k,QDPCfF[E#/WM+8t_irKV$MfT;H)U2kmGTWP#5Zi@5AQ=+]l`%fQCfG<qQ`+=S!Ga'<L-)Y3KUUDXfk02lmBs5T5U^L,H/Ggu,t^b_X7j^5(_Q&^N:^@#0ZTYi^(e)h\_=]m;[+i-QdHY$b)/1/KD3%-u*)3\94%2dJOKg=/,.%.Z2A6V*puTGpU$q!OpTI1k=%KTh!h)#0Mk@r"c49;KIQp%NkJgi$=`c'=q;CH8]%5X2&n#(>!-A5R6)%%l`q'=Gu%j[$"W*K6RkM[ND+Ik2%"CK!6>B^Z)XK)MdRm!%:%m\0H9YmJMi(g,6]tfr/3$YO8u//)I%3+QpoAS#F5Op'#>QLhR5ie%$ED5kPGVjnM]cG<_d/j*ED=K(\\]6s]%59Q1*-<k6e<,QH@V8idT2CF?n'j#CaM3$&Z?n)X?=tAW0"#+!lN/^-dngIE(t9f1E<Cp%aeLfdL>l;;"&/oQQ*4ck>2Iad.lM\SP"-&Sa'n\W5SJ]Wj_G_se5mYP2L5D(`'=fe,qB't'7lnK22pCs;'$\)hucM=L01*Q@\XnD%'/cs[)q'0_A#S?['grnZdKr#qh)9@#6L`qblHd:+W6XGh/?jMY$Rca4TW5-Vr#*N]ipqUSF)VX(e/P`2;KGZ%jUg6EGefI$i!<^Y%*j?c/h*D$pq%99/KX3^%!.XVF+F:/YU0Es07E=d$St4r@V,bRq'Odp\J<['cd:H&ch4uWE<7@^RPC=\?!"9!mV/$:O*6V:b9Xe#m%limVuU`;^#k&:L$)2^io_rON@3pfuWO('q/JXia6fpB+=3^Pt;4b[3*O:O9S[(NF1!%=]L.#<CBc9.Et3k4[h;.+u[L&0LN(b@Iq%mt3#,)+'?ln?$dO'Kau6bi\fd2FZ`46P/B,m7Sk;.0L)o(c&BRK$iugN!(Jm_`-1ib9VV4dWPgC!o$R@;t7+o`iFH"63@]8=%1ed%.4j[=n'\$kR5J+((@@;?b,[g/Jq%^l\CN6N$ks-jI43'6*Jh]T,asqo9_OdLj"?^q!1-\4-G"h6FdC-RXj!Fp`N`p+c`isJfpK98%JoNX]2psZZ[k&+^2Amrkn>CBW0f[CsI#"ECrY_&3TG`KX?J1LOi78F_6]`=ubl_:``WN0LM9/_VG/R4q?m-Ip-<sL[!s9>&Y(<LE%+@Q;8A@%-\2Mj>d$S3bKjMln.gQK"/f16=d8i(UQi?5VFh@hU!V#=@s=UI)RJBBnaT#5NfG'L5i6$Jdh5VIa08(B;4M1A4Ik^scb%?0+JpbS:<F6,Z8JU+k;5%@hp-#oiuC^bR+nPCPAQ=Bcnsrt's-)r5;R^iD\"&Hm4`Amjj5,ClX1=N#r;/;&TcXoa5@(6G'?#)AA>%M1HkhhEYB1)WMB@ENt;mX"?q00bShc6Q`@>Y?#i>LV+Fnj-kUI.'U($S_8b=p;3Y6U9HuM%=T'c+A%PpWki=1$VY#3m%=q,^lSYH%W)'O-_$T2lEJ!SrQdW+H\NXnj9)t*;5gI5&I%+r>CB.)e)a]<>LVR?TETih$a%%r,5D5VdK33,\LIimq7&%K9q)B_S?uc_YM[@<p%$b.AE6/^Ea4pO6'#">aE56nN"'Uo.O)Q%C]ed(]l!6.hQ'@em(LgX5_8(eeG:m7VYM?@%F&dc@;J;KQg)\iF9JWWKqr%UR:U`6\&%0bkEG0N==+dS,GW0u1TGB%3Tq:fXJ1jW<D8!B!?Q`hH%\e'0^_W<,bIOV38SKpIFM/eE=t!7A%G0G,q!Ap$t2n-(_k'82s</%k"4%^.?3ec6+eMDg8g6E/2VroC+,Up5YOXHQrpQ_.5@/fdq68a]/`XD)6,G9djWC[=U\o#<1!pYg?-KKCh'hA6dc;l(O="8p3!44sE`5%7jDa1.(1Go4b\G8GM=g]^'E(8Nlc,C#&M4s]l%LELEPcq,d9.<EIb1^VH!0u363de7;8.3'@[,R-&3EkQ=UuO$3>ecK"*#C@O>G5%n<)Ek\Z7];FTRLW]MQBJ2'#<g`QVqKF(0q\eXO!H![bgr0Q^Q73]Ju^Y?3me%!YuD-KF^$$F^gO4%QB\o?78'X?eQ8h4`mia2$L3%N>=5L0WP[$V/#oi7J!S@>%&`YP1NMb73!#%`N;Q_Yq=ba"pbbR%8$`DD.oZ4M.Sn_n!Q5%K!q)mbs7Yo#4L@[&7?/a*=N`S!7_Je%F1,$Vd;\^-:hW@/&@6HbjJ)e[s!^i?L`F3f[g_AukHp=W(\!/u9*5VY"8mSeZOd]Q$AFul"!fN94">Q1#dH4Eg`\B*^tB;R1onuI%<7&*EVhkmL!5rKL9b7OF\R6%pLdYIe<0[en(5BEIMmA#O`)%]\9NC8We^7\[pgFt;[qSOEiGb^:!"G-eQ5Q\e'PXH0#TKCFT?'"H%ZH2nE*Qa)=.].1!(_M:,-6p"^\U9,<!Q8KtRAj[1cN)rb2T]7R0eEHo2PmsYcsrHSMD0dkN[mb^2f@rS(&fOVr!&_%0``\r&s<3-%ZP]_(i++%p^uRZ[``0c;3+LCaTN/h7;rZqp09T8\\@7QS2VK#uGGHgQCAiqAZ;lSpEkmCS%CQ1Z>d+:"!o(H[20q_a;@3Qh9d(#9%4(".1[<*HqdkTXrFh2%U::JT1dO^PZNeXhT6U<+Hs%oYS<[ZIoFRJ,]a3_m-b7`m=3G#JW3u&I>d1Grc,X&I;N3QKCMd-Jn_1QI/%iIU\a1(<8)mE_NgYO^>C8f<TCFg2WD:r3R%eANT)S2iXlVr<I8"Tr<AYo""/=U=!cS7/@N3(orbAI\'h7](a9kRKOAd@DHepD56\%NI1pAR-?M1"E`u?D%,7[<_".Ala1,V[hqVP&tE2'T4+cck60_/Q,A9Q@l&-g1`jde.ujHA*JLt?P"Gq%5T/CTU^aKKR>0E9cSXp_%[m@53kFn!31.Fa%@j<LG4DeTuHK[=mr"P(7)[Gh'6Ve<]2Fj_1pb6X=m7>IF!Lu!(o[DAUmF;9tN^B.<!`Y:J+G^F;<k?20B[H`>%E0(RS0ZW>Qf&FW2JU8hjBZFODOUf_1ik?"B,a,]hjKm7DEHJ?lkl`&g,hR?lb,2L1-L)+80k\Ql(lchfgp,6UfD0DiSb+^Ud,5D7%Nj^]<#<XAk$6)bmnM;@!?\VQCD66r!='7Rf?-ir")4Pe4(e270&/6=Hne&78aUckb9G8<Ek_?ol%8ZRt.$I=kOmb(\>kg3L"TSSO%%Rhg[i)#:#17/XRe"9gO/3;EpC8SmE0<,eNS3_c]&TMnX+bpOh;%A_KTmJiAAar@9Ntptc[b3"O<1oIa#t4h<a$P`849h.-)EB:W%bCK2SHm4r^L]QT\JW]6UJHP]8fEO94_4S0T.7o_CK@@,WTm/Q>5h@"%1;WtrTOLD^<1@;O'6L$!#!YE9i45`mJS:)_9$qgE@IWl-%A@:-5lq9:Ye2;OHJ>d2:Zl9)%0sM/217cH=<8[r>8E[l^e"Z'-iqrthN73>d^77r2Kc*b1_$"sEk,^ZBI$s6go:n4Q\*7uP9Hn9i%(b/:IJZ,IqDkOY$kOCg*F)!`sRbc3GYn0%-7ZB*N/s4'S)E]]<**j?t.:a@4*!5$8k3\>BM8/9,Z"=@g8Rq\VXX,/u0NT:mTVEZ&%!*F$8r,E%9'oFg(!8EGS$g&Tm=;;aOS*4>Di4@;fS7J;eBUQZaU++6GO",CMcc3m'0`03s5QOCPGsH(3M2m\X,'FYjj!YcpXaCN^%il[%!_Xl[+cb`8Od5`tOLM`t3nEMh_;*_q&S0XTNeDWn4j3h[1:7n'+UL%%Y)&W1t<ITfj2jqReC>dB:#cln^$=Hkl<&\d^0V(]=%N[_!Db/Oet%,*j'q#OJ1=nZJt3YSHD`<^2]+;R1B&@D*j@2s!&RKfTPL)Vu1#Hg-bA9b_;"N",a3qm@XK:BY!Rom\;kW<dCO_5RJ%!P1>9Lt[s);`@ZGJ/EL$UIN>?MRqbRBgml0KE]:ZK,+ZRR1LG^b(E=T%@nX_#C!@*YCO->/gSdL<uA*/0HDMiYNBY&>,34O"9%Oh%E!h]k,Ef?O!`Et;`sE@r,6AA;`hR^oPL()a?&)T&)`IcID`a:sgW8Uh(Z&QJn?rtK,$dLn)X]A2dGg7nTQArq+\.M%'0G!VZt]9M%iBgkhG%`t-Ta>2uX`YJF`B?SI_T*c5Rca8G$p)f*J89a09J3eC#KBJUDrT"]R'`TM,,*dX"?<hL1TmER;0>u&$@:g\+W\`kLoLa4%e3VnWhBU"T0KQ@nfHl:2<UO@##0$GdA6/JVCs'"&-Jcpa9-nP?DkinpQb9`tE0JnDbYKcKbY`mcjs_',+'5_roC;LTgKAN!H[_%4%5gS.R)[7VkfO.r]!>'&iSHJ,Z+U"3DASELZq?'k0nrbj2Z?7p`%;Nio5d1DW73TWL,TVI*Fp5e%@qE;S(!TpQWe12Hj%]W_kFc/`%+?U^e6(/!9(U]!sD`"o<^]m-R*<lYBkcbZk[@e\#M"fdPCaVV\'rK`P-rnU<-4Ec3HphKnG8dueR/nUq3G@_%Lit[#-=K`nd,I1)%"c=fg@Zc\j,$IYPMZ?/8O0JuW0>9(PYt3LATkT?PZrTjVc6?@-\:Z5M#W&;*oHnWm#gqsLOE<Ga:e%44dP"UTL22fi(suarZufgg%-*,eallqX0ghT0!=6"1K6*@qV\RME=`&k(8+Z)QZN]mS`7KJ=^LO'B)o=\?"8ckZC2k)cB>rrf&)143eJId''6-uTUS2_EY#c^L,%%Y6eD.4u`E#/uZO?TI<m!X-Dk`WB7%?=/En[%c,=j:`r.b/+is]FLkE<,J;0'M=cn.6S>)'R_).BjuAG2(g<7O[#.f9nkpo&$-\/%O%02dlOYtYVCVTD)%!*!>jA"U)ZWl74!nQ)pbAGX&"#glW#5@b0btB3,m75C0o%IDO29-o6pSZ0N<0NTKg!L"0bS:T!/>"WARL$m%e3uoZ@Hs]D5NX^#N:rT4qm.<N(<OamD%&n%&#NoB61QcI@Ajcp#&"<@@K[PS)#-H_"N1;s9YaX=`jSE3#=-'-F,oMaU(D!g91H`J%OSTHr#%\?8[T&tp"9bPd(L$Sg+PuU@fDe6Ei+A%&@BjJo!N7IY3WMKnG\<4t@BHI`dfO;2lp:c1Tg3r:0Gq/=!sZh8?%aI?VV_QY%pp9Q&YAd+l+FoZ##iP;q&MJ)qi+!aS7S^sX+7TtN]g"G7TlLc1j5;_61q!:">N9mPc>+N!hUsV;GYYu.L1tgsBp65kerE*_%/^4=%"pR//YE_A_-1H[`36$bc(6AKi#tNb=a9*B(n)p)EVVl'Y8jR-L9p3[8!tGcO7'J8jOHr7o(1X4-IOjde.Cd-G=o9+X'_[tF>[&Gs%oJ1OD*i;S*/3DMG13D<SZ8`8?@$P]lBdP7N_;3%CXFZj4BLu@j1\)Ild0[5F]Wm/<B,h>LK<9efJ?DC?l+=*^P/42R1eLn:+FM$Y%5mQY3N]S:o@$H5E"?&"e([)573Oh]FL/UIi`8"=3pBTa5L8sj?AXXgeIIL'%fH!OZ(,[#jBS2LKL;um$GG)52+If7VD0&/TKGup`%0\cX6Nib`VLD>&@i,Tc]L3RrPE"@J+5mKk@:Y7DonA87cJ8)A26)X<jNg-;X_\/M`4A5uF=E4fd47:?Q6kQdR0e:2hD8$f^jJDJK%X=F,X'eNmI4I[M.s%R-B?M[o:GcMjK-Q=ZPe$A)WB&K5;\DJH*2G0iFR690Hi'P1t\tSk0Wrpf[]JSJK388E8$KDcHCbsIQUa[tA%2V\BZG:f8#:sPg6RqTC$Gj>KXf[=jD?Og+k/Pe=t!qB_jBt?m/BY$dN@(O`tYH>sr%0P)s_hu\tbQ0OlF@YrIiAlZMh^GO*RPYMo%WG"'qJYll),S[lIkF4=2)96Aa7`BXKJJ0/qNL)p%8Rkl2:kps(8V?hO"@9GNK/LU00@[q9(hO%O.MR!@7:\Bf[;+^nV(81crl$I#%K2U=BE<Mc[">1<M/0:R]3G9n`/JO*mh/e/>5iQ7u*c5EGF:0LR$H6U&\F9VQHB,LNDic]S?sgEd22LGZI=/Uc>goj#)unp?78mk/%Ee/qA8:t:[XkDV@0ue!R;C0UER&28l6(61jW_-J7#2]hY<g0>g;>t8fbsrH"chTt!N_sF>S4`kgX.$P#j5hZmP.8dKACJEB0Yg:9%!9OYr[\-tUP?k#%8#B5/&%&g`EI^W57gDkdcjD+>@DG"&Egk9bMTmdarBjUGPVDk8d4oi8lG@T:7]Eaa"4>,n!&Z"n1>Pib1bnM7%,CqBR*@Dl@I?R$7a5O&D_JO.`Q5,[dQ9b?+3,gClTH*\k.KZ?AR(?[-S"(.f\V@XU63a71%7)6rDK"HaI(T^!+m@3O+PINo";d?Q%'SE;U<0F7gpI3lBOP-$40,p_40h/?DI]c&pAHW.dUgrC*`f0CP/_\u0hb?A&(j_<1Gc*<#P*dF,Q")^!X;Gtn&LciXICp*sPDsqF%;/7TI0ZccK2#pWhUsXnX+rnJNL2f@h!rg.LN>o+k/W7i"0G\?e2`Qo2Blj\$N=Q/cE^U1H58K%$OmVF-"N,@p@bM$$!4$)k4MIql%Z%/(V:$*"=luMTeHVH*s$H>t[\ZHDeodI`Q\.Cui.2k=#0H_AZ\X%no3j3&aD*I.@!_-]t,K.(l_fqI_)k[>PS5bDa^QGND!\X_l%F"_?(S1_[48-<VFJ@I[q$37./B%!D]R,H;8A6D==!YA_kr8-ZLkQ=WhGSsQ%1T?]*aB_=Z0beFW"Ib\_8muu_#[5\C2&g[(B!TCP%Jf%)[ih:9FkQ$FDmh!%6E^YM`$OJ)5;GElm]$,k"BB[ZSbue/R'7i0Wk_S4d"fFf58HGp2J2VU6I2U+F#R2(i'KRE8Ce#'m"0YL]%5ZQ*=LH,tYq4n/PKWm4LkOKXHY_rc$%#%@M#\Z#H8+IiH$k&-k@i)^nbK(t@iBm,4r%V=qmEp0cB7LHh8n#VH@KS[p<bMpK_`LE7%o*NKV"i[S[\k!km.lqMuU=4aD,DoB_&iW/h(]05%l4T3MRQn(j<<i-;cr?7@^aB+UMBrEnW?u&j79:069gfb8J58EH_$LBgn2X@c%&L8LD#BikL'=#F52s%7e$`?lRd[)km4=Q!^I%gV).Kue+`hS]06Vf+ljabIfBLUm[Eq&(S36VFaD(6gcRE0'Z$W+q'6&D`(lNhuR%<a)@pCX(k2E;:r)-4<*X]'Op17WY>6dc1#ZdV'?/<C5<EE4\Ua"(j17gld2r%fV;:,4D=L&4G^M8C2(<!W%So3>u%i+KZJ/N#\8k%FFm77c-TiN7%)5]<Z'Ccq3%Bjg'27si&]k-(mLEG'@iIE0b)?.7f)quFo=Vj0\eVhLR[H>A#P$5(Ao[cLR0Fcl-).J)&-LH,E))6%E52n"%",79NX$E^nQ>Ei#=:6g]//pl)i$L'-D.:<U=ii6qjj#t;EbeIErq:oMt1D`U^8PWm.<)4'j_Wm3deQ(P"/o9%bJmQd^Y'7%R=lK/PE=h_o:^q&,p8$%";J,="=/7;6YIfU1#3KMjg_).EiG0Pa$WteA0B)-7h&om'_m[s6kEr,!(c)0_5_Ur5(OQ#GV*>X6aJ%P%]EfQ"YmcVHLX:]O,P^'S:)qi,Z[GqG2+U5?2OQsQ`?g$IO7<Z=3_U+fU>r&k5Qif=/g);!:fq8M98lYER=gYd@DiFH(ip**j)NMW%&Ua#/-P#LK=W]^mHcN8gZoKb</kf*XgdDM[]P6/BUcTMPScR(QmdYg%(HbZrLH!PR+u!u*SJ2)f(YR_32#u&ZPmW3GBj6:U'A4?F%BNhcMMApgXm&D>=R5RSlSG%:qh"^#u7Rtoa:#O#e?;bfs6192/."cQ=.5;Jpp]O8LGWE`P!G2EcSe\So#@K3,EH_0e$/5la![bYH%FMkP<hMS'^$!<#b'cs-L`2Y0d_s/&LH\EFb9OEj_H_tjJ`7@)c>c/32>5&Gdr(sP=\0s(<(0gHRP7u89McMuPfK3hqe`0p;3\B/Y%A-hcX/m.m#U@P<+`o@-$IcT"h1fZPRk3.>R`\YoX]o344Cd)6=Y0Ln$@#G)M%ttf=D.Vq@8P9<EUTFqnjh'^(<^m4T[PB%7Yk]EL%(2Qi=]gc3DdcePg+UVXf6\ncQqYApHD:Is,(JTI=Yn3P8*+kED4Y*T&/]Vog$e+.]bqA5U]F9]RefpPqKV>Dj4%Ehb0dfZT$YGP7%bbW0f^WC,5PaDn%gWI.$I*ulC1!\(d>=o%JKgA@9@g(1g)gcRdfOpCu_02?/$-S:K*UMH&#Af=X:XS$jN]SFIbs*b7klL]-:tSqS%P'W)gq</Bc0O;]7_4<2O[aWikn?:V"fp'E?!Bq;-7G[Pi&JsrIfnbp>c,`:F<0F(Y7^DP0]68Is?D9R"4ac#.`T<L>d\\9H-"+)!%/lb[MhGtMV5SO>KO<k*kBFnri"F/@p]CnPGJ6osK.;[C3'#FbaW=Ug]j=,W#a;[g<;]P:3T.Q'AKW,Mr!g-tEVa>nf#ZcCV)5"f)%G]lL%K`h`]+XCH[$6]L?Sq>H\ONemW,t`lQ"s'O,8B?LM,8,Z88>%XO,(Y4Bm96Ya'-IcKitUEpp!=sLn@>Ft<_f"fEUXjD![=$d%)%_2`l&\G3ItTnI&cN[SJ'DHub`>OBd?nDJiGbC%KVtLYTod.X,oIP301ir%[0Z.NAl1g`Bp<XsefdK.`:p:eX+6mCFb21j!CIZi%19dUfV$J@./]E6+hNA!UGtV$G!EofnVp/GWP#iqBfmu1KJK]#PaH@D8/51on*jPsCk@G'_;@KfW%R)+Y-6+A&]O95^95,:%$BI"/%NXg0=C^F2eZ\0DtPN'dl'Gkus@:1+JRA7^8+BFHH%,G2;#F^dERVKoj::LumTotH.KU(fu5qUZ?NV>9nnN_-s+rAR`c(4g/-CVBm%4,k&?G.9cs(lfBJ&64LgQAT'2?#-9mBGa2,AWXa3a0*_/5Wg0f(o"P@W!;Q6l9V8b(jR)@;N6Z;($RN!IbnVD+kOZufbGa_Hit)"%W6WIL0jm3M$k\DD#d>DHgBEf(cZ^RkHuYWo@NarppugS74c1b!C6i9AD+/c5Y4Lul6pRNV'p'J&ONaS7T/]LN@h^t8(MaN<,h2(C%$=tjJV+De$K:4nW<\n\R<MLUW^)s3A.hQb<,)ZK*:Ua"r7+ZO?T:a$5)GRm::ZlFf)BO04H7f6C$U,>Va*K0%6$UeM)?a"sSoCOr%J.!DU'.FYUP>"*87Rs#*,eD.e;W:d*n-9!`h?8:r9b4BF_<8K+jYSHJquR-7&FkYlYpM]:JZjo,oDIMlSgU=Xe8Pt.X%L:YM2j2`%OtqenLP?U=@nI?h#-Y&>9;6h9SeKukd(g(=YNuk/0q2Xp\K:?7^Qj].0@E:e;EgnN;hA%$WrueZ2?qSf:j#kIm?-G@20ceNK"++L%ne?dB1T4#!`tWgsI(A2&\2M*a.*@8a)G8_"a=FNHOskt0@G2h\JNDQuR7n\RQ]=C(KCU\I'KMNI:63]=;JHdg<?9.=7N&:1/=uKf%C;f+5MM3kgO@Ju0bHo8JKA0p')W=h4/mfe@%?KX@B2K:]35^NmKAZk6Tcote6s)2bOcm_,aV3oj2D&6pXX_3C&rFJ=RgUGd9G9n'%B]sQC6'NXb;#:GqcI!iepsHu-:KGNV>fF4j/6N+-2PN?8Sg1:71-XOC(?EQrIOJ,d"@P8UaEYa%`3jV06PbXj\q!%<O/6X5(f.OL%P@Ll+b2'?O2)\mq2jq.9EgQ2dQLc2^`3'6-;B6Jcn&r-DJ5"`r).aE>4i@1k;4'cX+GFMRYqX7K*$3C"cEL_s_C])"O,kuH79%Xu%AScu.!&99EUDJLjH9Nr,%>%Qs0k-qMP\h4``!T53]C"]d0T#@0AtlYna6.`46qJ6BZc,gW,QaB'[Rl]O8c(f2),I^]DK>6R=Al%Z%0k@4e%Nan;CdeeVS^d;YM(Rn<RhI#lE&$o>aq;ngS5(W`TKO0T(*+]?+qP_Y;A2?j-e/u&M%kD5?6uSm@JVADb%&dcrGqC8c_?E8%^([!M+pQhA3\("%6@qhoW1Y<L]o;-<b.o_&<3Deu4C^Eeo(`A%IWX2=D<d"5TbCY<n_-fnmf'F&G@[72.OGG)!;l6i36FTH@-IOf%?CgM6D/cOC-/VnA.P[<JYD#$%>T6[<"9u7eHj]kIB]>i<=`D1Y)amW?ib3*)Jt@j)3>!+Z^2Ytim57O+'+ZZub\$E2-!5h_<&kP8%0f2Ch!LX+12W8lQ(DYpY=!tMXgX&ZXH^5<J7g!.Qc6PDTS_L(KR5fpdY#tng#AdE&3"h=M+@#gY%n>RG/-rNj\m'jU4Qk<u%?KX,%(>>2,#2KBu'HuL*p_hC$nFpEZ@"hA9fac7CI(dR$81L@]/52ZA38EY-g_cdM3dDEoUL>9*_A5NDk[o95"U"*n#/(On&14t^)gti-%&EdY)]ZdQ6!2P$!"GnAOGeK?]mqE=l*XW1f7REotKr*9a#=_G0+B@2=-im%[+Nf\#(CB1e"c/e9#_j+\M\$.u)aa1ugTq]D!W\cF%IZ?oW.=f^_[?r?D->l$0YlOkmLhWgi6LX<a+P`7oX![s`r&k`Y"r(.`b<>>RXlXPA82W;3%eBu2T,bBgbX#6K@a.Cc0aqkM!f@$U%0jof>e3ecb+PgpG7gd3W^C$.!cHiD^TX7\',t78Cic#>ifTO\PDKq=ZiWpX+-8W0U8[lX`%gA!XG'7kRYJ]6f6BGYS0M)X*Co<^?%05'e'f91O#gO2f/6OcCIr+6mqA_6(r3RRH\@P\B>.,A4&#('6WGn)!Dd64K/2!Ll];sGQumT>q[e$8`9,Ik5HnGBX>T[$,cj:XC6%isUUo%8$a8GR?]@'(KJg;)(4]gE:0'!f9[_4V7Z/IZIsf(i[aJ(mFh*5b-_@Cgf=1K:oJX9WJIiW/$0@#G7+uGi->_$%d<G9+l]h%qj^'b_P#0L-+Y>XB+__V5mk`rHhMHMVq@.R7#8"8JqOiDO+ZZ,E^"CdTFkGW,m./29]<2\%H%"Z3<R2b!`2l8DufJ9VM_u!K=Y`p%RrghTllcQg7'9`&87V>uJ/l%sMgte[Pe3T?pb-9,9W*3HEkdg$Oa-XEF?B"XO2X%G,OZ/@J]M,Rr([S,o+_r7SJ8-cBiP1qi\l2-%..B<4f9O+4'`"<;UU^uGP>6%`G4<53E'#f2aJZQ/Ft+h&)J@&P9Vc$7#=8P5DY*dM+C*^Z`18B^/F8b=)$c<RKcpB#E8X=97MUEn%+S7T)->k%;9A/=)H`8G3,Wn:/-p0o.1#YXFI>7`u4LD=tKL"2D&>J>`#9Gk;Wo4&J@V4jIXSJ>g(68lue>E#S\G97eY5iXUeT&[t%Upp+I)$,<`<!#5h7RfB3cVVp7)e&ZX!DEYR\1OSGTf6T"Cr9JJnTJbhWn?;#0mX=(U&.CiOf&r,LSfube80p1pC$0dBptQr*-;6B%L*>+q;u,h7,XR,PX7-A(*H@-l-.:E/jYQ>B>'R56^QodaZ5nJuUGmhp!H%hq)Tm;PUH*lrl$*pRcX6>3a7s43phUnI^1$Sk&q4E"%:9QgU4EHm7hLhC_`1:'mZ<a.<3q6=B%($)K)5p/[/iO<[UPZI$!Q.+J)[`%RQisM;1u_)';M4%F%J1(?<91f_T^7c$LkroXKVj!q%q#`:jI5lW2:_h=+`UWmhBM'Y7"CJ;L+pnPb%M#.'KL'Q<dU:0"iZNK54?22+![0B@M+#J-7#IJbbe?Ko>2"=%*=(1UQT5u@oSt$\%i:T$;'Sog)dnX2<5?T$`5Y3J)LeeZpa(%-cVUIMn`C#(K>),\k5p0,HRm2Bgc4CYi=M]2-I(Hn[P7V#Fe)i;9RO7-+CNqZ@YL1tP%d'$k?/[h+$`MI+NT@lpn'Q1i%p,)R`oPt.W-s)5!)]81rO\3!aX-nQY3[PYW,2>K+[lhE+j(_=VpIqL^"*KRB=9>GM9-!T>2.[Za%$a0sls#-)aP6jK4DT%@o$g=F0T#Af*Q8E^R_D_P\'`]K"mG`jW/ff6@_r.,ac@pJ-=68lmOVZnN(d:.0GQoj8&_sbRDn%JU.r9O"%AscPm?arA]g,)h&8tWVLfFFJj(eSHgJ_^QP0#i&b0W?Yg`E8D;diqc1n*n7#;n.O:Eu.7PJlIjbXjKF^KID3OiHkrW@248q`25JU%n5Uo;;>CS2[S$F-Wfb>gBonTho1KheGU#FH=A6B)JQIphnMD&3G6i?&@M-\#80P&/rfBRg!W\Y-Jgl@+`"U>i270kal$_;07)q(-%0cf"&YF90lE1n.a+N"VP!_e$)M/Vl8k5a_h5hmTi$n_cn&Y"e=">k6k/r:^j"6LFpf17li0FfEp<5+eXS?jQm?Huhi0i][$&lY$H%-m;8N+*VEnF+@)u.G[3S,f/Lmr)oVQ,e1U^CNc3n6UNja7H/Lo+t"A9>k-_R`YMD<#m6Zm1<#5mObnF,?p.qU/'9Ho1kV56G2On%%;<V&-%Fb(8`F#uN8H,WVgI$eM_2No@B^.-nN!l^uZ&U]KJ$E':HJX]kcl<k1l%i6Q3^YH$SS&2,9KX/GH)q3O"K:i*4-tK_`(5Vs%_":R.0p;&gS?Q`%_XFY`1+C@fV2B4cPj-$kO5osXm*ILrH'1o"^/]0.\qV@1*j6>n5\OBS#2e0lCak).pUkL`a(Af/CF1)rU5aUK%C`4>LEWS6P3;4-"NeEa0EGn/Wms#L:]WA.>%bmAsc]:rNeM`07e;[M$8rntlr[er^R`NGDs6P0EOsJ)2j;6<11]q>X)WLKWf946,%0e3;47']h2&do<LrOT"s+-@/caGe=IhOBoNR?<)E7YJDLAT!8A+MHr)$1kP@_G-o-CFdsc?82o(GK<*"D+^*@--bTS,AZ[h2GEHr%@V;raPp1qE.$KV'H$qM@E._-SYsR9*=c]:tGakc!9sB?FmFhkDEC2Yt4b*llhQ$633,"+U/%$Uo;X.Fufek-&N]jCmlgNh(+@*Zo%/]%mf#cWHhc\QtV=%+Uni:T!OFh=h]`^\P5=!.-)<'9lKTBX#Ia9]`s%Y,h:/Ef/9UE(>+g7`E%q5N,^g*#S^cpGai/-/Sm`UU9G%&uK$"K5.lfq0Tm+_;Z%$h"&7eV\]X:;Q#k;n:I9;,^B+V1(g8OP7%P$5.aeTfoq=_Wb\,//g@H>$V%1CS6Ia@'n:,KaRhO&CprJk%lHbi!c=Z/m*]'a92*+d8,l`I,IDOo7^(\#cKJO)3?Bhes<(kR=0M%d8pQi&V_t7*!miAg7--AYcBUEdMqC5NQ+]HsgOt@B^f$\L+%2Ah^O/dO]cAR4#kZml34R^N=I!k\b[<9QJN=##+f_Laic2F&\q])3&cf;4rZEfkUmUjGGDSLJc4>`G289Fa!H:0+AeK^Fj0+SYqh%e[0e5;PW)$ZuY<IMa9[2.:#Y#Wls12qA)\/7!4O!H(;T?;F=>80!D_EZI>ohPo.IXJV>U3n_h?>"c/5:W'g$2'2N-i_jr@/l'Kf_%;hRa@VYc3mJjf-#b#`.'F#HS37;p>bK_p\mX$<PWrl@c'VSU)R(TP04ZX)F5DS?LBg;t3ce:]44]KCR^ek8d%WHjOGT:G_?-?=.p%Mkj.oIRt)33WF5Ngp$qKXu`3'c=*/Vc#i^tP[/tp`74KPZ27_77GYs6r'fiUjE-7]bdO[]l*&Z'4XVhoG=JZbePL`\;=qMeSAf;Z%;q6#N"h.Kl:r$:2a=%4N@@$,T2<sk5JKRKpH%IkB/sk9?!=ge$BHk9e\MfNh=/$)V.WoVd[,/[WP2',>$/<_Rf#+4,NFODRq43N8%gOYH0>47Rn!M>XQ]^hjLiMJXd9g!c+Sp:%;6uVutq5cpT\1]qNN?T1pTQhj[UtqkgNt`HR5h1.>Aqg=a$?3=*!$$7QIRp/M=+W4$%Ru3Zfb_Tb2$!(s#4:+),h#?l?VtiEI?7:[H7b>o=BMX6Q#E\;jo\T+3!iV]7]E9VC95Al'#='a39EQco;VdlYSi)T3/oO,n80Q7)%hA_=\\'idBi9R2P%92@0)Jl]]n;M2NaE%YW*d*$p_B4g(PWTl\jb'hlJ[t2ODhuilrP4q]Xa`+\cQbdsVZu_XX/g3-^thisU=TVE%nOE7BL#<1!/7QRPd-YsmOgVq>-rm7oE.(s+[Nnrro4%k`M5+0:@7b!t^+E(Dcuj&Da$(DB>F/bX*+6DC[;u`1_YCtTBhR1G-J7)N%Z%BZ-b9sk(p<rhI&F43G-Q>3!dotXP4)k9da^aCa;)c<%c8o#=eH,WnB-VWm2KEb4U<<97+mH#>70DV:>u=b+l'QM9?D/be%2cVV%i[%^q*uhH/le#82nqf8Z[V6T9QDScf\i.-P(cl2R](P$*R^=TYM9@8I8=P4!0YlQ/Nt&%Y><Xc0Ya=8'A!br<+?>2]RNRh-hi9#N%a#T6F[;El2:P3aW*P*L;*j3$t43r*]G)K68d'WnrAcaC=.c2@B9FnsMb^gLTIldW`"N<dC4Ie7/EV[N[YpjqT!.F-(\6G&tTB-`b%=oe0ndZb5Yg=O0agX<Y.n.<G6`!Waummlqq1d4\T*WNI#I_m#72l#tUrX@ut;Q'iTYmhrt@ONI1f=kbg"l&HY364[@gNq`e?\IPm%&F>E:p_V"u7%Uo,Na-O"7"&\KKEb7NjKGlEH.o#7$=Dn*D*m:[Tr@JU$<BbUK7oTCC-iu<<nifd;rf@]@)[i`&9Jk2iP`p\5Q[lu%&OAUL)-lBEa3.VPV/=h+P4PU8V#q3r&6"d,?M+RBBmns(:q_!t(dp$oVcsLpUrAbb!ML7,5E/*uZXl?uF3_,`?/PrtnE8%Zic(7b%T,]7AH?uOD_l!a?4aVLbg9[[^%*tLc1:6kk6$nmaeimHffqFqL_53jig(I-Waji!MkQ>YU.:g^teH+*OJmbkP0]l=Oq\KP/Kr:\?%jpAIZ%!2n".gFj8eBsXj^i>62M:muN>aH4MXM(^66%2"#iJ`LII(k%rg'VZg"7+51=M`CenU]Bh^#U5kc93+j#PPR&-$-W\-+sai%nsY*qEA7S\6+_/(;r[6i(8kZ#l*nN5d1Bp.SV4jI'&dR2Z!\u;93&D)$P*@e2Eb#A!F-?+a``h-)T+88)%sgE;[8X(p)01/6Zdpr%I_\<,9DC;$'l];BD^+D@/PGZuAC3]sD$3]k#9Eb(!"0jY[Ti[cYl[-Q+3!coLEQj(bLgrrG$>\.F)FL)\!5n:\2OM!SDkW/(lk%r%M$43l"!("=**Xtre4tVQpcF*6V'c*iG2itFh!Sok#Mq<#5-==.MFc;*PMRO9Zg]^ZDC3Cs/U2tj4.CKA<!jm)0fF&q8ss?'>8@VL%D(8"gKW\Yg&7aO6Va<2_:,67UXdT`R,c.*;&L#*#Ek?A,g=d=BK*RiB?QM5C0[^$.Lf3=9_nY.eDDT-9_UE5VWETbh@D;i8mWj0S%I,Aqph:$`KmUZ?)Odc+$7Z2t2r1a"7&nD>-HH>oC,n[X&]oe7#Y+4kFo&,c``u+mib2?g>A0rIaPQJP]i03mW.G@SsYN>eY'+(.l%Y$i_PZ?u?p><ibBccc5,Fp4k_Z[;?8FndI2*8?5?WeA0Yc-<Z.;KcMj9@5">^QkD2KfpY8gn4EPqMc.@niWnmX@*ik_ue1b+]DTR%:iM&E3:md!(q=8iW/Vj9f2)eZAh2AtOI);.W.4F8[U=(0_,WAL`=dl\G*nmAOQ]Bd[/%>eWU[9"5OUM74Dr2M]EMfV=.sdGA<ulE%d:E<+5$41uj&W#aiQc<Q.UL`a2+=6RXEf6IJ7]$fbR*CpHl3f=@;]GKWXtu+D4<ao3n7TGlfYrJh(:jhbA!6o^lU.ig=XWo9i-X"%RHU5I7Ac.`H%h]2rXSXqjPB[@!NdQ8QuAE[:>b3W0Uo;1/HR-sEV5(Zh^ff5n(IC(r[HJ8E+3E_+C>>O`Z-21k[/Kiqk6K1j)(Z/%#$-+)'Q4c%dmgtjCKCg&9B\WRBQJ\ibb_V&[mL][d^O3tS%gbE5tB,A3jK*:5XALDkF:\a:@4ERUt['6\$p2QDWt)LgTI$lSdKFl%Pb8g4VFHI$>j,+>IMR7l[2T4*8AF]<U[N++i8m[3eWYN#c^&k5+f6L\c22H/1R@LQW!9.=*@'PrdV)*6d('Wt((ng(q_*Jg+o69K%D[0Zs)'Ym<&rE`tE%;q?>/IUR5)S8'`#$'.$1A6Bpc)^U->E2<23;eqi,N)=hAiMl0G**Bi5Ym'jP"k0Y*tCnK$30bc+'[`jfsE-%]BRmD]+00A+$TlMm+,Mo-r5mJ_?4kRL4O$h_HZs?@R4Bd.O8]7!bDnCfV\\%hVSf.gtmpo(+g%5c,lBG=<MJ'qqD6V#h>,MEs7\m%A`S:1#ngC6Rb2f1#edtnJ=!au\bY_+_>M4QBiElLjS,"!nh7/Em:oV%iHUWH69,lKCG]t`+O$i9S/CWCWRXj>D)Vi$\SoDsSitmi%*W0#)1u=BnEZMqY[QOK?Z8=E^O8u6pfh%g9Q0HtJQ8sY7-hl,l5MU06'ccA.OD.$bqK15gU\<$3O0AldFNajGSIHaK2\D5kM3eCn%$.NhV0Z7Y05DX\1n?4lT9aa8B$hX#l90)q&(3/9r9L=Ii7S1`up5@83lj2:`p2d!gj:!\-dW<(gT5='*Ae:O8$<@p+En-lK_RL.n%>+i;?7+)pRi.WNF8iF]b0MTMDY+O?3Cs)Y0!I2-U*F.+[-T&>\D2L[KDel*_]Y(A;lORo%+J7;ElMX8&?Q8*GV>n\cntj(1Z+2"N%6XoeViS&mJ,p6DmJKqZlW9Mm\C6Qfm@^i+dR!R.Ka(U%QeX=ZqD4iM@4a=L<7?ktC]"jZ0N6tfJ4[s5ORpoS&n-]JQH9[SLh_\FM%i=U>s<Xe6Cek:KXCQp_EV9!8E'\a%\@Z.2^gU@_4Yo+n-/iOX#b1HA,8XrqQU!RD93k12Ja0o::(\SJf5EOUF*$a&\Qb;)qj"N<-%5UHj@MTJ>=BSZiA09lm$B\OtS(Jn[I]jDjf`8*Y_J_64S:apY"!D/cbIKBi'9n$kV'RG75)m/&[D=(SXGU!:c`*QF38+QPV__npX%b()7^4g$KDB[!#/3q)c&XN+=r2TJf&2ojHnGb-nT',ua%fc4'6g`BNs%e95%Wku`e*`i\cO"1CCa&RV63JRAXp7cjtP2G.S>X?7%%\&3nNkI_ff%<,X/9;1`l.C^D$rpVZOr=]R7:"^#CJsRE1S$J%i^!gDb>]aX8=rlCWep)Ea(4K[FW:qP$rB5c:")q2F[qdL]/;-Et%6\([;le39(3`lJh#AZLcj?5`45h_HFYQf?_!?$0qINl0qP]^gPBH=2UY+mirhT/,LYntsfOo53]iBg]\CH8SkOrgeiWkSbjdFOm>%ZlLb&\&6`<?6nAlYs@$-m;OM!\H,W^&T[[M%)7V1?CIV8G.87A%Te.),8^0o?<$A`niK'@2t$@:64siWAQTp33$[B[(g*u<0*3=:%&[(S#;DP,"*+en2>lo?nI2#48;[[kcC7KMt:h2Fe%Ju=GJIVsgdGNg=I^ZJ?2:,"5GIse#Qu/%54\2T.hZYd<5]@e2fEb";H*dLh%].Y]lYht)8ZAhq-l>/pM2f\U8AHa-ZmjNc*6-kORIhHtK;+1ecGD8@cS(J2#83Z6<bTIu(:1chs`Ue;4AdS*TCWr:Z71][Q>oCi4%DYRm#=i=I&S.grDFl:t]L,Ec!0^f'>$4&nTk\Z:LW!:9b@`BQ,mCQ?3`N:T+qFQkmZD&!Cq(/LWKVB_<ZIGX8KE/On)*`d%HQO5d%RYV*FL-\XT$s;YA+:]M?^(+[[+L_DO![[37aR3G&rK'`&1d09O(V5gt1M_V3%Xldi<^;j"5prPnX<_p=`\Sm.W%_93l@Z/PB#t:O%]V0\)A=QN1GYjX/.tPX]W,k"M0U^$=N0T'KPU5p+n>IhoQNCXXA=%'M=:p7e#Seq,CIuSPng><a)(g(@e<pR=h`"I3("_7a3m77?%h?Prd7cLiM3KOgtI_db(;DL^9k"KVnF8A_'gk+FEV"]L<!gnMmQMAV-5<\?fBuLo)C,FpWCb&;u<O'lsH,m.u>4hSteNsO.12lZ_%P\%JaK+KTncYM-%kgPN%3iM>m"ecO/+d!!E)js489Y=.3%In6<g"j^jXQBkqiZXD9orn`WA.e]Y>E3Ir@!CJb%_rGs$a%V;FYdOj%NaBD?bj30A2>J`.K3RU;OnaAbmVP&ZU&HR$4%eI8T)Dd3M=sI]CYZ]VZIXVN\sf_?dNM[E7Jt:ec(rO*$XU@%g?<X^Lccn#jI#Y!%ohKMd;=];CCZV>[4GG.T)J$Zp(:u7K2Hn+"TpDQh=J2r*$F(9ZTUHaV<KRh?Y*2!s8r_=2_FGm"+EshLQ9b\*'0#cTjOdusp\TO2%IQ6QYk$dk^B_.f7oNl\UZ^&'VT,]nF.E]eNHa/jd'YFV`0Q.qH/i."$g5%Jh3-X;7.lP#<Rn'mqF"JN:=)HhAH(>MS@')49n"#nE%Ek7g^OuPu=\k`j^5kYe!]8Gjm<#2?AaC`TNQS()X#/YVo?-"<$"t<[&),Yg@W2W\jNTYd^@d4%om/)plIQ6&dl%:W6>?aTZ)3V6D%"@KaOmOVibaOFL;Z$Uu9ZYq_>cQS7I8saeNI1hK1@i6K.(>=5m2XBp.4oVrB7qURl&3rc;k/J%!C701&9V=.BS=2t4Ws"ZW;=fRm%%:Y'/*%%.[jU>Oc)[BVW1L%bE%f.]=n6G'KU#JO/&X_DT\R<pUMo`GI#9EbieZU@@$/6S\!OL>Y'`(VnTL'FTX&?f4Mab_j&I,BK%=KXtQ6(q;8gr7u@e6H*4!BW6c9im6<7[0Yth#(CjU$ZbtPa/J.X:\!0"sU%k?IDS"gHjNtEF27'&%7W\espXGoMj!]_3T>md=83:%b08V!1<iq%k`]D1?M=mM.L]]\-2*%EA\iJBdWZM1MM-)5mZe&umjiGG;T!l+dLSMde`u8<U1&LNGW>Ii+'$rm9,Nh]UAcX2;D_.X%F?=31cJ<Y,lV7DVB1TqCTDr68PX+`?-[A*HoHuq?oIMBe([c+2$n[!#Jd+)"6\p[9C,8H&0hLi_R/JEa02oPb.?VJP)$p@75\u^m%3p8,LB3Hn:'_'(baK!gbVA.C'0jGKOLaKaC[^JhTOOmX1W^na*kcrKY[.!/72bNu:KI?2[82?s6S=N<Or:%hpGsg"k>&\I36on$p%,NKRgD1o"XpHYiA8h)pZfo="ZGo#<Mc(s1fOPU5`J<?,KOAK&ZbTkiJMHqK#oT+4SYEQ2b.)j[1JPoJ/-,h8R7Joa/K-TSMO?(g3%b(<%#+8#4rBg6G>DVO]rJGtAs-F2clC*t=9XjNq\?qdKl=<fRK]nE$Z0ubhUJ[@6c/,gR^3\5=%g1'hWOs[Ct=usR$"G+`VO4s[j%NLT!Eh[eu0K]T6;F]d!5#=pg9T^n:X6ZSD;V%H"j?<s>>q5TbYH-jkB_cfg[s!h%=\-]YhKpZ7k8Oe+\A4==t&E4t83RGq<W,R^B%04,.@aY4W.:3MDW&'LAsB'Cb)^E?-CW^F]*CiXb7^:,/"_:pohJ[MHg+@?kGDt@9F+A`*%hp>TTpV(uBhLK>GTf"G`NUb%i$gA!=%2Hj.t>`K'J#*:g?.(.O;L#pt\R,^)TIi_2GD\sCS5[0h\e]Uhe8^L+r)9t`WF-$e`7-l`_[!NCJ$ZhW,,g9D/9M@FAre#7\a^\"1%`$h\ed&"$eKNMXc;0sk6`IjYW#j=OJ!&b"kS6unA@:oABUe>job2$&'kND<8QV&rb/:tL%^0#_i@up_N'!n]g$C._.>8JV4%H;jY%alr12QtV\$+]Q';2dha<g.6[1RqtlW+K$*EjfHkDk'gc!9>_ep1+J0J[1RPLER8Q1g:\kR<e_gr2+>%#AbL:>(H?1[8%uAmN;'M@%i[,pLTk!JYS(#WP8*8<n8%lQBZqL>bZScbOZH,RVQtI%G!Z_ZLd4/2ecf>L#Ej=*:A<^m)jc)d/lmb$#Z^7FgIXS\;N'JrfVe@_V%9^MA03]iIO*f8s1;&qbIM4r@g@%ek'5r_2Uo^t0XAea/nQ?rn[Z56(NhgbBYH1FtZi^mDpN#lgWl(fVrlR+tK7fd*%/<p4//sZJ=%A3RD2-)9+oKYIZ<0ESUVh=8IG+/C<30MB^/jGtC>$].G9Q&5UXR$(W(83b4W7]5s;k_^`eAHg!$JYBTZ\]K_]_2F-g:m7sqW']H&%kiok2V$NuINoDb/[N5MU$Au,YC0FYT6cXmp!*^1CL$Z;YC,bmdFICgH24g!_`<'2C?U4)p+-g]);d>nE^?FEEr<A8N@MA7*n?K)]%Jd@!nQB;j-PTE`[c9;*.5n]=1TS`f&#Mo<%)C=5tCK59tNa_TRqi5r"4hu<aP+7&e_SBo7X+7"HOsPf$H-/+a!imlQh:'EGONHQX%n6/ltrliJN6&o%:EB6R"6mSd%JS;[s'LG]1\/1<EJ-gr(#Ze,F?a@&EES3gl12hO9K5n2)aReY/gk3nTVVDj>$D(WB3Y\kV;I<Q7%#S='9:cXUV/(D#M7o>3!WQ#F.=Odd01@t:H87J"l7IVkeUCmVnW0jaDl*:;V82:FU#qcU!RCoa*.e9NQdILri`NHIuLBN^H1nA:@%TKMH'%nEWo2ug1X(9cak""eGar=-\,R<=9d0M*#p1mOs0(4flIKV"?c81COC'C'$6/*9DiC:CC8OFHcs[XpdPN34i*6E7SF;k`O3%g9gC^fn&\%>t:M;J2rDCJQd.E_3@J;AifK#3OOGKb9D@-n.'%#@9UU/Zs!C_>66U<-!TR1h1YEKJ#pC@=Bo]$Zq9%jL+nfO&/Sb9%/>).Q[64j)/U:dFmq1n*g\/=*0JiAFRA%?S<.'4GeFBQ,&H#qWFPZA$'p:7[b9\0H]-ef*W3,pA\.)Lkc3$=0^:)kWg(>5G0G5Rk%p9rfNW$MLC@d3U6N*9q?ZBE6GdYCQ-aU?T8Q#a9LM8PF7k0bYFLf]dm*rO*f'q5p&b8oRQM&_Jjb#Ak+8kp'\G+2fhcQ_ou;G,JT%D2A;qh^3GaI`^rloqq\M^fDSZ[AZ[u@n[QI:SW.S8Ca2-%nLIDj4I&m9EA+o=/p9/85b?>Bc.4F'u?u1O(Q_l(%$HRK)r@F`7InB%<P.(j?`ro]Rn]88V'_HX]G`4_.68)s9J?Y%q:lQG"q/RlS)5O&,HU?4#X]3"'_D/_-qg@>p<ZZ7g-GK@%)i@?C`VirHL(:<psDp"%<93.5c!q+]DKJoPp76>];p7esn"qqM7??]:2'5,NL[lh-ELBW_XL-22%Eq6%o1!#!g]7A9f?&IC)B<u]33P,N/4.KqYVQ6T@Q4c!%[$G^"'Ig,C6S2mK/2>E]!G1nWm^qtra;pXAr(D<?:2KO,=$hZi*ch-'8B6h17TjX#@'1:XYr^$G4:GoJrQ[Yb=V"O.a%3]"U[7S@%@V!1tRZ!-*#m2AU'>g%Tp9^Xp'o%+0\FZ!Q&6:ZOCV`BW]hb[#,"<&Gl9Q58,kGR$GeQ9Ejrp/5Udfe)4r*5PX^Jc\5\#JMTEP]7%7G[B$^JSdoU'Tdl$`(!'A+Mbr>]=OYLEBhtP":XN>//E-BHt&hU7AufN>lfjFlI29HN\B0qKb=&+XO@k)$lF_"L(](ZhVPSCWL(V%@4?=IT\9OFSnVXEZ6H6^!NMH>1,/#jEN)OC?"Z_a^t1<@&<LIV$U.3q5Wm2)SrB@rZa9o[Hb,(s%B-DU@P&%@K`bE"5pq+,oou0S%iT39PFg.*ejA8,tP)qYScr9RGY`g5l$"EJ%AD,J%:-d>KG&8f5n"c=;6C#hIjfm91d)6D(7B(PI4DU+/"%6Qj!CZ9BJEX#k=.N/%%iI+;No<['Xn5XHhEO3POoUm"-M]E;CVA$Ih<pWhRB;I;@`:1!@=isMC$-Amn?-knO))32IamdrcEZ3!WaV%AOV(P#ure%DLhi#Wa%4)#?u7p'&!JrSJ1I;LO>lJS5--&A=+N2iC%aT;cPn&A#1oKaS5(-9LGesAn=4XP:#_m]N0j.$Cga-kpB,V!(lZKako7ci^g\.]%F%-VASbgQ\tqHdrTR"?q<S)b[K/i1f8A:K5Hi-:Ci<?e$WFG%<.3YfWD-&6]ErT>A[_cU"<gkerOXSn!cA<O\hY*?e.6Y;E8T(j!f^%3eNk,L0bHFbV#s^,Jb<rSR1EG&GSiDGe#a_GhIUR*1U6;D+AI$^Eo]:O_i"a[1%0_#5T_L79(bs`ra_L$l=-*%"#W^lRjF>!$:4/%JQ@#b=%HQdIajMW8O*M"A(r$GJ^\LR#WJSAZh*0M2F_U^6_7qeQ\lI6R9YAr-TEWIn?<R:<=,T<3qK"!4#L8f03=kjmdmL3>&)Xc%$Jft%7$(#9n0FiKIia%2IeVj$g3O^DdffMUWi<LATWYtERB0.D_$`2';Ik8);_Mn;2m?Dl;llATF]]h9J34;b>[D)0@4@P?8c>:T%]@8_&%cUo%=t&h3NO<,7((a5!0BHN?`(dQkZCU!`"G-Rpq41J47fEcXj82%?G!gt0,aF**aT_0bA/]h<)kcps#JWB_&)[Nr!BuSW%3c^jWoTt%ZVcWAFIkd3I>ZW6AUa`Q_-^"+[G5i07F5(@@/^2?\A37]/Q-r7Z#k+A88g5k-X_1W=VujBJZ&G^sO6*)D(T&>XI25LS%hCV9&nR*2AE:<ilA8eP0Y0XtkRX)4Z+$dJiF`hE>oq38u(<AHLnC]d^<2)E!=ksiSC_J0_-?)\J+<fX='Pk>5DBTCZL?mRqK!>jf%:*1Dd/E&:AZGN.P4t&RWYZ?hq@abBaffk8U)^+!mFHqqG&#0OuOO(4miW`flhs9%8HAb"r==d>+79fTArLK>D2>dDm\/miSMX,tT%flPJ\$o'VFQXsb<[iN$rWK9EkM7bTE/&,6PT%I/4'dE"-*ZKp#e6FIr%!#"9Ft`XZ9FUc*PYWK^['XD'pD\k=5YXejB1"1KGpXaC%]jci+Ne=><N/Ybob!L%EB^ehFpAI*&n,KF$s)0JL.JWJ1QbK"29s==pjS+"5]]WDX-nk/9;sVblNgp8@>oYB4<a"$RO[&UkTq.Ud%_H'0Z&M=JH'<-hT7E"P<HMBI979hK::rB+7^Q[Cl!\>iL:[*#75pMc09U.06CqU0cA^dGg&>i6FE'.MpeNTaEAO43ZYt0<#j?<f(%<&sSJi=M,5pm'25OHZ%.*+iNAfd"LYDRWUdG;\:_>Z.a[MMT>E.jOaJ`g[TO2`'gDl>t*#+`-RS"AU^\ISgs@s1Ls)\@YQ=%WY&!%n.\-Pq<(sOe?WOu2U"WHWTerk1AdjF%\_N]mfEoQ?@N2YTuWp/ZF4b2@(fhS;sdV!Gd23>7mj(5%a7E?_OkXM&B3(5^bp3E$u+;0%L'`u.(X<jtKNsW`ie[]n]s]NK]moNq%'5_/_m$0gnfYIe7pNY.#Q=3o/l,?9Naae]La:WVr=q>_L?,uQ#\6U063QgChg"rp#&u9[%aJB23fJ*46.n?XcG48uD+ukH=0C5]i!GaWe"F(?:HG#V$&4MeHj+]+$f1\tkKWdnj3Cc9D#o%bh-,>N`qJ0K'.1\>T29N?sGAI(g%lj6Q0$kTaOjNR2-ZbeP!FO+ru)\M3N2'bHHTCRg.c#VP2@\aX1JS*8a,`'B<*)'VJh;(cp$[\Qp)0u<"n3P+o3'[5_$Z@-r=S>lt%r2/>O$!<q7BT!#P8BOK+'Y/K<1_'>H)T<UoK6[E1GqWo@TGnT2K3ELrGslSJ84\`-*P0[P+e%]o)2`[^7Y;[h6lbR<&6IR4Qubt5%6.6,p/rABch$DMk[^H.(`R]m4'aa:n@T;`f5ls91SP^M(,DBmL8]Dc?K!Ksh88eQsiN_qaAGJZ2p)ce4kF<a6XP41CF%7sI[C_dH%@acR+@p_t>20Rur6Bs/u?T:EXfu&MDqX0,cZOdJ[Rq-=(b:bfI7pI<R]p<j`K(JO0c!Se5'I]LkjgYR/M1JiB1^ej'"k*p`9e!'r%9;BB,b"."'+.;q(n=GfT"Jad0j%OBh)KEH&4><Y/a@=Ul,GgkBI1e:M[?,_B4]%QQ+2Jl:<0g_#MVs\,)!:[u0Wk2OWAk2_N)\aq%0pto^%skMQA(sAV."`MDX)mRT)XuplFAAV4n6g#JrkKY+=rns'SU];CFU?u>o9.>SK=s?)2*e@c8ZO=h2UG'@f`WrY(tGF'=W]j2%kMpd:<B/lq-@K[.Hh>-hF3GrT.N2\V:nWW_i"n)PK"X-]]dhYBA;0ED%Hd^C<)k?o*ubbT6?m4a-ed-(V/p6I#'=,h4i!*_HEC=,%^_fpb\?)<)+`.SCf>5kuNt&%YS"CNA30<#<V(e30i>KlIG#"Z2-0eD[^_6OLC/u"<8ed9gce`J(P@uZiRMF7jR1hM:/(R&JRBU@*%qrU"2)L]K]&lIN.V46`9Pr`>0S]RR:2U`O;>K1NWo)d2$4MZ)#04:EtitHJpO/?`jF)U\_3bo1WFZN$PP?=^RKU1jB7m+aGSL6Co%F8s06STjXO1qN;K)FNnLgl;FB:=,eXfn4t6GCZt(M$9eeW?5_#7DJh'Y@)a+S"Kr2M<'Ss@$:XAP)kqsPYCbBD&CWBC$bniF?u>5%@)r@<E)khtT3k\DD$f(N_9qD+'l;]pD]epAOP,$a-)S*M&c%>Qr^^&OjYkSGZIZsg<_*9N=DW]p$VWD$4`Z&=r;$YAIb5XBfKb'c%p9ijH'XEB#3V%k]Fj=_r,LP>0>+'3o(*phF$<L_X7^D/%p^fj<$Nun4fKPb<`Vb3he<2,a&&rbLR"$A'ZgDYFEq4gT''E*?a'_2s%)fGu95f<TD]Xn26hMu8$:8g\<1t;a2miiTkg;KC%DM!m+_A<bGO3$Qh5(Retm!MH)3cpoema)2/;/UV!9*el8ZiTgn02QRWHeAOK%Ma(7HpM>;PGCM!NqmMY0'hCK-G2I02Ml$-H8N&,#]LF!Upffh9WL5T@H[lFU4NndT;+)[%/l4GS/PS%Y!]jYA5;nlFB$KEF6XQ96%l-OQio2N.P-e*Fm_$DDEZ_#/a<ljO%I)WJ7+"Q!U[X=bVi';UL*q:TZ@8Q$V8TC6S&rbeghV=D$3%mbEj+lQ"gm3C#PObsDeKFeE%BK0*b60=d)+]8f\ltp6i+L<f^HYhF=!grt#I>c"uK\42NB1=qWI9PM%gY2eHIW*2Y0u&)Ap;\7*c?mhd&XgKeR5E"(;(7lpY2L\6%/:h0HBPa9@Y`Y@A[tc=Vcm>0_B&(8J_%]X\;-%N"L/'#;<CPcdmnJ3E]#uTg.E4E,Ch=)A":6N_65np=$o?=qSI*,A.S=mk4UeSQ%'$`)3N,4kb!e1fB]Ru7DYTS)6D2\EUk_.4b(Vpe/e&?nA`cBj8YR6<;3"S>bBFW60dmIT[,9uqGMdkL)j>][i=e^iXNPZ\5LqmF,%_ffEcB*8HnjV8jOKA>AXNV`5nr9(<?>PO>Hs76&d[c<#7[Jj0KN1UP+_i0ToCIoUHV,C:2W\8X5\`oa5=#ARK[&%R"i"2b+FA#1+%@b%ED.4?a/*"ojopNKi7D&'MAdUZ:7.+*8rGGB97[`R6W\'^_i0dm<47!k>kbJ@oq+=gG`QQ>iJiFtL>eo&JIoc3JS^16Y.pDsj;%m_?.*%LKeZH?NLhoVSF-b#g#\q,k@j)JY'oBEr+=J)Fug-ljoF=qtWp9Y&PNV[Nq"P\_/!d_il$j[r-:eQaG<Dl/LQ6DfUgK)Q/C%^<A3$[aSO<W5H3biOjj`'^"Brb71=5joA+s3dN@/=6*58F?M71LbWJL@o8.@!^uNgN,jb3_G#H->J:ZaS,ucp/_rc-U:<p`/g.XE%nPm?M`TV(5/P'E/m3Vrc&OB]Hd.,3=.;g;#]nhJAG=B-dgC)HX-1o#Xd5_[@k'k!^XikRCS&pS'VNtkp6cp]fN+`L$nrOSoKS2%J%=%f8]a3#c8$_"]Y_%.mD(.ebp+<\k<6+;EBC(5ik.iGmTBr=0r$k>UWS'T^4=YQ;lU$LFj%^suce3i!1_^PlsrpkmLd[".q<`#:`%E<AhZjsNXmpThECi,\KaNCN2<OnENV\&ErU9udlb>JEo0*k7DoS8@sY]^DE$Xu##`?GJ1_NU,pBS<)Q35WW,f?&:@i.CAK3L&7#f%eZ_5H6BQLc$\E[gZ?V$_&!N1>E3X)*_u_-+&UsGL`%JBU(l%Bd>+kW!"7SY(gcQNdi79PT86^\t:!cN2KZaQV6?b3"0^%D.8;B+*%>Jrb<[SGg7JFS="BhR<DV"`N<MuJ`[KLNnDL$34Z[\gLV!*rUKI\%=\+F2@nR/i_7eXQj+PY3^'`q14g@J_,90$O,N*BeFp/eVKU%,T4RZOo'1kc3Ng"B.h)XR?\^NmPut"IS)AYgsg>b\':0Y.:Qk(?kglgZoRb(-)j3S?/E9dLTK9*AS<%X9CnBKLXsQJ`jSFa^"&:_%OtG]^4gV+`\C?`o[6sXp?B-)A2`gi'gZ(sZerBNCOU+t+KkM`'i:G4AL_M]\_'4+3A<K,jUjk5'MmfUZ=Zh\JdT2Fhc*eM8.k!8#%qG%VLk,B4BENX0Oh]S?JPT-CRNtWT<_jB/0X9=nF0Kp<#;Afn!Q%3$3h1D'KOKKCGDF,>:c1F]imHk[M+2KC^Kk#+L-@;-)=jjJC%_5d-b!)lgp^Y*e,DX)>k7hN%DD:Q%0&Tm'S/8SVC!'ZlOIr<^2Pm)Tjmi92n!*)U08&M@:]e"3[U[?W^"S[nJ6,P#_)Vu2AmJ7$)%0OF,"Yels1$?hoEp7"K?@&>0-AJeV.X\2i=&G(f2,Bso=/7O.W&\oblQ8#?^SD_t`T"0]F/`m\QZWE(K0MVcP%9"BCn:f3]E"[TS%>]pV?=bBMr1d$,*Y2RclZgF+:cd"Iso^n)X&"fG7mFfspY!%,\hVmG"1CkM?DseW@XcM4pVRu/g\^TX3\"h0;[7QePi-T'b<SK+[%+>PB]JsQq&I/2?'5+IP:78Q>P'I-WD:aKD]XZ?go?_^1_m2Fe%75D+t8@e!$hs_RcgnGsU%Pir%F5o,!gqh[rZtQEVJZHA@4/bu.%=GK.2^]XWIB^e(3=i^nZOpgi@D,HWDT_<^[:e@b]dnW&>k#FO6mGPpNNaLAch4Di)`[;rT6Lfo^DI.-O%P^ORT_l#.Y-3;,1/@4b%((p5MLVk@,T)t2/$^OmB:HI:u(iKd*@Cra7fuZYda\jo+GZ2Da#Wt_h1dEJn^jueQ0R]V-OQIRBrVN-%K)IMme1]@&W&rS.J?8`8%&=Ln,#-5h%',WGngdFU30#R;Be?(058/sd5fN;iLU9^<*>(fDB+s8EV>UOP#1,VJTYDE>$[>XX@7"CPY'@@^9*Z:sNh's@2qk`>e%fC"T(m>T+ea$qQu'!m!81LPb7_Z6g8)@96mCLF\ffCkl1Cop^4h15`(o>O3.4q$+m@3@UFq]adaSFi&aTklCM$rK(iFdW,d6(Pk1%p*3+\2<F*##]b;:YsFt7,S@m%aER5Nbu*?JoIdPb0_SU:e;bh*_agIQ#$K)jOYI'qVM&^A(0GDJrFgpJlo;SIF/?La&R9r_kEDQs%h.ak!9c*V:Q/'e3p%5cc$5!O65B0iDMDiST)9LfSXucqOlrhpao4K3\%K>JN`f`;W!\D0/=QRZ'EsLk0klYncPpe0l7AB3%]_C)o%\m/J,WNU]omjl8d$co-8Y"ru&"bU1G)(6OfaueA4:>R0;A!8Nm?O/N5SKZ1oSDsI"CK$Hl$(6lB!D4lU-q_7r-6q7M*V2<pe6n?@%eg.+*h*+8Lb$fm#&.+BP1aW,/$r,Xu!2M4j/:Xq,@<C6#e1AY74Fg+i*8Vl@Ne7Z-`W#O?j'$,KQl+`-1`4P'C(.teSD(583t<l>%Sek/86D\\0`0&HSU`rDsgJBmBBlF?PIC0N=>=(1+LEkp_0lWO?1"EMb)96Oe_B7P`5m79IcBn-0%(fKnKdo1Ac75XSU>fSnHKs">%dGbP-cQlWE`R8o@NQ5F@1PhleVt]15')laknLWs%i`$&:q'd6!.[HP?rk2e*K$!Cn@]-!-\Q=[m9o4,!-3)8p&6,r@'X^I&2snoV%"CZ9OnV.5#W<0(+MfL:g"dfmC\@?bmMrF*]p_-*$kMuL%p]%/k#Dohfs0taq&FZFs(&L6K;#0jK!I>lXUGi:'NI63NrBJtPb352L%du_Y#0'[_ba-d3o7R"VWAWeC#Mq&O-`h\`;?_B\NE=oC7K0@e(+J]\g0b@"ic42<`G*q$(pVMXn^K>H$jXd!8FD<cfGHr@J6aKb9%PZS=#(]&>.qATa/WL\U.\epHl?&q`,Yro^2Dg'sNAV5D$;V1'>]7Ne8?"$;Kp;AAHm;=!fHhQJ.-E^P-`h<agjA)=gmQP:^"%:!S%q'>m-W1XP7iISe[N#Yr#`Nr127?7QaSA_;\Om?5`W0^oC?^2lqQ2.;6aOdS5"/0u@QN-Ir>`qWX5JB%;le?+%^dbrVRr8+HSiCt4%<6JnHJ<YQZI4sauHVDl&r-hDl^\iO]g;!Q7:>W9\I_!r+jTZRNc/`1h_0]aSJ4e-E!+\9DBE+0_Pn:SrpH53'H.U,@^1)^?EOd]h%'lsB_KLVhDUs-.hN>+baOBdA8`D6d$k_.<`^LfdOa#4d(KQ+b"S"R2.5[j;"n(RY)G9=5g^N/$M$")$mig0ll*rsXpSJm*gd*<*;%;9(>n?4HVPC-]5-(fTRI,W11UD4MM]r1:`]o@YAT?X^MdoratnrEI\&S+R62kYE/B7gBZE!D1iM<rBb*.u%a:G#]mBA7r!>aTDBA%X9:>@[ad4237B5/Z&cA!J!Euc%MbGBQ?Q-?p:-"]H"8X/6sWL-8bDIr1%M<*5s<!>OmCb<A]I!kAm[SWqqGJl+PMG5JYX@3D0t@Y%4W:d=qU!<k*U7&!)L?#fRXVI_^D2-,"C%K.`iu-a8+B,j+$X<K[P-c0;OeB@jFGlr-crh=mUXo0BL6h5NqYiJ,;BuSVTGnO6qu\A%,liou*P8CT(,D>>"Ue@)].n&7G>cm6Ub"j:^+@?Jq.@\$dXr:fY.oVW-EK'&m1\`$BWHBs@Nl!.JmmPQ/Y$bJ4kfZ-`>\L",K#5?%)k2"S+,nJL*TOK#O,_N_m5[XQH(>qOp>j%LD:"&-lIi"5bYbfRZ.0f8IC:hRF#8J:+Z`Q'(b]>Wqi-\)<eOYic=$QXrDL5(CMp%)%(dP*"@UKCOU?#iohn'2I.jG8W&Hi2D;s$o^c0?#_VW]7_6gf6K/i(GZddQA\>LWWkU4K32V*smXT]iF"Gn[it\.]V7%?N8"[m(45%WkIuhKi516(Qd]>V6QalSG^s+`_=>)k&3>,g`HO-jm=I5U_qsP>U`DlA.n8u#"9dt0KjD=Nm`Ge;o3Bd>q$8LZqlW\[3[HX"kJ4t%LW3#Sb^+e9X=[`NYgDBRW0HK`1k96?fOn@5]@7#C[EIiVMR@l\Buu'[7E!]B]"D<`%]#p1f7Wes1Gk1o3B/^a/.>',]L\3E66C-%%!3C@_^b)1!&2,,cjTPXT,CLmHk'rZmV$kdR:B:ROI('jVk%oPLf<q0,+dK2n=T/(=(:2o2Hm6u?"A'+p)u?gKg7.p+hVk$$?:+i5%8ta/,WG<oublR.[6SiRo$#gQ(=*?!dhV"f3m";b'k!TMJn0408+@.nTSb<ffO%LN^9Q8Hr-42oC+RIE3M04NT:,(WTs+'LYr5hRi%Fpf438kWZ((cW0<dQsq"\7M<@Dnd^0(VMRAKRt-n=R0FYmi1%jpUtp>rUIXn\Gh*N0t#?\f@>6Hde`i_SllE;XiUKgjGJJA".9I1%&nEh=@TCu#o)e%:&"!Dhj(M$K$&UL]3mjb9aJbDTjdphg$qi,r7Aq5bSMYkuH;L28L^R'_9mK!9R+;oO;O%p;C*><n"!hE[UBVVe%$t:#^,(.Tt`K9_6A4/bC8sK;i2D=>0im^7h4URF8:tRN^,O":?rl`F5nIYrH,1HI@,joUXs1n'^3`P>o8`5'iIE&Z*I)@nK&1Ou]%*Y+>XOimq$bK5E6epLg.RY?Oo?sjq"f?hqIEaj!Ms)`.'Olpq+JD3"Y%<;:)\NpF.pcZNB1^"GQpPONN3Ka*'<2$M,-JqN9_",*'%CS/.&b3Um`E4,)$-!#9JV=Lm#<2:h%&;(*QYO]g+G3+edpr?SCH$dsb1mW[t,InKJ7?CssIibuW`J10)gi&6ae^+D4n`IBG(C`u\%8?DdX/t!`fk]sMZEn>]4fu?SYg/W7)TN#,R,"glF\6r>nHFh<s`'T:YVT_TNio2/e[_GpQll-#\\)Lb5Or[,oTa.m_hRJab2tt(Q%(K,2?OP!EWIa/WhX]46^PE;OlK[7QlC;JEGnF9Pek8Pu98N!`0kg.ODJiHjd.#80Z,J;;e\(s"'2BCbTTjMXN7udK/pS6k/oN[$0%)KZq9rmJ@qcOTSr%3Rf-90mI(&;>jt:_^h!Xk[;tQhn-2"&GOCXE:^u0&1[!58Dr#9&,Hu;*2<hDd0f)bBP)9<kJoTgABFWnIpZQ%s/m]Rs,+gtHWeT7fCs:qNqP"O)8"_T[1`F]$]:6/HUQ%EBO6hlf*H?h1`7QqK-/HOKod>pXN!?q7h<H8n?[kEP;6P*D:.1##5trF%*S^4G!W,_JIJ*r9ci-:;@mFVmVh"IMTQ(q?Z@]D1bN"B9PPptT?=3I,ZfGJ+_a]KCX8u_rqTBN'*HQsH;.uRs.;Rp@;qR69R)QWZ%+:AbcXGOn!QB_&:!u^!kD6RM(?@teS^PTC4l^$uKKGJTBebmtaNP9,a^QV.7+7-*/Tf,"0m=2f470\272I#LGc<+Jd7&D$r#_^aB%A$F<,WR?CBT=3;uU(Om,G'-=hHKL-IJ;3?go5bp<)"7qM<Y.R9Tee7j<=@6i2kf*,j\;N3]Dc6g9U"qn'IShjm!20Tlk.k_=mXMK%IAl[YNMf80L]98>"0+'tep_g2_On0\.u4[g.a0pDWYLpBT9qHMH.?U'Y']C-J,JK?IIkL.`7*2B2:?(@J0Sb_H-*)4IK/[Wdb-la%bu,EBIU)I#DM$"a#HrOG0RV`1m_L4t`l7;%OQF:QRFE+*/3`j:=Qn,kp58f5JnI[SRgI+DEYaF8VCshN.*,W_?j+S/7]gub/:qCS%[Sp!F<@4MRV$J5Ed3,qg_VLi&dC+T=b:GG\=b=?X2b$])rkQWURILHu-8^og2";4P:Q%&?>g^qUZ%s09XX;Y#Sk,MFK7OjdD\jW&%iLQ(55IPk#e40JPP/rR+HTr.M_O_SPL-V@KNF..LD`l_YmMHO*QC\s-RdeX^aq"s2%ueZ;=1O$nj^_%Vljgk??.WhqpRmJ"jDPrU%:Vr;4V*'qe`oO"Y2'&H13_o85kd;&4a[hB,'MpZQ-%7NK@a>*)PuOk'2j0G[JU@_$OCN8>PfpH4eB;0jZGgNS#m3oU\/C;PfhrBp%O[d;4(4;>RRRX8:;$IJTV,9%rl#*W>[<[3OOYa@R3eS`Q(/nC#N"f&8k'@89.d_Lhb$CKid?AqtPQ37,KMW\o+':X.n[&2K^.qN-%m<-S95)774gc/q'j:T?eL::GHEmn-K"qoUdlG.3WWl-,r!][h_^/m=35DBY%j+`ZolJ!imZ%,Oe[_uq'"]dOVf3enqRdimr)@H/W%?VXU#l.RgjloT9<cIHps258ZT:_j6)^s;PnN(ktt@]4$IjQ_P1<h6=F.BSr3Vgk)GR!`b+p^:`S$]?/_j5*A%Efi*tT1l_S^=WV%%XC)8.MkdF3+$Tnkj*1($4W>Z$*,tAJns#>^iH#0"Ig_ARQ;p3I7A&oHi!48@jTQ9W!`r*$IqR9Z^V"DMrN"PZ'm)4eQaarXqF/Rt%'p7j.D-R%jd]<AII7N`PpY2eSe17?bLSPDHOgYFucN!u[T%m844\.2^m(rhG?,MPP^4WgC?"&67#2g<$D[Qc0(&)Qn;7h0sW..Ve%\YJeONSi"3pQt8.q&k7a:2EIF'A<fu0N_I=.i;,e)GjgT-kk5mS8^V_n3@tG?6gLuo.)Th/8n]'IScV7/4e.7qPJcWrjqou6J&]S%?/p.8p#Bo$?9Tr"-RC[]I6-&.2jb3p\Xp'a<<ItPE'@57quWQ2fX@@.r(aYbokc44O30NL=D@UW16LbC$k3P]rFgt>)F>B%IlFtn%hKIZ&8#+KC/r#F%!WfkqCQeH\QKtDo#)&Lt+.#h&f$9:_=au2l`G)SDLn8\#h+asV.;cj1&)m;ZQ0Wu(`2jQU4OSec&j%f(GL3?X%H3oXj%L?:-&60tK%$'?T%A[aUZGe1)_W,e[\mH?-VI6#=lAM$*,l@)`RLqUQ\Uq32[Ze,d=s3/uZV(pWdrtP%$:J0nf"DLSi=4El%IEL8(h_q2-eb820""t5CQC":;R`fjPBSV].1`Fu^V$m.*K:Y7ErVDc:"6_6I62s)MXnVZ@?pa;^k&qGg,F!1h"iM:eKp9Z."XC*;%:%0Qn$9M@B/B],5HG#emUcmA;@FcBf^LC*(4P*rJ5kC0Y:msk_A[Q:Y!5Wh<48OEUqkku>:Tf;"U<oi<^)7>KfqhCV#DNu<\rE'<%iC!)l*IMIQLScHW9&b-_#0.HB_03q;8m#:>:.i8Z8..[NdX?c`_Pi+A$:?a;j:`FX-m)iIZPs9jIU\"?\)].a;GIQlbcG1d6GDOp%=W,nYVW:%k[PYRJ+)ag83k1!=Iq",=.G#g?4]P#Kfrtb'J^1s[a8fC7a,M;mpW!7e.u6Mcj8iVm+@P[#M_OYAQL2LJ_OVoET,"r[%(pgI*!&7=;/-V%5no40BPr1e25gg:umO..K]PV%n!&AfX!o-G27s+4QJHW,70c>a565ns:Qo=FFe/!I/<76;fYSqmm>^1EFYRUH-%aBh^liQ%/["=s,h&6W8o!fVQTa,.4GSV*;24j")<-,X":[,VLH!]]gF@HqdZP2ICH#cL(#k\bB+jRd!YW!Qq8FJJJU(0j)Ji145J%e&9h6-.dcU]Ju2VKOf;UhhhmC8@h(\neLeeK^n^;)$<&SjeEk[:F;1Y$QT!D[7XOe'O?52(CETm!6p)&3C`a2=th)dil@Wo=rpb`%#fZ'$D#mMdhQUbO$;.J]npVZg)MSS^RaIhpg>3<g&/:;Xjl*4Nd,u2lU(+s)#2#FCYlT3t`Wo!%Drp\RUo9-uC5_d*'dtec7P*d5%/Ab6kn]H%3&D#U!%Nn'SUV_Chg/UBqXt_QA6\\nrVa2(.&57H?9d1_!]66km'D54'$h_gF$M=XmATh<a9T6s&MH<HJ#6SNLcR$)r%_)'7^&J#k%mL($M3ku_Sd*F)Gec&cGmOo4)>fgiBr2diEs*]CTb0?+T6&K:ppAm:1N]6=!Bh7_#1;'=?,*\mt#4t#'"(f4N;:\U/%X#@g4hE;\U*0VsnLG5CGrI_#\eE6HA.+F)gG@pO=GdtWK!W2Je3Nje\\Q_&?e.0D!pcq)p%n)'Qpc]kC;14Lm%NG+hb^Y%PbWcj^%gsXUeNAlIK@C$eDjs1#G8eo7\!Z&19pmqg#W5ok^IlOb'rnmgB=Dne_1g(r?==-miQC5.!c>?DQ@>dS+g9nK-8$)uC?b>jOqc\I$%YT8r+.rPK8%qn%<L:/".;XMR[%!aVETt)Ee\+6"p4tAAO8[]D8<&[00T3pq/$`JfH#0+T5>rNnc9#/\75X7MFg;c#X)Gmi]#t077%lVV^Eh-+,7Sc,XQ1UkjPG0?Y5;\7Uh=nNQsjD7aU1i/Mg8uFge&DOj[cI!ne9KJZmK)`D`_Ug.P]Z,eW[itiG"=`/.pV?oSK>0p%%:tCDnD?8D?ap)TI!g-.$S)5CL+<ZPM\dp-p\.9q=h$<O__gO4'3o($6j#X\l6!nf^dke_Ak<*+bU<;Kj6Ci?(Xpi@;QBG>j?PAlg%YDE_/QPOgK4^[R`ApefWFk7F="Lc#td-frL?@6,,l:DK!qS!eni\nNSRk?i@#D9,GJ4O&(kLsN#bgrqob$1Lho.upNh=TXY^q.]X%`]$>Pk6rL#2`t;sGcWWP.dGEcH))k*DA\pd9EgBcB+`*Vfd4>hpa"o<'ED_CKhU3mJfk+""5:2L/eA;R+qiX9;q+@7KZ=WN:"94u%Qu+bi-nnMC#6M^ADWWA%+r>Y]%&gcC<uSV40i,/6!klMaKW@e3dcl,K4Mm6QRSCjJRj5MHLQ!?Uf\p3^KN\T/%CLo>?+#:?X^tV9%\h:]MC_0pc<Pq19$?CgjngbDKna]q7eH/GUf`i-$)'EO7:Ce<cdPrd!Z@h#+/*$??fW$XjU9&5fK.o^R2@Z58l4Y+t++d;^o0niQ%*`B[F%<'o,W[l7;R5WMHd2cQ-p5@_k/[IkP3EC'dK.G,`]Oe1^;)[::"e+;R#qk)?"mk*Oq2+&^Rn]=-ZDGst>IJXVK8U$3-WXo*%b7<TW:,D;?C2uYX&rnsWiuI'S>r:?e9b&0/dKe:p%DNo=+;Mb`,pto9eEI;!h3le-(I-7J%PQ1dWH6'\n<38PCEoZZL!a@,"1kWW%mN=t+G19@?LJd3%"dGqbB7YfLCkJ_!Cgt<V1I!R@5C3^LRS35)6#,$"UL=5+qnYO7i5K.!`*dF#0S^&*f`B!sq]X^eNt0mmSdg%N%^n.C,\/?L$SY=n>UtFktXD&OV\H\PhR2(^'\NAb8<Rml%YY\ehQd"Q;L@[-P;gQ-KH.G/:lbfrsOGdh%!g*"oM&Y'QI5bL"Z$W&m%j@Id;66-=Nk^g5I4st;sr]oPmWfob6lI$'m^uHpbGQu.JN!>BC!tXKBP?Y7LK2"i&h?APCaL^rkc*\\CJN(EaJ[^0p?CUC*5.K:)%`ITu&]/];AjltRo@J_S@!\IcHaE6?7E,jef@.2eD_!(a!h#8/r*d-c#?'ji2Z<$>PM]3!,?>0P4IOOo?)t`biH'i]n_!ih4jj4]3%r_EDgSj^"k2\_j*AF17`W:ke,-&/]%Tis5Z99HE,.#XNPH1aOudTi#4G!FKjUX+8Ur`b<K+*HPuGi)8o##e4:#\`%T_Z0,9!=R?G%A\9"nO9bC_2\#<!c^uA:S2&1mcF:G6&!*loi:.2']YIlF)/&nNE"&<B+ao<\h.3cK2#2nL=)?J5I2g7*[X_%l\kuI(>iGX0&u$_/%l.>dN&W8ftf@\A4VirPkRlTM<VS=!K+C16*C<=[(lE)$=dJ*eO0/*I79^#mm9JmUg)YW+3pYd#$lOo1BEfd$8=dt1r*Y$'0i5*1(%P^-:7^Y@lY"kG#W%\M$+hkMf*DZ`PH?+KM(ZLfg`25(YYFr\s2,t,#bW2mDcalF\Fk"7ei+cusAB#2ZM1N)*?=0oQQid,YgZN_LC%%DP)gS*4ba8.NDI:NhL&Hf"LDGgCX2,2Z-<[DacI%bYGhb^mqG1LbmhJ;=2;MSP;o\F7*j+Qfaml;^HWi7^fLe<lR_[r9I)i1)kA%(uPLY!Bq&uKC9HmIX$q3%U8Vc$2<5sl!](VFYk3.@gb90VB3^tXkSD#2kHVjVJ$p1k:W@Up7kI'#s1;LqpmkEHiBOKp(QVQCJCa]%D\c^cV\Dr\R;(#,@((4n,,"5>g>6E$[''*PR\OTp<*9-/.'FsiY&4YbW]J;!l$X,-CPtI1&[["%dk&kr;;IDr#Yi"7&n_=/jb/nS%5FFnu_9304\<4nd[6/mDcGuPP.!`+n*mmNmVu%0AJSRa\GhZ("BO$kD&&IAtJ%DCRqFa<Zd^HYBFC7b&[c=n#TC(c)C?!"48a[\[%B>^^F(F9ca/P`Lf*K(P1!:pYJcODAh8VKO:9!jFA@U1^"o/ketGcLJ(/VndP0._e1NB8g8Cqe#DH6VGCM]EFGPI><*DRP&-D:d%a%e$L,m[@N*^]]Z"e^fJL3#4Hd[PGkDul'PEY!HB"fjAB#=PRXG$*YK4C_);YAlWmlKeo2S!DsK=s\h\'J8po%a?,E2o2fG24r9=@W%eh(gh0'kXQH.pi!.?[jA)-GGR3eiY?j#$CsOjkngZt=nU\7Cnl+Z_"*9ktHS1A@JV1Y^eU\P97\S'^`R$'*$M[uE$,H9+%?Nca^h%J?k11LZ$;Q4OKP?;_pjo/5OP+I/*>M_8@Y`Mbm??>@K$H[k\j8$1QWI,Q^.gRIKS-kp-<o3MF0OdXV2X0e(`=Zi"rse)"2$f*Rgo%T:7u46&C^V`bG&j^%o_X:HnCQ%SY<#8Dp>WZ%4ah*IQqoK5g$[41;J<Zp`oFmqI^BY2.KoT13n);(%WH&a0rF(L9VPZX'71W`W;3%6#4Aoh>F=]:?)_/r#%g0A+'idc]I'YErR#,L1";j8.Rq;=t0I2&UkM#qRs188GLjm*CY<\Z5SqH#dfD*OG713TLD\O0rST=5\hL#%Qd5rEP_:#j7\HG8QJ1g:5XXp)nr1io[-YCk3!.J#!d]s)j`G/Y/KKjk1'(8H2DYK7J2rXpJ`($^;4JK+a'Q4"L_:L4>MXVn%D?,Q%>$!I8o_;'-e3]qI5cB8G8ium=Pc$j"L\s'YZJ?7cobu[9QXb^A0IhF.Qc.:'K6eCiR\F<>d33'A/cDVMamfB`Q0P5?2;n6TjFpF8%G=KW.2OadlS`%-?fX,Qc&nJC1>A8C;2$_G2KF8Wfi*tjVe%Z-Z2Ua%[2_;cZBQk!c5)F9mLu"bF-,^"6(7_8(hHL/s2=erH49'a(%nWk<C4u7.HWK<u4b;:XP7[4kEAD57@[mE`d<Xh%u.234)mBNEX9%F-#g7CmF'X3Wc@+h$Zh,0It<1V,fj:qXGdiDD]->hoBY#gZR%#X?$^f+FlAf09Nd;Pji'YC@f'(f;OSqFA\:Lip'%gXL(%Ym=U$Iu`MV>N>gj3SD3G33j=E>JuYZ"+Dg$m(00G=oPA4B?Oo_QhGD*%#TV%&OQrc^QTrdP'$@NXd8;FSd[0ubN;h\qT:c<d[pB!k4fDl*eE%2bL."i,ZMaOegle#c^OPF]dINo"kd(+pFR'T><^1h/N0rT#%l;(QWrAVoL*o)2:,>#+]Q5cuUednd']D<<aTW`eYIE^CEj`H8DfAt1uhf\5`e\@JmXi5U?#`XfJ=]BIYEsBMS04G?l4Y2(NFi^dh%11Kf):%JJ"Cd93S^MFrU"NTP`m:":OK)c_]!/hkIC!\Ubb2[t`5R][$S@Df^rBQa).Kp0.0IK49T`tdY<bFbkL9FF9kQsiD=MS>;%FV?S#\?B8\Ooi&"7%rqDbmJo]/ktT_qQgWFa*1h(Y^n"!$f#-P-14j=pM>;OGCM9X7odmU`s]:-$<'aS<h,<upOL.>M5IB4#ESL,%GN95h,pd[kc:+TE9Sgp@&em,eYI(VX2]s][b9sqgWQP!QBhF/`CSNtiab1sY*l^*;f+0D4RrNiq:iGdB!qf=5=-'NQjn9sf,:ES@%kt+/$./VeM.$Ta_P]YM6l`tV""6.Z="@91i(`)Z@X/8sT+Qo4@UgK>hXU^(mGr8`3L@#Y$p[V%4nE=Q=pt9K_GhK6hGI">7&X3EH%L?F(Une)=AiDu[S=8;aJ24k\M^k2*4h1E7n<phMT&Io4p<[&SZkBD`&\O<fK-?V7rQAePN\qEs=`/"(jgrOHa=H+Nb[fFg7e/F,5%fcfm&9$:n13>@BTi&1Pg7NR\*RhJ7XRm`/qkiqaFRRBR(_p?[TcAr_4"K!H\6rnrm-_Lj_F!-TRm4$SS,i9NX+Gqn2T8UIBjYPg]%lFNcZ=s<P,S^\4MOLbe8.=lq&C)(cEF&$sDn6IQdm1.fMeVR^#[V_,DK'<*&>+Kt0T[GfFh6&!s+23X?EIu7]k126K"h0L7qB%(=%@elS7.V8tP,0+_g+C3MH/kf"NC)Jh5)da(]q3WArKYEF$;F8:LjIN@Y)Y57cLhI6>m#14pL(U)eblTDE`\^c(P9*th?MO]OEI>kE%s&8RWB<EBq'oCIJ`lNg/::Vc"3a/)Bjd'0o\R=OIFZFdEaV6u3,e#:`gh]j;Kh2Ha>#3^?.5ck.bZ`@Z",C&]g@g8a*9?=$kD,ad%>7-4@"oENHB7>3TqEpKBa;,B%/p^Zn$\Yg]80Yd^9oq6*;:FQ8"'R+qjkK]$];?g],CLL_)9?r7nc7G1E4][MP4<5?/"H3FrP/JK%6e^i131BcMJtm,[$a]k[g"f;,Nin#+=_Q;8!tnLY$b7>fCia-IceP`pc+#<:Ih%sr>.6t&'O$'khg'K\!C&Q0`kfkT5aFV7I;"7r%7!Gbpl\F="V8fu8Ac\Y0n]Xe9$&8)i-N)8U!F;$]&+G4H.7V>QE!#nseFiWo"k'8Qh^1<$rNQBMkJemH#kmi$J*=2E<9Tg[@'Z<$%<pK\CC-hHsmBIqLWT2#jc4#^RNaA)Vg@d2Oo$7d/`EnUkKuuG+XgJY/5FA-9$CQ#"]a]=Cc/124Kj["4bPH24Q@^u.rPSbO;t.LA%GhIUJ88HdP^cBe'^,AERp:dBN$F][\Sa-e>,3YZOMsC73IXb4\5ltTrB?g@-203\DcEmGA)tt]!SRb5GH/SA586W!u1-nGP62V+D%Z>i@6-6qLUf?sin74KtNbShT*rD@k'@fnbP]uC:N>7:_OCds2_CP+^);66Ml/.]Xm/7l?3#8TiLJl*LqDt:pUNipW&$j#^+GKZ_-%.,G.M$+Rfa7GJqI'(Qfe8BdR#:I,(H/aE'!Og$e6UZ0#Hh+Dn%V12<6iEVHE2?6,@!0fe0's=[5^fhAF+gJ0qG5dkEOrA2b[@=Gm%E$.1nQPQ-.Hr[ieG[!YCSn#/<(-0LZ,6Om+kJS/"^<Z7G'XTJreUs9G/=BH]X*&s$#p8O]J-I/ZQ<?JO*G0_>=s'SH"i%;bB!a,2%Q)/p?2VZ)"1DGQqRDF,]YZM?2\;Y;+5`Q)-M+B(:/&M1\eHZ8a7^ucpVbJ:+Fes7+P/B0reqc(a/Eg.qPY9slKLXm=@\W3\clt7H%<GV]DcUI(sM(\?r'V'eAKB6-4JMMbu3@p'>ACQ:d,`ZODO4aa-[Q??:-D:2Qhq*S`22T'g%/k&,`o67aHua[DUGtD(nF5[&Jqm.J%&o%'=Gp8<@Rjm!,:X9b<I!W5/M!pfdY@%lg7Bk5WqcFg.>22/9"5$l=3_rVc`OWA3a?Tr3NErG2X>9F+c"RM#6&$2W)]=N>P!!YX%d\]Mh?Zhd4&U&?\[Mp*ch)3c+MC'S9o/T0JDV>u3_ok4Z6!,K\I/<b/R6o>mbmCsHF!mI8R%U./j):?Y!L?UK[TaUX5#S;'9MZX\%_*j]_*q$^QL:(@L82De^9<KR7:5`eKBD/+,is`'JoLR0C-c[.:_qEGWLJNu?[//j>6e80U*"UpclEAoAVFTH2&nlUK2OACC;=@^^%**Wf[A#Tlo(jc\0kM*forB[[D5&pTir&c13cm,0ZkVoi"rO5#$<90,cBV?1/"oK`t2i\t\3VtdNbnoV>?a5*/H^mKTk=dX7d^>fo%VJN2;)M1BUJkj*E;V6hVkq6%^nY*8HHguN:WeMg>gW1`f1D6Ef'T8l`*$Xj92KP];`Lk.,*a5AW_8>k&6oclPNB1c_'Qle.C1;n*%U%G?a8i!m[ZPM!An[g\)=^%0hM7W*=O$#<AL7_OmD#T:qi/%OJV=%flHM[N7Fq2\D0!%YU6Y>'jRtebZa0g==M+,Hb.B;0h3d=[[%#0?;0Bsm^oVJQbCU)/Gl`IoAXr:V4MJZ_,'A'&0N45XpVYubU.GsCX(oN-(fA.I7W7\a's-@nO^m8)O4N0bSF=OmE3$!*T2"Dle'%&M&PM%2D=$Yj;>*q_plI3(%M6H$Fc\,K=f2QhBB(\e'`uW6V&\_M/B76rJgI1mge85tN2>Z9`&_U3[DF&C/cOD6XNB"i>R_=9oMd%"#>!F:`[G];!N3gUq?6g@*kSQSfN"@fV\s\NpDlrO,*0BHo]L?(k/^tS=9N,Q'5,H")r8naHbqKC%*#Rmllk_bV2^tYr1<a>RdXn%cGQGr8FnMI[d$B2[\/_,\rRk(W$g0FK^rStQ)&G#T^3M?MWpQ1O[t._#"fda'utCYJt_&=E#./2;6("7]Nl9<:mIC\\=pd<Vb'F<%IuHj"J&aMoQ5-T$DgqKs`ih'YSd!-A'X\S9!2B/@7cAb_ok,=u1d/gV7M+HOkNE@K_g&:;m5WRT>,7km@[$rOQJ-W0NJ:2V/\#\H%P`)rC6.]0eFABr&hC!pgQ<\.fc6<h0\IrOf:JcaF\7B>$qk:Pf$aJI%`Wt$J#<*]nCV?YaT,S?#m4#8D&jD,fNF5PKEn`3!d$9@D%VNbtJkC;#0a3+[]hir+XXGtc>ofX(.>eg*+6?m=TC]&(Y?=(&*inZesLEk%`CK],2cQnKRe^$=tRc%`\_=)(Uhm\2+W2JmKFjtQg%<@N4=0k:]6%X/2:8Y],fp;,;oA(D_S%3/_W+Do6nW$?L&jh<r%'^Ir/mO61jDVuur_)B.s<$H.rQd*DTIW.C.rFgdbkWpg*$$#J^%C`qd?0g9@VE<A'4i<!2^"20.M)S#7U3V)`nJ2s-u2)-/f"B"hV2dd@"&Uepr9^bM"JZgOiZh8Km`2e(aWgBs.Z9F5Q]Z"_OYs@"W%nN%#5j1PX$J?NA39DeJeXr-6FSP:!Kg:dTrpPmHM%sJW0:FqScjo%`!?UoZ(Q0-9-r6#]+S@g[H(mYV$8eVJ(4uZk2kIBY`+_cP.%?J+OWLI`^D&=U?9+c_4:'lNV^r&*u,\9qaPg6D?@"^Hdt!J`5H-`4gP;qBp]JX<jBF7\?6K)(60/]4u[h_W0XhTh`jW'#/*Uq:Vt%6f7kg#'KXO(m*J1i7g/?lS0*-_M#<,i06QemIb<_?LfY\_-TL@&<^G*@<l1B1UZ^qLcQlRG_C)]%YB>Y1cSQFnH`\._,r@7mg(^2%O+rNO">@b(Y%/B3!Y5j#(so-TY>G)GMa_'jO;Jegq_M1Z3J:UPO^mI6cB4Z@doZgXA+QfGd[B8a6-,Z90sLiq(P/JG_`Ysf#.Om-%==/4qoh[?]_hN_Q#$WqNJdgBD7LF-s-;!H<:Gs6..>`>1OFtY"=4uScO0Erta71;Vl[SPXs3V(#VEXL&ie`*&l0'N?V/&/k'Y>24%TF%T,PG?TVR:ZiZ-UAISg1@.sbT+,ibus2`/8O"Th+Y.uDZ!\ZX#3/'MAOep+'=UZa`a6M#u_7:J4JP!Cb\q-49[R=?7oP%Are:<%!Z!MtY=V&I9"i3b'OA52?+%31<LF>nJnbL0%_D0Q9[jA:%^#1ZhcR0N6tZp@&pt\<M!/e>j1V@uNb/UTVH7>0%3Pa?`^(\qBMXUJ%Q_0R:k?E!Fs4U3NO$H;U:O<@`(<UKqmF'0+i0#05UNp.*Qk!972I;LN7?C/"@TOFFQdi"PS%!"N+.PE[>`r?O/Wh-m\POJ?UI.!l%OR'_m@/Oo6FlR?+fTalKHo4kMDuu8W:g@XKL8nKT&@uTu;M<;(hq*5DS.A3@9<"_d@&QI<:M=R-$*@Vr+A1-0.EDgo.5/&5=NMD1%7'kNp^,$00*8"B/Z-[Ll\d*1Oj/[oK\-'<_Ysbo!*@Q\k:@^:M&dh9&VLK>-'-s#',o2+V^-H5NdMg[4'rlZQVPcXMSq49W(guT1%,sgU[K7F!PH(:SXcX;_X-SG'4f!0k\LP3bncYP#UFs6E),7]!F0gCeI,Kj=`JO@g.aA^MoQCj;h3UmJj#C#7YN[=Ld'rDLt'6/lW%32J'X3)/M36:X^20b1ekP6B#V0SV>dNI$@E$1;(k-)8I("=b_JdC0OI!%OGB8&mBp+6oQ9&S,IrZj']?Vn&TYaP@F0Q/ntHac\;s%`NYLOQPKojfp6Wr-$jDok$]MZ#_qii$R?_K=k7qa/s0N$TU0lDni=$^"lEZ*VFXAKklS`Y=g<[3"Gk*^o.hoOQ)^="3s=eYRE+X^%P1o<dgD3>pW[hFA(hsp645U6W!pgZF=$(MP>?Wt72u>;c[dWMa;tY.P"u%K0fqMqaah8G-=MlYI4-d`,qESdr9GB#If8<*01HmmM%eHF91RFbLlOF@gOSKQprH++_GK?]m:g[gmTdd*J]D>nEr@(^@.d@VmhY=1/(k"1SGs+3,I#41mH:[3;#@sBkW*Vrf-8>O]]6<o!F%HU4G:CV4M8jJ1>9'l1.TlAFdY6V5YL-OIjHcl8jsR>p\(g%Fm5$C$4Z\lU=jfEurP7aW$t12`MULkc7FOf_V,f`=&cf&&nJRlfN9%5d%G:Xe96=`UYcpkMpMg52%/_*nn-o];5o3Z@,MuU0M,=Z'Op,#S8ag9Ka%?EYuV^A%hIH7M9LkPrqY\=g?L+KJ$^QUXQK#Y)]l@%rjEQiYN!q96;,R*a7F.%L=EI'W^=3dc.7m3bs(@G%f1L<AEUdOA#g)/20Tl\gQ5![@$N\e2C2!;j75j]>bu`Kp;_ZEZ=q'VOmB'*%71A%s0Da5%(2=)LYWl2#.VT4%1IAj^_rS93K9YDX6m(KcI0hNe#GeTZIV=8F8Xma25tBY5E7:U-YWr,,eFuT`Ib]eLCB:j]Q[0J3%ir!?6;=m%*+@6m-BId5pn:ibG^rk3H9<L4k^I3n_9/m9E0ZG]%P(6\I[ZKrlK.GT])H/J[/<qd_"nRM:ZW!9ojHO!7b/c,jS-$bW%C32a),%)9HN/ES"asSI.iJ@qZq-A_H>!HGJ\m3`OMQ\5,=9<Sbn>^R"&rIE8,hE(MhN]6!'Cp"d/+Vm,@3s"VS%MIcohcS+psi8p%8m#a^ffCV5(^L]5TaS+@],@a,W+,W(lR2^h'tie=F`Q*S<Q<Y%J9WRWk65Tr=@0`(*Sg@<8Hfq5%gn*YG:/GD.8`@5E3`0YMdTNX%$9Fkti`AcQF$cO)U(A4O7"XDjUA8X'WXX/0WY.*/I"eriY<:LS-n.'%=\*GZpRR8G5@.Lml\j:.EHW,,h4A*D&IcjcJ\-u([p[^)%GP^6g(r'Hn@T_OMQ^uoJ".F\L>W//Hb9eHX"+"M;l[6&^bEEGsneH%kM0?JbG;c;7kmE1q/WM.soD6([,B97,Yo$<mF`ORXcOC/o%OhsHnnK-1q%P`D,_KjcD>k\thO<^PQM759?RLKbCrqON2.o17E,$$dMklF^b5:'j2'P@O/87c+\]iGH*"BV%'E6@[]9ReS5'27&c%2;g51\@>'M)n(ip8jDl[#G"hrjkHM28^`o^DmgfbEg=`qp@M'lXPT8]b)^8-`:-i^.>L(2Yq47edn4@I/AHi!.d8<;8:2]7H7f)A%j\1kI__c!\.N>@$&p)!)=mn81n"kqD0Z`WShStI1,Y&4f^7'].EgS7.H231`iA_<(87?3H3q_ZLm7)57cM4:[6B/heqFQd?`X)]]%II[Gn?j3PZ.AWgNIbjV&5`)Fu#Tj=PNDP2,@R]!/:c+;EJrX(Gpcur-V`C_Tg"_`,6o$7G4=Zhm[IG#f(Z&/['K@6ho_e8n#=B/s%PGobOmS2SWAG"F7HpiL5;tNC8DPRB.WYWb''I54IQntCS(qQ<$`""`P[o%JV(D<7oS@#4'gf=UH,6P8C7"Dph%:F@178X^pe&&''%qCrXM$sT3FPsLPmG;b>+a1DQ(^BjS+6D-+i:`IE4TW9bUI!i+B\;+au3]('t?aT:Z?edr-9)J7d5%b#rbO7qF?I;8sN,[9f@Ra8`%.7(H*SeLd(e-9)YS\sl5rG]V@ojZ_T%f]07oD6Bj2cmrSB,IKR1JED;MqYr]^;>nd4kHHVaRUj^Jf8QrLji.["9c'pJGV7^P`+B<%`qMN7I@I>W^R?bCDqamQ@CEOuR47Bu%6#Ku;!PJ*:aAB(7ceV'QOYJf7N=Eha)AWe4m$MaZA<R0H?_(r6DYhF)Y7a%L]L;@e:0>Z%h-Y9YZc@dqn-"G/M)DXGF$P.OiNOFJoU'mNBr(AV4Tj,JTc/ks+l*e4nafHgRIZkMT2aiFA)`L:/^ndJCAt4l]YE[=F+;*g6r"hh%MH-;O9,'N(9-\N*3`QZdIiZ)jQJkQHbHCtMm+q6(M(J3;(qAGE\1uiN`S@hJ:D$GPfr";/dH^7ngV,fpcOj%H0Rkh`oGlOiX\Z]h%(Oa8=_[:0G9b>:*5g8<Dd?>3,8.<SLUT?3WkShg[=:R#R-R^=>bd<Q'/G$Ph5O;`ZT\bk+[hY,S?OjYe+$#[,bkr7m_IH7mb4AMj%Z%rWW0#<8dP6fQ&QDX,r7$r[bOL^.NkSn]J+I%`a6`?dsWQ\K%mk^W?`3n'g8fYOda_ILO$R2i$fkYPL(K^^>;d)jSCDlBch?L`#%a\3t4mi&p>MWg$BQBs"'('8.nd`@`o_)@1PT3ZNQTIRZG970uLd-(rB-@&*/7>CHqqh0^:W]S/-D<)31GIPkao*_Fa2b>X3X5lCC%BT[CWb,p3'SXH9@DRn5IY#?o2"efacL@>5]<:jb!_(-V$@<@W30IAOmI#)TURgAAR[=@dA4-UQ>dh6F0j$&m=+5S6MD&[sI[mqh"%(KkbO)=$qm'B;@'+]7QanW]")>l/!=4SZTX/I.jh#_?mY!OaP4'/Sn\+QKG7]HPOeJLRJYDnispXPFR1;PYsd+e`I]`HFtdT8N7I%obToR)&@/;n5bP"@Hp:HDNN9fF,[1.S.ZHg;h>pf.dM%bFd\.L*-8D>r!Qqp0]=@IOU=Hu.[olj6I'$Yb8u\sp+Bm(GbKIn@ek6;%Manq;_VG'\S>aGBX@JPrn"@SmE9eXq%RHB;EObW>ZKp@3RtUc'O"fQT`-,9c00X*[ZmT-Gl`R_6!pEb9#nfpjF/?o#i0"9lH\SlA%*>B8oF5K9[SYIk[H:0_)$<U%9G\rG&#?gDK=eG?F_e9PbBHW-Aqo$ncL"[&>io+o,aM=J1J(OHoeA2YGcqK1+of*L5AFW+*,p$KM%LQ;cVIMW<_[TLra6p@cPZ_OLMQ'd>^luMU0LY(f/"V*sEaJb(l*J=[X:lQCJ!f@@UEaT"s3qC&^+@]*SZ0F6cn!L2*3I'FWU^R09%9%nhmE*2MHK&>u"!tAuuR\TU`oPAk\4HCt$0A&.peJr@h0$H=kb-.Kp'(uG#!RaCF2g^CEPBT$3p5T^_50H*hJQ3Uq4b>3Cj=Y:k%^PRfSTXea3+WYYhW7mADF6\^egXR[!.IE4Oorc!R-h2n'`g7lD#\V!roPQX)"Luh-T8tDM!-6<P/A]d6l-G"Vs$_+XO65o;SV>M,%n#e?!rH3ncoK?JDqT<.\N*hO\G+"[e^;Yc8,5CmgU'r<7OqG=q?boW20Bi12AZ;c@_>9@FD_08Yk3VLM&Hf.JA-":Xi%F6%:(Wi6%bY'Y,?Ek'VB?=Y9))Z"GTqKH1+>,oQF,#Sd.[/K6#,b-?XBGmX'uV5f]]K4kaLfi:U]/r'INYD?hBO?Bfa0[tX*7,"W,[m%O"]dY%_H.)H$q0UdFB0fRR#:gh:;9-0nu04r,?Rgl^ecs11_EW(W`IMj5MmZ*DP^#s8O?\UnWr+o&2O.e7/d0Z"SATVNaDN`MWEff_[.+Y%`+"KUmKWN_d0lXs).75bNfpS)_:XL,Ko=S<$?(VbYCEs1(A)T!nU2'EZC*>;!*r%5(Ih%3\ZSY-9LKkrR]'\t23M,t?b\q]%(pG-%]tkd0:cl+5Tm-N%Fq5D[Chpt(WaW%Q.`.ggkKXfWcHnF6K>h*5PbH=-$:S`@O:$Gjg.7bO`*4PRARH+>H!ie(ee`+kK""(fWP_OA%KOJ-H$=?(uX(bb`np8fRJbNYg7>J$]F#sZt8n-r$&o@ML.c0A*<_-GHd2HDT,et/B?Hq);chB3,RtRR]MPdC#bf`[!#B\D`.[F4M%'h's`?2.0JY?NW6$RJQ8M[b#S[+ls.;#EXFGe]TEM2:jn$7-Ihmni=7=EmY%B)Q!I5.LEo"jq8JaU)\hq"h;)k<bSB5H<*'D/EPX%h9prT[XCs?Qa2[^`Bq]nb#r9rinBJllATQ%]r\=Po+KJQqHf[_4:)B`0]^<Tgr8b$S4*Ou((2uOYJ6U>DD2?ECKHK1_DOA_AKU9a%Q\0.&_8aA7/#M2p<S<1?9+JOQ^BeV?M40pL=DS(d$SU]1^E]p,#0/oi??Ti0HV(>F=tgb^)9AF6DnqmsaT]bZ&laL`&/QZQFZbB)%U%c#EfeI1A0+D_iKO[HI%Rq;;C9l#1[Lep[p[,c>#0\Vo\pbeoJYoh$$GF3VD-$/s[e<G3<<D`F"$sUB8al*>l).%Sc#]a9Xol.B%12]qLV!?YN2^Iok]3<4Vm;eB"\rI^p[i+*L%'=gR_?T:Wfn5V#W'[$sk^m0q0h6(pnJns5BDpfBI=;,j7dgS&]5,Kbna!aV2T`Df%9$4jm1Y8l!<'i4/e01m(gU+X=B_^[)N4h2gJ,J?jSR3e,?O%Kc09O@$,uNM)8i<&['$Zqi"YUhAo^Z,Mj+lQ;r*^!1[[g5Y,"%$Z%/7.j/!>m9"@$`HW*Q]h?%j-E"oM`&Scm<Dg?"=71b'=l[+cI-U@Tsp="<Wrk(Tm>H]?]*L1e>.h(pL>An8\Vo*;FRGp`ZSs5;t5]%'hiIl&LDHNR4#M%EWP>3S51580+qg?)H49UZ61]iL"I2-DSRm2c/XT;CBTJJ@$^"\(/>$i<-I#]ZN536C`bkE?a4\c+u;09jHEru%.XT>k["*42kL2rRCPFp%"-Lt5bA]BT'f#@8iSK/IZJ3D1_,h%(Q:"A%1n!qUEtTND>2p@0CbXKmCt?#D+$Ki)dq:0/*=ES_O^]T'%ZP3'p/XAJrf,!]dEV&rKpla;:2tD.PJI7.mRWNUA0&W7WbN"B9M^Bk=)h,E&Vp*eZ\t,H4YYW72kp,O@Ro.>;LLFsC>gP%oYmPLP%Vp(II&&B%g1.,b72_.%:8aP8(EW^KaD&tnE?R&2q0Xk1G8/bsnPBH,+^qNE!Nurs,=ZV?QW9.^1iRMMrlT4#53!XYQr"+8'La2R>%Pa`6qE(m-u&`8+eE&Wh"JhJ#3gb)Gi^>8PWKP1mq:HNa_'cYp&qX>YQDK"E:he.bh3Tbf.M3EX+e0cLt7AmR8emE?'O]VrUUknm8%gL%*#e>\6PPKFmr40\nH5!TT/O+5$#$J%tC4tN^+E^\[e&p*ULigpflJa<Zm2lO8![<;i_cO(01O=BOtKd.d/a/%"/"XRbt:`rto%Zp._l6K&#,<d"h(=P=gNAk;#3FIrKO6]$3G0]sMb%IedT__4dmY!%)3FEmGbnF5pqi]ECM`sq3Zojaj``&W<lK=0$lB9$Bl'U(G=%@re:fLH<0+0ApCDL2IZ,_'I'2Ur#u.O+VG)7fEJ+]Eqk&?WI_M<D\7iA[t$alKQ-pob._/9u6^-&><q_)[oC@D:k0cB\*_^E%ghS%%t)YL-R<CN'%fM$a<5In(8[Qdcsp1h>L7M^ZuZXudd-ML(l0>ePohmd6\hU"RBge_?FW9m`C6D%\Og%;TT8,fTfl=_rPfeiTqMbR%;,Ls4mq^1Q$RC(TghJqETssR+R,qI%+_h#;"7UMsUhhkUhSsq:Z'h;ubiO*#4Za-$Jk[K'4?5t\aBBmE$_\sfi!2R13Y.1H$ogfb%H/nH"C/XUlgg_!SA+FP'"p<+'+Oml&q1:N#6eA`f*>HhjOf`Rd>bqMBqLo[LCNBNabo[mDoPJtb8mj$[k?$,h3*9ua?M5B2*aWZ&%E)I6fKYU$.p(k04#a$;?,#7.D_BC7[g"T@-8rKG,)3c!i'W^!%d[tRIA.t<9666T;]RjW:A1Nj1rF:Ye`0s(]C6;#W`5,d5$]2(*%UTE2NLb"Bj7>\:%Y!+0&eN3Y^HA.n4L`fgh6cC_A2&LYQaZRCnAn1bABif/tE0^kTJVD!%DBlI;,SEqp6-iLi:X[f.<F"#i)T\j;%02o4nr>fZgEdTBS&kP*aEH5,jqth%^kdCT&AV?)TW+sHqS]!0WFq]q.m&2<]GBEMUW%J$n<F#O8Y>@e'q_J*!Q/'sFcRkg`U6V<8%mTsEB1TC=o"6'T]pel<hFQa87c<HFqp`2[.)'tFWW1F&<B[q6f,j2ZJ)U1oLbe,Le;<'Z:&/cGk+h'4hd$BBW^>tap73AFmX9s\>%@.I:"StLdG0ke_o)L3AN^H#7*KBDiU5_CV\>%LTF>tp/^.cU2@1W:Ie6B67>A8TRHefc6qNQN73c)gM_]Xt,WU;mXtR\u@Tl5gGR%rr.'p<a5>hUF!Z;3F9""Sf9E_n@:9k_l$!6&"ak$4F>]$*=g:h\iThpC>&E@jP;7g\<GGcAoj#:*JbDh.>To?+@?P,CD(*o/GK[1%JE[&T6+cgsFZ=:s0rR$^`@]%oP7mUtE;tO:+guZ[AZ&"RZ:2(S6"B>(FT4U1IH!$=AoDHmhMNXqnBY,DckDL3\,jEQ*B0\n*KbP)%U8aUI1.?iK-\p[qc+Yo.Mrk2p@]0:Ko&O^f`l[>$3Ok).?uS*ID8g5+R:eXUhQV0!s"!^Jr#6:#MlV6Iie22*_p^f'FA@fV!tg7M%IB.o:#%0^D0[rX=S)=J<0goE'Z[/<T]arg&>e;u[I,QqXIL'\b&$[o[XqGEMYi'q+/(8>MgDhbO+%OS)8siE)iT90#]SD<&<b$#`%.n?B]fS-ZC?2fc'X'-jgd,:kN;,F&UoCW5(:>p4-JU(55OVL>U3Z)sE*7s@JA"GGd]LGQ3%SM4nlkl@%Cp=A(87o"O*,;R/]u;7=%[pqZCO'*Sb"+`j<S-IL16OrDSW$sekjf#S;&)+XLHg?4MgFVQf<Za6bVj_h%pMfIoN__8-EIZda-QS_p>D4<j#4ndOYR%E^Zi1YF%Pq)0j+[8$+DH5/<er%b_C[W$F#C#';5u4obYYdW!aD\6$dhF:SKIR%['R^)]\$tshIb`,6o&W18Wc1S%"_'5PG%?iY(+(YIDFY.9%,$SY'LQfeZ"i\lBXSC!r\:[jHDqKM-5;SW+1]dae\b*5o(J2cZ88+[TdK&JV!#o&*5@d'FbL%h9p@HHhb*&M6g',_gfkS)1lUE%!%K)tpdSlKBs'bmmGDV]e@a^k,0qEkl7AjT)Y;AZS1*%%C(Wt<Kj8R*rHlY(4Ph)h57F#krWBQSeh9e8u*d^3d&A^\E<#/h8,p6\m/%q?S#N57tYQ63BX6<mm3R"rMf,5VIUqVm"ND=9;uo^#/C4h][,<MQ:Un%OIK9fXu#eqGBAdJunOL^<Oc,lW4gaYA3+ocSjUBQgK.r%!f,mt.:h'6>]^n0mplbk)mOQOQOO'iAZsiYJ+<lo8'eAs':h]cji#"E:?e7T4,fXKi+2r:Gh/_)/<:m)bN"(fVaRE:4s;;9f=&(_%"'h>QT0C+epS]T'O6AS'oc2bj;g_>$\I3U[0-)JiJb?PSUP-M2E1ieg,^Tu\YYsKgM+QNh]_u+9D.DG8D*n)!Z/^&TFo1]V)f@km%Dn`65RPfgA8:J&?TtbI%f9?*ns#u6/40YHRW,[MOKhKt.TEd4^04ro'a?6>[+Qg/t$U'pjkrG@E68mN"i+3!7ANXKM\5"_tW[HkT%,c=LbZqhhX\%7^s"6d>lY_)7b0UBcPLP[lHCKWj*+PI=<D$<LGrilJE.Wp2EhQQl=kl9,PhK`>m<q%Z3nB!4m;efH#"@"eE3lheq%7bSS.Y%!(O^(Q)lkFDE+Kos"3El-'Y+lk8NY"HbC.&0FmlK-uJN)DH=5/A^Onigp5or'8<8DHpkSgBtjX@7k-RA;LhXTOemD)tNA%#fr9?"X7O2$@0_sQc/>&=tLf/`S)d<s4_n0>re'!9C*&]%t)Kc#+2Xlj\a/A!<N=a)NYTQVaTK;TkAmsH8O.R"oc2OXgQF0,/Qpk%M)`.i<Tc^a\`iHi[dCM??e3f?o+uAOqXT)PM*XpMD)P39!krGd\!N:.nLhS\+O(/u2TXVL]OG*Sp9/D*^QR@_M7LHE*ENaB^si/Z%6;Z3T,Q2DsUe:bE5R"&1]>/qh<"I;+.SBC;^Vt4K+gY=&=[d2ETnZi(+teIB7BRE>3gPpq)Yii-jKsk,a-lA!gmMWJS"A9^Ql$-3%1,&RLq!ZT3>?T#?TTaR,HYPnI\75=A66I&edA).1b0(uJ;#_qb*#ES\ml"]>Ck)K+7sZ\*GpFPiHhtiU3+Ck<#d:D=DI_5@+\m%k%5ceG9@EpUl5gQ:P+Mc^3m96Ui6EibJ-aud?Es=`DS46Dm4N`*g4*i)BGa=o&>1$T^2<L,0=nXQ)X'Lo%mX*fI$gPblm98YG.oGZ0%J=K%i72b4+e&"pM"^B#<9jl!'A<kC7F<pfHh,-Dj6OlQ#<ShrX_8:W_L&+iGV@2-Gg6;lK24BFQG_0c\:@romV]%%_UJLkS5;tEZ%MP=K@YAu";?0S#2b%??9WAi10N7O;.:,r+,!1>Ds.m"G``Z?Kr9dk'!N(HL%rbG;<deaHLBA+B='8)IS(_+\QP[+rBc\s/;H)_oZ%a1>sXSO,FppA^\!P&Fsc`tTH07Xc-qP#%s:b^!7/L<P.K438)S>J\BOf$%92T@4epkPbBJ0UT=NS'4IYUn>:n)<KCD8"Y/BD>Bd+%24;u+.=_U%_Pp6'K\ZJRa`\l\N55h45aX!eB!9)D+5?D2_`[t][klss?FXR;h7c$).E/7>b>LRGHSdPO"A^P(R#'HQJD9CFi;WR_%9&5!"l>LZ47-mgNEso.qS#STe,/RDfl!h&NPubug'r<)BOKMj.%^SB$Qp%g*Cd[PJ9qU)iK-fc>2a?Dh:q$A!6$<@<VTn:i%a;+^%GP#=5eWH]nNa(A@(2EPl*l21JYb)e,L+,PSUe.4(>:H?s44M2jH8jI!!`CglI;[G?N*MB\e>l*id&2Mn]Z$ar^4ARGV,EuD5Y5YD%QWibaLr@uDpcLTVHu%Dk#F`&I!O'65(9V.,%5FgAW'EKBmTKV,(#o80#`=bb1R"(VM>iX<Yc'+(4Ml,tSq@c#%LYXL`P",%V"%rJ%6L63J"(Q2sdpUKJ975GX[NPKB]pL-*+Uu'LVc[7ZT)GHN:[cl3D9qSifY2OZd9B]2V$#n3fJ_TiqrGdHPF8JOLe[GHB>3mZ18ajU%*"!'JWsB)U+RUK[V=&iSabRXmUK3^Y_?B*5R!m8YMh:.s597/o+Y?eWn:.`@^'Pb?CC1S8G_\q3X@lgKi<a$`@F1&-)(me_d2.RA%Vf;l/!TY(uj])5$LVSG]$AVFG(9gqtk48pHF!A0Oqun!8&.>tVA:pJ>2K.M08`[HLG.*a\OLasoq1TiW%2kem_:do4"l-\ts2$+5%"6k728o>r7^V-PULt_n87(]1dW>19p1jXk\&dg;sNkHUo^,t_@dN6I$9l\ktaY<>,4+O/K+AhF'Z5=@+`8#8=GgViG;&Z9a/6Y:#%Dt.<+64u:Yn>:')62-7R?3\R!Q#TW1]NV)qOgA-q`qX0t(%-`(M_p*KB[ic]SWjh#+q4nlH`m.2<0*0r!.snPMu!uMN7aNS`E+Rd%*+P'Bonc@;3HCH]:5+M?ouAO'Cg4(QK6,SlT;50'[FQ%\Z)bkfA&_0TOK"?3A"u[ll-?4"akW]OSW7%V&KLCdf5Uek:ik.X;8Ef)%m0gapBi>0pQHad(;d)so7iF0jTZV:aE\UF\OD$C9q)+5ppqAH0PKTKHiLMq^Z%+hf6VnhhEF@MjKLu<ZOReRF!W36N6K+nCX3G[r%E.9t7a^);^mbf-V.3XCsN1SP;aC1SF@s\PDH^e[?*I'.f68>2UOlfX^:F7\0J<K6k-XTBDo>&2"@b@9a8q_bZ\KG2>JCU+.KRts;%"Ue(F9a:G-:ERWZ(6o6#2Opp7p^N.uHthh0YXZX23Eide\g84;;4UsIfia?S10$Vt'RDX!>eL"MIb+Hn?`do5Yg;MJQg(d;)@^l2%jmHa%S5<,0BWJsfcnb_^'+>Vq>&9"r*[IjjSjKlMlXujD+o\,s0ba,h=tcMjI8!@A^pd[@O;X21Yl2,Gq:jLR3dJ>8oEMe+Tq\G%%/oFhEH?)0`;1XFTOdfu+X@4SAf.>SDPa8a_Zc9]')^!tMB%9V1lS\".3Btr%F*64OI3L\905mN#U8"-LH.>s<n/43-@PAki+<^5>%&L&G1?M1CY_"8!NFEP@4q>NXqJ6fcl8-Ta'3Ia2-%,AgP.n@_C$=pic75jY;P!EEA%Ff:Af[NnZ=3Z#C"NTSjCPprN_'h5F&Uj*T%C+JAma#:DFF[gLd`"h+61LGA-1EqbaSd:2o.\Tt0*EoFE?JQLON;VOZ@6ic0*/b;qH@5`S[;sjZfJ#D4Ha';!?M[+h=GTg?8D/e*%F3&N+jV]A!4l',YP)O7@mdVah<@%ctGN.ZLU2'U3&'=&s5U9jP5EO#0O/3'Wa&<(I1K6_>7@>]%M(YM;YF`DkU]WqPP8%X`D7.^n%e93[pJjE2.K.#Kr%R,fsd$U-]b<t0Z!F#(2:^B4@N8Ih0FOZH%7@)V8?O(u.>JLLB'msALd=?j5X'KrCqQNnrDjcu;^B"D-GZeoL%_]ZS]=IZVg:Q.i?(;Rjn7*@/Y<UnhAG:T'")#/I_-4qtsm&.B7:uV.nJOg1@`9%5)([RPoN`e3IG8!jikU"3o_A75'<J=j5Qo4^8%%)g,-Cu>#A)4E8`E%Rt0'@2G.fOD"I8<$s."dch=a2ks3?!+NXY_M'X+`hQa5'c]7JPam1G%d'MM70\S/BSF\7K?]9(1K,'pYB/_%+pGs`R.p[uOr=%.EC2Nsm5'b0a6F?8O>hb'qE)l$lk;TU*fkrF4rVrFO"Isc)VOj<[pQ0ghRmfi?<erI4^KYA\X"5&Jh10&OpT,q%ck<H1\=LtB,;_K2,faeei=UWaNRjWu3A=rO%fp$3RU/JST"mH/`n!$3Mu->qW.'t7B%76e\^it?7`Y1S-17IZ6F3/q<`U\7n[pbX%@X=-oiY^$9L.^LoSj;m>K=<8KR[#mG@@$:7,;JPYA1k4*%tut#)o[R[mhR$P^.j:3c:]>?!s`;"&o`aOn`4P]4I">kbt\8N\/D]?%AJ&eCQ>qljAZl"-Z@LK>VQc*Go%Y58.)4EfWeaj\mP^jITnUlD[#h^4btGCA))>+J"Fd3u,Dq@r=VWA7b'FrLP\)K3Z7<lF3M"95%-rZ;dk\O7($g)2(*6E*62bFTVhCCh'H^b/cbQAaB!s_`Re$mC1:YmG?6U?.L7Icb9',P((_Vre07:O0`2229]?El!&6/BE!j`Ctn%]>&/)+:[qh-Ht;6N%^>*rHqC2NOdT&E1OUe^IYNqkV#GMoOf4gbnYT23$mQpKL4-e'U!(=5gb+U@gX?u[0l%!5"?ML?G79B$])do%SdnqF^ITEL\I2uS:*MkPqZSQHAO-kEhfP,;lSmJm*NqiO7!,<kJ`[/"o34[L*B+JHgC1dCm_7`+nUM>!aZWmASe7!XDDp5rT8F?3%4]RAH6e$UkF96OP"3bWE\0-EW\)Wu0h^RJ1MhfO0"@HY,Ok:QW].9qfdUf1`Z"VP6'GO6KG)G'?>m6eJ84o^%%5(,:B&6PN\%J6?%k3l?f"g4!@D:GAoO$cj<,klEEis/bF(@t$O)S9-Ub[6Ha(dmCR:krR&3dbAm;?f6]/lGT"iQ"QVdh/g)Z2ID67<j9CWcL0:m_$4Q%cdZ$,ZPJ^X,V(fPZ<>R`_4GBUUUanG2-WPZ5LJV1a%0/o511![$/F@>(U.r"5guV5bsee$s.S*.%CD3_QK_BA&]N=+2=XE\l#fj\%1M^6;@ntI$S3=_OV&*uZ*;5.21lomaBj>/'+W'7`$Gu1^RI*kr1Q\ERR7RLp(Au765fFW(F'Z%j30*l:?TtkBo,"%Um8ucHpipQN%&k^"rlsT_(%=*9/2erM^`m8QDFRgqN8\\*+r&)q$jj-<iT#%Up0Q`]ZAGjWCpI]_<pO5-[>jT,5j4lU2'q91M.5#`?=J:/h\Y8&G%K4`oHMG/NS+OC<P"p%_V>GQHO$#(q$%VjX&(?i+kMKZ,+^2Iqm(_YHb0Uio2AeakkX0aKM;F8lOmhT^Z".9`H)hoiS,g4uW^,>8g%otNXj@L!X3MmL"1aSqG];Y)tlg*(?5;9bYMY#ntIWPg]*IdH>)DsMqT=[,8h^M$H$:l@(cq)=8u=hO[9B3klmb,#!Pkta8C&WY<U%m'L4-llp#lo'R*u]mF6pi!1/B&Sd.netqmUG$;/R8>FZ1mLcn@q`Pj)[lDFATln?oSmb<n5+TH8KRG:MnVnKK/4Y3HG!W$IBWeB.%bp1G\5+Ckt>99&?G1Q;q-(_5@.FFcso,+fX?QHQG"dYHEK9C,\0F(i.UUc,R;c7k.k.cbD((<+=b0[Noh$$/T(=1'Y"_L,+Q%qPf%obGU&>0#=*@B@N".HDM-E_Ph,T.RZms)4Nj+8Z6]naZE8DOSjRO>=!T'P_B*`D-e!7)PhHe+2pY+hWCXaqNNlq6fPGI+9,2PI1*L%hDq$iYRRp)Z^`K\ZsU&dM?R-1:[>V_f_4aBg_9(q^e<ul4)=c4c5Q06G-Egq!8HE0*f[@-;!m-73hp.#XN;)rf$GYCIPISjN>nLT%1jdeu_p00-[["88H\?8)IZMKQjb^=`)g9eW1Js`$oEa4.r<>b@VWkT(1)Mp3/I!!8TQ;n5EX_n8=iJ0$Fo$mkld&P_F]4meIl^L1%4Dge*?dI4Bg[C1"]/s&`b5(C+JTKS6f<AW_(Bdc8f+IVgA$AKq_:c%rFiW:P5$N3drWhnU8;JZ0IUo`tMI`,acsPNebYo)5j$nX)%A#():$aq:FXknQg2.tg-B\aKN3V]P-MYso.+:k#a`Q^`H@qm.1j5lheoqjChkmWG(X&/coiW3RCI^?_&q^l>3,7%gopOl:S&8etU%ZPO,pHgs2)4"+loD7;g/1Pi#LVm@0M+FEW?ZoaC/GAVLY-J]EA[BmSj!9q2cd-.48]kaYX3h8P;Cj)__(CqX8na4W-#JHC8nI8hd%^HBqd(k>&-,+K64,`WRAD#p76R"%h*?4@!l*^<E-=r#sh]!`?*nX6Z?3s^h(V=^A*5cYj<rrhY3+gts#ap(!\NS_H`K"Vr7^<E=`%[B)Tt5h6WsDh;2gT?k=+\a:bf&R<NJkorOT:rKT3*s`bRh."CI#D,-p?Rb9Jq2;H\h^NHUHm%p"pm!$fO/+1J78c5\:crWr><QNH%AtcKU,Jp/!B]t';@35kL)&^oj\5=CV`^f)jG)Q0n&&:^8X,%12P!.leGJM5n(d3_6bV[3JLKN7FGgVuKOk,J?oUpXm7<Aq]`;6OI%clbi2V]9.`ULn)?8J(,b*$]0eBod@tq_W1*?M$eNKI.B\/bD"c`b\1s@:-T9)l<+=/i^4M/\e"-;0L&#E?W5)a+[pB9B"09Z>ki:%G'l4f%1f!eGV0/4K^,<=j43IUriB8I4sD+!=c?ZUQIcN-8'>IA<>91;qh$/u@@kZYgYXZ`H"#h0cXZ5Z*)j&;k^XkB*SK=BBN`_J%5(JC2Tg56n<)7+@C"2;/^l+6N3pr0>cku<6n1B;0N!7o3JrO)jJ-Zt+JDLgi0Q.;$j^W5`J[$%"ksRID%#5po(VXDkS3Ufdb5Pu=%7ip`O>6?eEBkcf9Nc/Li@&C0BS+Fi;SNj>%>:[_VG&Xn`q$`dAg4!K!pU/4OPDf:IJ&1<ZKjuIW&AA^7X\Z'iAgi^uDp9%>Q#Jbi%Uk)@N:Mc;H8njL]'a`h?nQ`V,Tjk="rC6VX@(?;@f:^nfN%#BB"P46cV9U/"NTP./Z@RE'0(Wj[h7/@Xi:/\O:kE(Ql?ZL#^oSNu%KP`0>&NMl[(J%BKN.;"#4*HU"kuj=4Gjru(DptBY#RTH)DsJ9,Ui+f6$*C9+;bDj17q>*Y%*7ooN%dPW^r$m"P%6gWiYA\P3Rt[^%qeG6><2l5@,!=Nu`<?@0`feM:WYOm3;:G"1S,^l,#LKZ?S.V#@pI4Cdf#LAi60@IZ6_nN^*PM9WGLSYDhi2uU(DN=43oX+Ko]7*0%9?c;MYgY[u^!'1UAWgU>V9q=;_A<XVi3T!lj\9d'2H/_!^\msjnbJFR)fL>X.J:$N+l1$.FH.M+G@h3ulji5GSFN-%qgR]q@292A%jo'<TDb\LT;S_!![.a!>rUT.!8Gr&Ad9$hLH8L*Ho4U5jHII\/k75LBTEh5IRX-Y?m(h4C7ZVt7Cq^P2p@V7ko_HkYRo<L.?5b5i%a&$=-hK9U\*E_is<),o0JK+im5DTe=m@&b_p]YngLFCft;eKRcBL_GQgF(R7_kB$Vir`^paPMTJKBBqWSC:R%r+fj=b3=<s;53g+%FStc^<8!qVjEf=@e)N5B+.*FBCGR-u0tgHE>2Koos0?*:aiMdY#*R7/*a(e"1%>6/1PY6:T,-AL*NDCpP,V7D)>ej*I`4jCbC'N.%#@aSeKLLa;[s#u!q@%1VMo>l'OY,4tGYu[[KMO9<A.JB"BX\iM*<*ri:Q^9Hl!@:OQ#"4K:"&]2&Nr&Nd"VbZ1d6!On)bUk#GuXN%3)]u'X[:236JJmLO?h%PQ^OL#1t*)X)$2_e`X)l*3i6N]bt+,*o'!>-X+X@X9!L\i=)of9(>i&!_Dn\;@H`095Nh$^=Ua7;G+C&.%U$<fAiX(SY!=iIhcA."*NE:tt<C-MnEt>-Ns2.FoB.B<i[rMoa-)R[P0q(C;a'cYN9i7-ZBIPLR8*ij.A?=NQTLS7%0KWsLorKG6%ZkY2:WOq!pg2K;rhl;YfZQ7)Q/GTER*Z2[?1odTkahU%&kf?TNjt+?6Yko:n#K@8WOH8:WZ_76OniD\b>!&-.1hPA75LQhp?*W&-%VP63#EgY2Tjo7edc&)>P3-Klb]&L6eNlH?QjD@E_+K9Go1$78h"0oU`Kp935JoA/Q^_GLdS^8e;5tu,CTlrOG'^`'RB\CL?5k7f,%9f]?80"X%pW[^HU">j/?.Adc;b8Vnu&c7cZJrtud&.ma%\U[nW;_:*#k"em]eD?CXTj$Ac_Q<e0%YS2`Bjg`TLWj`"5&m`bDcmYY%<)8h="]t!Z5>Y<?;q8/g4!4(O@le^?$+[P*TqF/+fkK@>F=jNU0A%Sj[!oX1pGYtY&&t2eiR^SL4EepC,?=c8))0pZAIaZ"*6a"c%*m=_0m-?H9gq.Hm$O=Oq2GNi&q=(9(/5HqO`nnd>^ar'qL+q1naY*,rs5BTY!!?JK@k\QZX.$`CnrWa#4g3L7pDjol6,[dQjVmH:%<A6r>AEJ@)Pi27&_%n4TZQ/4P1EK5X^/#[-?qDQ`>GM;j=PqE#Z"%"iOXijpA]:rUeHU.12D9'47Yf"5qO'1CRrP&W5$p&Lm;UI3%gbk0N^:B4,_m%UA_.r@NV;'lj_Y/0qdSBfPXTNb`Iec;NP/Zq]g=tu]g;DIDbdfL3#j/=6TRV69a.5,U3Lc@ikMm6Rl?hFYN'1.`%n'Ja/aIF([YT9dCjstNP4B+Ciq+Tr.:K?lAM:#nf%TVso;6?C[Wnr^o<5*4@W^pU,ntkq[`D`V1\=Tbr>0\bga!uNnoU=(NeW-:u%&JAn)iuP:'Zo@?,lBo`S]%<5m'amIrCHka[I\_5IH(q&4S>bB?'D4t4s3\6TK5!$TRjJ3RS8Oc&GjsS3J9Pq#%\qPZ'*>?Z9F9G:%DO;-u\XTJ8JK0/77I.*IX(u^i?m/X;p3lso"N/4XH+ZbQ558VH;#db"!uLeZU:iC_0;*;GZ#:S)>-Y%&3iDZ,,A_`$eK"2lG,0sV%n>mjhSTSJE?A0+ImiGol]0AP6c6Oqlg2%`;/hc[t5IhgOm'L.SbZ*_3n*_<+qn)UO!KER"%-M<7X0LDUH&e;6f&)Hh@>hSNWZYhQ%Ai;^r$]_m$(cWGS;?_uS<6",99Cp1cOO6(Tf;Ef1^@cJoWbFPJS9hKP$-Z=T^2D"*Uh&QKgJ`I"k*N7)rj_4k@=^a$m`!rsXJk[[%%L8UV<c(5M+&&mr3ffjq#b=J0EiE[:)],-o5mX0Q9p,oZ6_I:r9!gi=fO@/5lcXWhQCV0mNr-u7i9*qPlU7o1rY#R%o7bT";[>%D%<O%gnLoP]!r!hfj7D_hPX'eaIKh'JUi".;]4+p>ElsHC+hM,=/aGLWh^V1q6BWg(gTKq,Hk0E?F)J^9RQ^OKQSuF"0)lS`GG2Le^%Tm+F&X,8K@>0gg"[e-'Tn,8VZ)O1!'Fm\#-)h6Acgkp'tHJU68$_6tjqK"m$=1RWTn)_#hY@8`3fu-Vn#2bQHL=s1/f`(;+`g+U@%euc`Q[I7\GMUd)A`NtCLI;e.NT*X'.phE$Cb*@h-029B6O72HQ-k2IQAQ8tBIa/M=2B0%g[<KVSFO@^I90bZfA?`q?F"gP0$c#B[%\Cl[7%fSgp_SQolF,:Go.7C98GlH2Pf.XkF,<>"j*Dm10qAo$G3<(i[HuErPI&^J$W1En<%hL?a&p6"$dQKrG'G(N#\-`lgC[C:Z%]Enb0oD29nH+2ls$c)bE!%"q"K/,Oc+d;7qF66DJPNR_H\okc(C&Z9a:^\^PL"hVd0V9BbDT8j@Bk:s^!%ndpfc]V-Bp^?,LlFk7%bJ[/?7SdW>E%%]J@&m8k4f8X#+5\gD<bhM6T(%\k`%f^#>#5KAr7`=gbuT6q0P2(ZoBLjLETekS8PXL/mJ@!l,4B26o0Xh6CB'iY%40D-W2nm'C4bH%P%lqj)&_*D'536Qg\8tY$0*sn!qWq=$ZR@rP)!3tp>Id"G-/iVm37ft(Pr%_FP/ZrYTi7F,Th+haq;EglPK85X%#3f86N?#H]UXAKFYbuIZ(/T.)-jf?b36$NV#_nskYG[MnKM(s_%j5b$?p9Ggp5"i^fd@p"hH(G4_,UjAGlZO(BVon^`=Gg-8HrlZ%er@VAb$f;0q7/A',#@:>/ZGmK_,R8rE8u.@C%&6Zq%u3P/&r9%`RgjkoY0hu6fEG<3o7Mb9_$tFUH2_oF'M_%jdqUJR1D%HZ_dLo%([d0MNNAf8"skQA(f<"bAEPKt^L=#DA"[!AUI7%Qdj(rEah(NiEl#k;KWX\Yj4cZ9!]?[.TnXs/q`aKdiL"8aNoE;jT&^Q#WbRi.%is*7V&_87]h&*t+5Zkbm"#n[sif'buh[`:9/6'`tWD".\SN,e'YE-F/iDq-OdI500@G=RhPpk:Q;2AqM$\E@jXXfPL"SCFm^!W%K%TZW\`%l"8#ZqG65_"`UcZk1on#-JMr[X=r[@H!LgO^sd-p^!a3n>Ik8"A%ZAY%#R_GHbV-,DC=JOs\j2<BI[4dNb40NdCg8L5r](%XCK\+F2#I)0J:l1#+]%p0VZ6L4p=%@53N8f93e`Vr3f;TA\),@B3[\!qgVrOAVs>rL@s(cZj;<D-8RA!&[l?qR=A5Q'3o9F.b4]%%^I:@S=3jn%*%m)@f,02HKT"bIErN*lA2:4"HI-pX!9UO^!-'p1=F-$UqTWf/C6!?T<B1=eZ)=\D#n"u^_J/VrJQs<P:@`#_JA-gU%@W]D'(m[X0ehYYk'4F]FIK>1bhme?1$Ht@glq^lWXVR+S/R]6Z2WNmgV;TcIAIFgALIBmX\Pp$<O#^R6[dRGA7"/@KRUq_-bSK(r%VDTBh<`<d&lS\Mi!Ai(sbM;B?K<2q84r"o^]F3t%Pb=uNVuQWM8+o13]`.)<.[tCf2[d=SSQBo?$p$*rGN]dtpLBn`]C^uPJ)P^O%(4+;5NAp=[XmtE$IP('>41;_Ha.BueF.Zk+LjTE_G4#b1p:XZ`hQqPr6b1pc"l?S<gZMnXLTcp>CapIliuiK[d^U]en]RR(@^YPA%]P;atDXhK/X#G=;G/lMEdNk.u]a`g=>J1bN\RVs1P0t-LHZTT#^#pB^#'"VqB^NS6/C;H*3"=Fjm;,B7S-\<ANG!iL]'!&flo=pl%Wqe;j@;^(orq!`,C8Jc`c9f>gKgd3G`%hBJ3,8Pl0I2o$M)PQuo_OAo0g%:q@i8+uCoF9j$FZ`2_K.ot>^jM3<KG=Zpk$s#/.,]$%2u&p'3^^i=_pp@5+T@H5%.kr5U([,_oV*8KBNN!Lr.+X_UN,bM"@cB$!<0ngh@),oSX^es/S6VbBGo::o><c.c39L`30r6+`!Fj>%*YH**,'G'LBo59tH#aAD_E<eEYIK74?4mZ4S3]R?_;C$4+`L$C<]V:@Xm;S4<9s]R6#?LTbTa?&<]XKJZ%*2$#h.YHbJnlf*gVgL%0`EVl#DW0H<4!=9=ru1\kK!fl5Fo)WoQq%Mf+0H:ok4jd*gT$j+n[fUl:J]IILjO.2:VGK\1rJ@YauC']n-NX%m?u=bC[M3>?N1[%__BL>)]h28;$-OqW&=_0"7YtY5GIm<nS\1pFkceJJ62BA=[`rFE(s-s&#T!dr!A.pT#Cj`%>2$9P0^d[BN79B"&EPP/,#\^6!jH9%k&-X6k]_nIWuK>1%0P%i1#oLVaE.DQ`Ep5JE>kb]c6sh?Pc,h[KON".<`mE+i"pY!F,<c;6IX!o8$R9J;kLGp)5-@e1Fm:@=?hYB%NZW2dX3"B/E6r)<f't@o6^-9a_cR\VTpgs.H3rdL;2G[eN74E;.G]<EiE'et>TAW_93*5SEP'J,FW@6j0\r0,rE,,V'l"Kf_:Md_%W)`Zhq<8/dl-+I"in-7&6=;F0OU993V4o^%4VUm=$kL.R(ogUlaWsj-`!0%n!liNAk-7sCZu]muPD/Zu&$idE4FL0@_CgV0X/&3*%qq9VtM.BWl.Urcr<Ii%22JCZqVgGhZK6Z+TlGnDl6B`(EYs[L8K>D)l.<r$23(s_f,r)p(nFb#"Ko"o#Ti[S?ja=Fd*L2R>8RmkY%N2V5$apL*$kRE"RIBLf5`2;/XguW3kK4IraaZ1m1KpZ@O2*#u5dL$k=la'Z0q@=#T.:*X`Kpt.7QU%n[)-_6m+U(4D?UL>be#K>M%R;cYVd!/'Se#q<YFHCHBiLIbI)qm\d^5diBE%6gC?4]jAhKi8WS-gZVJpGTHEulfu)]eXs(q;nQmC#@VD&n?D!`frob_e3A*6Toq%kg1`b5RCq'(2,"8MelD:QX4<b+O:$=En.b<P2LV=]n"(h1krAt@`oVCTZ3'm&DUC/Lr)a;A(LqGM^h/T-?\IIEMJu?0fM:7>0Z_H%p_c9He^s<d5^Kdie&jf8.Ta[63C[<k+MQl;99>U%/s(a+6R4RE>+@aPj)tCMK(/O,SmbB99ZrbR`,tf<6StL<<SLGVbI9-1p?sNO%r<m)pH^)+c=r2uW!4uB7+UT]$4q\jh84ldXL.7YSFq-A^&lQr<&&p,YM*/raOdm_D4dRsI3"LU&;W<#QYia/.c*NAQD,_4IP1]T*%aK;=+L0:!.F=f28[*%XsOk6^:7nZbCKQ#k(bG'_F`R,.f5d/V9&)OJQGp)5RLSr>(bi2_^j2?JJdC%3<r<;'8$811#h8E;H(H%);%5r7Tm+5;$Xo:!bm#.+FoES<7h(g!<()%%-80p*XdWT>n]9X6WZ]JinQJeoYS[QIMHnb,8n6lO8$7E1l'p(XaDB"ZaZ?d.:,>p14&%\ue=6XO3hd`p&N,/[@OueAWXF6I53ki\b[k5^V_-L#P6Ge:a_\W[_Eo<Kdns)<3e8"316o1"2/X2k+Lu#h$_^3N&khA$'aa8^2s!%)c6KpRKIY;DIqju#uZEORq#29?IW$;gtqOPdl(#17iU`YLmYC.qSV#.8khbO@O_^#_d:Wh83ihK/[jaGgB]$u1T2ZmRgMpEPYM82%eVu3WnG$[2p+5gd1</4l\\sY#\Q@=dd8DE\$pCSU-l:C[c*ct1(e7<2H5eR4X)r0='/ad>.P(Dt@B"-0e?q:n["i(I<1E?d_)\[0%MOR2HKa=k[(B$SNi+J.jBWX(l9hIN#+FlN%dP,NCYZFcdncu'u9%ABtl"orP[P:]TObP@%b>ZT*CVkXm>doFF5[?pBJ')9['T[e_%OtZ<T@WA?W33T+;YV_WTV#'@Ce4Q'.L1'kO`XjTs&1h`,.0W+d"#KS%?;jLjWtsJpX7?BW0T3SbiDhQp5S;S,',siXquc/Z*j)MB%AH@CgSA0&N#u!b-]bKY]M-0=?cd<#LYGZ,-P%Gp/c58At#=Z8!-\4#7#5/BHN^:"]/#Q@"YXTqM*)a!n1Dj#1EOI*3\TXj-o/.!U%&14a"nJ[S70l8s&-rE(S&9K*O7]LN#\\L%JV0(IfAGP4E(J_dn@tMr0NbO]leo!*f&]#s!gMB5l"<_#b3@B(si\]ciRWGrRI),%X%)^+>=\/0KdH]C:.<Ils1cfS[ilgmVXScq#/<%LRr-Q:JrB$q6p*PPX:ZL)ZaS&,mPG9`l?+Y5\0[(eKcT3.LqmO=i+Zh.@_=aQ4l%!4EdE#nS]5glBC-me1Bc^'V8#&*!mR4P&u?k#Q6+)\EH:?k3[WBO#D42t2!??Lboi<]+rgAY,%`4@[GEgPe0/#j:IXd]Z&76if:.%+Umu;<VCE2[Af,/C\ZZS:p68>FWMRu:e5maWRM]%)\a0OU>JJFQ9OAP<ufhJA3]5DqT+n-[Kth,5\p\8m+_83qIE&b)+L4q;Ymt=%GVJ6K%4X&n*)MZlE-CNNQj"Ha:Gftg/JcT*gn^IbM(oc7CFN;R'>;NmfSWg*nS1T)>"8FT,r>3%i!RDg_/b9XMO"m2[bHM)a"36u%m`H]A6:ut>Cj/gA`@4=5?\:&YhU+#nM`;ldc"k@,X^LA^VVNR&$A*f6g&bcI4eC*7J1=1rjp[PFl:G6KSJT2&U*cD5=Oi?Nb=LlW%fW_%c#6a&I]W%LZ.s-0OMXX$S?U]D]$l&K*MN@pt#tGl7HR'<B[Ub\\behAa*3=1e_5?^JYe=L1W(H9d<2q!5]9QNkSL@BoVfICI%o%n19kCqDQeZgo<b]sZiO@V_V:?q"FEpGb-1[jOKXOqf8X`XD9BCfMbj@j%)B8E'$pU&t,W@(u.=u%i*VXNL1$B9q;_E+rM[9DE/%bkhV[5\uR'6fO"k<7)CFT*k<eE%s2KSiY@UKpfN1p#\=pn?F+U-u$jV,%;_:b00!$Mg]Y]-Cgp#M<r')2YWY(%oGk?+R:,de'ZGM%4EHL41,tXMZ=WE[X_`#DC_fga,+F=92>\l"WmNd;OJjS<@q\4>p+!-]36c6-/qLm'Bg?]+@^LDCgXW?=r_m3&^7$i^KB'G2r1,ms%Ucd3lc_.O\1,K#<fsm]';>5&$Z<KXqR&SYb2sU[jLX/,2)MpU.N'gCMe7raM>phSp_eD?r/?E)5hFb!#c+t]^*@&]:NQb&_;^d5t%k;b]tQLQF+epNlX3's$qKa>OtXY!\[a'Eq[S\Z9kE214En!pLFLB?dl(p>H'kU"RYb;SlR%Wdr\d$$%"(uWLaFpjJ(.,lRUlI:`2%^$aU)9%W0b%3@GWm32s*e]J+?)>BRDOcP\`96IC<)jF7kNa(ntDlPVn&G745^5gJDMDpde`'nhP_5bshq(<XccZ(UI*9!fi=pt9h%Qu+qj%TT.d#T=;#Uc9kaO)In'YmH7kVmc?)kA0'Pjf)l2+G*n:0pTimY>m9RX0''7](S7$k#uG#,#i!g>Z8Yu"L-X<7s.2cZn*+N%QS#BE=LL-5!JY,h5gUmlm<Ku$`$QTW3fh)+bWD)&6YLM*0<@eM`3Mgd*O[#X)WlU>\4)g[(gms%e!Me(2n$"HLH;h5<I`&Da!F",%0i/<$d'uej@UAMhO6M@#&DG@@P@%_a^'+ZR[*#Y!^eZ\X:qT*%TRD&W2CYiVeL/'kB;QJL1fmC1KMgYm7,5b:liI:LH#L,Hl&c'Y%>Fn@'J(.quDGW;A9=@o3d56Wd]Be"1Z99!b-Mhj\Dc.5j8?[^^RHu+>`cW,F?K]_eOOfa6nAI];<"J8,hCtB<lp;<Gatb+D=?N">%^\[#1T.b4nb1&X?pW$-@DO<G&TIQ#_9AA#&e>hI*qIP2.Kb6MAeq8UUZ=K?nWMYWnP<Ji38<T\hP_WCNB#D.VO+V2Y.WL7Zph.`+%[ZlS-!_c\%8WLJ8nfBaX[dq<+?CNa@B^cETZOsX'!)g<.`bXEli=B#\:dO@RF_k_mY\'2pGl!:;QtBC@+a+\`!tcc')l*<]fj8D0%rHa#jMW$h)b;_I/lVtH7l'CS,ZtLMBZ"<GT>i;X*o'\9?X^GAl4W*$8ft"/iR_%\j,'6H3r-GlA_S^mS'8(LJN?<K_h&j-GfGS;,%._Ld<&b]\M/)A;a`IeY3n*m'"Q7!N%MU7pJqXc$0*1%`;p)L^>e7JiO/dp]8bB(2$@"jQ#:EN.b-Tae;gjM5ER,m>R/_kKI7)pp&%qU<j!q[>((%>"M&:&JAt4Il7un"'B$pYP-Fk-I,c!.OXU,llZ+],&5-n\/T(bFeM]"T7>O9*)6Q]bhle]9`UhosP$D3#sAdaUK+#%/Uk[%TBFH_GqiO9&BgXpIWDc,*^I>%1Sh9F:-';.5G5Fro=QclBSg>2I?W9i6jl9>dck^nUJf(n+skD4TU:nA\M!+$.(aUAScSWa%.8W'B&7@tqVaPU471Nai9?+KpTl>tb0d@N:#B*Ee<J\!k+QG#-!O$i3DD<jiM.lZ(RgKQ,!;O.nk2W(I.n:P9m)HO8nUA^tj,6UA%H#utJ%)p)r^aVs5<>j;#-a-96PmAfI\5FNl!+lpJ=sN6DOhF\`BlYUKjd_@a5$`T!=[J^47#gej8kb3rkBb?jE)1t,p4U@eN%Ckn%N]2Pe1EP9ag5<s'=e[--2j!HlC#u?u.STA"qqLC0B-],IKlSp*:b:BM4n^M74Y_*o1F4GqPkWEGX%&dc4MY(T0UH;"V8u@Nqf#T!%%#m])qG@et<iUafkc^X\XV@fNe4<H\a\oEf3+*=6#h0)41aIK_B%[fmW+L>kP9-cj#)+.<LaT@^Ad]Q/q,rkoS?rkW!".1?V?i7-%KTC[$5W4-Dmg__tmCk]OiK=s"Mm?IK_RLOd:(;NL.IE-QKMgD]0F!;*P7$l=NR>YO!/P)@`X%b\<sYo^OfiA0<Er=\f5]kV:H7uu%!Mcadk/`:r9o&O_SC!s#_uVm]Ca4&c/5^OM#"LoA?KF_AmuPHL>aEOCD06GWR=L,M;bha_.[:2d-JJ>@*+"NXK#'j85ZlaukUa6X%f4HpL:&pfe%IP8Y.'-C%=)kfO)qtc'WLiG<?Ptd:lumO.eK%!73YSCKDV':OJVoH:$M[oajS$W3_m:r>6P)K0&KsUcS#dF!p<k^t%Lo:VlNFNkZG-bnWKVJj/lk"[aAge==PpmCpN.g#5D!jl$7Qq13k(T.i>UnaC3*2)7!FHQh1'i^rL>=\YMt+Qq2Y._/CgajJ(aJfT%5sG049VG8gTot".E:><T.`+l2/YFhtJ@,#2HP"7*h$d<\RM;j=#Xtud,?tn<fYq98XNK%h)WiX.2H.7W3tr5T:'F,8W[J+DR87Xq%/D\Rf.j/*gCLSq`<8LXD5$s]G")ce7W&AR"$0b(C:^bC3$*S]<imEA^YFm()dhs`9Bm0o+!2>!V.!22/L8g^*T^F?QJY)h9_k*`S%4p.Y_L,]G"*TQdH1.!?Fr+8n@E/Ki(T!'"Rq1m'_s.kASo3Jgf`!So6C@JC'WUl^(mUqXV:f;=W(668QWu$A-qH.4#%U8*6j#.pd%MVqf:F^68,Br:pZTdV5HB>Kh$B(-DVl$Omio-@Oj!5ROV.!"!=#S7`MX42Y2>_n-&g5C`D*S$?VJC.'tW@$!D6_/34Th699kihaS%s%uMQg)6'r9,j0Y#6kZ9&c*eS&9=S)/q-u2BS?AXEiD@UQORKJ9]Mh9M@MJ].m)ubnd%oWH]*c-/rqk_rRnom,P*:jSPLrUjcJ=P%+%oTgVYb:,6oorXD0p*`eGRsA5OYW4kK'YF3cFR$en9a`LetC?rPon)Y?2PTVjm?_`utM&![R3_%/1_s$C1`g-;<;4n?deOQ?Un_%>@([Q0[7<F7,!0S.-UZR9Y0,Tpo>i=$eBDO33==K>AWNH0?aVAFQBpW:O]*]pl&aPDnPgh0RV8Y%jdm,%3mA9@E2+NL@UB_18fJK%Gm+dt-Y'E4$T((mn@Q0o$f[!AWLEe)g*5E^+O;N"hGI=&FGn+q'N\.K&'NFe2o3rM7Q>;M[p*0'"S^Md]=L2YK<"H$mt$%&4huAt%9CKNuLZ%n&GNf-ke!0=91tKIk"k^/E,gK^\"RYmNdXsMpLp)etZ]t2EaBSQ+iq5\.99m<M\d,0Ydk<a)lu[e9n,,UQ56L3<\#Nh]%ju/*Qh,U:m1?4>-K@A.$qO6JCTZg!ti"*"7IqO@J8p24emQ>_0&2hhYaic_>9Sq$Ngp/Ok&>+R>VF3jbR?>1YYQ^R+73a"I#Ska0%.O$(TdI1@=S:M^5M[P[]5Rce,3U,c_rH-Q'gM/$><lkdk+^%>J:PHG<IVd]=1c]IG#Tm?QjAM(P!\J];kUK7Onh_O65k,5,3WifH%'!oLHqB<A^I_,f-0B%rR7aToj1QfWs(>/i</Z5gL?DHIUKjk^\-\751k&F(`iD!I\.P"d90>8;u.Ll/D4B<jBUGba,W4&+,<(/8*%4>?P>)8_#r'Nd""@:2Y=p8aR%aAQec0e>/fEfL:!8MNj#W*buO]>Np4k<SM'433k.lb/EM>kB-%9bP6o2p(!VO3c&?50W+PgG*#5%a7%<AQ\,#QQC3NPGD>m/da-!:<Kc(#IbGu,QC4(InnW*-4fJip3hL[OfIQ0+R<kY7k_n4fduiYcbY(m%]@8&^TlN?gY538uo+$'V%o\R<?$gj8:M[/7As7jA]'#8QIal'+YD`RFWX%7TBn`=K31I8a:6qQLD-MGY\=,?jo$CMZuP,X\kS>Nmu[^2u,pc-M8L.MD,,^BuZ%ArgrGGYT`,DIPY'&Xs*SahnO*$>\2l_>VT0jX5<43Gib%@k\eL:Pe[pC!8lah+'YAg]_$;^XuXVG;EJ$M&WZ.g$BNm.q;`YIO2D"%X)7N5Y2V%DPcSKG4gGg7h$qf?#B,^-p<"ll"27LLHLgB"ei&#=SDS)WgfrtD,`-Q$dZ-sUirYPkPFc1U"kaC<#^nTUEBsc;1&p0m%TLskEPXmM2U>XMrXZtYoR%MTHqbJ7up?&F3>/-pXckoHg*Z$@#I+kFj_R&8\i=qR^_F2_c$83%WQPE0.3oc='nkd,<"NONLd"Di/%8X_Grq=`=b"Ti0ck(e,qIdQCUNmZnp8u_2FW6&)]DDZi\+sJ[?U\:Tt]D!sap?m&(lM!gGTtkKt=Bj_5On'B"mL+8C5t=[W?AA4+%&&J5;=3ZfHY6pp=-$96p+qQ4'EX'B4!BVtTTm_Z#2Xg5mKH'R%F^]Rlqf>M#@EZ\L`-tX+c*7&FaITam6$j```;YZ.H@!'-Ck$>@%s8:ML2d\@Z[[Yt9%J8%P3#"0^O>$4B^+'MYR147>Kl2QOas[dZrPV#p]"]'#ZX^20dFFn-XkJ4UCC\Z,`R+icQ,jEhFW&3N<'^N2%f^nK3V8S"T.2Rt3:m_O'QQu5%LhIN=#8O467m4K_Z?s'?"<QH0&[Dgt&1qI8hP(jS9oaj*7=^fm)\_Z9`AfXjQ<ZjPP)QYsZPC"l%crlX@Bq`M&R]XoC'#:^m`LE!6Jd3s0/0N>@+MP^$k3"<Ug5)?mPI5W#_V!;DVZh'"+[6B4GN`\#bb7G?ptUlAQ9`JLdUpK/ad!QQ%?m,WV\86P^JacO>aG?42B)rteq#gDZ11-FY'1nU9.GQS&_iTA>hPumj,<i?.F$hK5E+b2NS(UNP<0X?clbiZ>)Gg5c_lG#BHUMYh%4[K>*\kU\uQH'MeQbn^eC81..8H)!),,V)jl``F<)9]34"Uo"@Cn"^2i4ZF`TGVWebKPBBooDm=?$kBG]DoBne.BXJ&=b(W.a73t%Rsna31lQ"ni_4>Sdgn)(M;D?FSchFgEM$paroK(@g+k^o#O"bgh5h=T&OBBF<Rs8j!=ib`UD[!"mAd+[/#!iB;"K5i87JP!c]0qN%bDIPG!%]D5NE%5cLh0FS*6dbSEXfijM!hj=_5C?bDgC\BR3sWZf5>?(S\c>ZI['hHF1EcE)J52aKB]Lq;P6$+6kj.k'N2(L2#PA:%D,tpXmNZ/0he>_>@9Hf^c6@PLr.um'r7RLFMW-?OaCf0^R4=r#HR!b4=DWk$[.n5PGq.mFiqi?P1D*NQib;WPF[uB2c,ub;jU]Lr%FVG?=/f'<[PZ7qJ(;.5e\M^[q+][2uNY;MYTB'N]5T!&.E"W/VZrn`=@qg7i-_t.cY':l2>]-N$#o>1#<7mb'l\O)d("h2J1-.tB%+tG-Z)/5$?O23TWODaBB`^kLIPc>BC&(ZQR64l^m&\/a2BONnn4eNhCM'>2(:6B1]b_s,'6<i@caaJ/@,qH(Y>.gIl!BdrarS,rB%I'<bP1mqm-WFUou@(Pe7$(WX?G(QV,9I*X)(<(*nY@+in-l[u(##WU'SHa(6rX=Ykb<l^%#0*OHqfE$Sj365,@^bd!-ZVq2k%$*3%n@k0W#%k,o*!pGs7j:$IGPRbWj;bm<E/9$/&D]AE9&YUeoPrhAdI[<&"34u_oF*0:ha.cnmOCoZYg\K+Wmp4\qXOu&[;ukJhu_R:%YCH7G0b?QFUV@WHnZ!c34qS>s[Sc/saJX#\'6.7Ie6jYK3Wk:<UJGO+++i85hp-GZr#.0Rrh9W%T(`6'<io^cp(6"cruO<g0bWY%%`aFC24\uTS$ZR8@g[!an#>t3>o,\`n\cBhfGIi%t&@C'(9+O9odkAbW^s`HH'.D.456UBH[gRetlc+6t^dBYB<'YJ&]@fpfR34UN%@:a&n;@Q!p=Z7lBIb"sj6LXU(Hj\J+ZKZ76g5u,W;B63688idgJ#LR^o'PTeU+<Ab[6M'AAq&sLGHW82_9JPFf+8"93[o=0@CMZe%BAFWV6]KtMn]m%-S\`j+@aD^\d`\n(<0QQ18#l_pbVt3`K4H<I_ijqkcfZ.%]U,g+c%r2*L-2ST2=1.09LO<.2F0\i=U)=<Y6`nP%oPVLHXj8LUHaJ9NpA.BfY8s)/CjW:9mN.<#X\Oq:TOs]OgJl)0Xu((2R&FfDp=+i\;]jVH:j)q'M7@[W.pn7pqmR$]Q-5#rCHf)4%B`$"BZbM-g=D03W#csor6EH8I#:Wh1h\#tIbQn"-!\3^!euF$?E$->o(l669^qp*kj[WX8$_:Ms((OXnb%*o]$-4`ET;JYF30@W4%0p'qEf\Ouo5ekQ#@Mh10EU9^mT>+iuXXa'(:O'B>jC%e[N>B@Y<GiFg-aTTM&pB],$MmL1R%WFAWZD().U^YPZBbVbXFlK-5U,Ek%5Dm1cZ,e*QhOA2NRJ[0Y&"JpCb\#""Zs'>9I4!2S0IJ49TZI'B0o3L7]'3S5e@S\.Da/fk_5*bUpPb)<j_0du9+$uAM<(+ZI"KT8%J#lElV:I<W1?>2[&243'J#\m>*E?_[#uNY"^+KU>_n;^IQS2LBY1rq%Olnbn;L\b1.se;=WQbn1KiguC``a//nV^2OpG(.ri9$dt%&EH'3a8l;RBk]k_"[Z5U.`IA1jK<$QE%>5BP*J<)M)cpT/k>.<A639dPd)L_**5SoRi7fD=3^`WZpA>.H[gCO`?!B=4]nfKL3:V"%Sn;11\gBpJe#!O^1GS_:7UjeYaLW%X\VK?>'KKP\#`PM"fQE]%Y?>?^F(eOA,3e5`?Vh=XUK;V\SgBB3)VLlJ@\WPts!!@f>VuBM%dY88ZqmXli\OY@Eq^,b::j-.4]H!%jLi*2?3bbCLb(r.O*YoLd6c:`B=b.`YNS39t31$L1_N2p3;EQ82?"(;JU4SZ/b1VBP5abb\%6"JKV-*rIITmDi^1)ZW.9:uJVLrEB;5;-tPf8lD*paH=U$4NigPVL029UHSQm)78#jXOgd9DN(G$IqY6)S:F@&.#qL>0HIN.X#q$%ba.2$+nkT,G70.U0%^I(05[i&D#9Pe?H8FVs&4^n)e"u21#Cm^):OH7&+F[mOr62f`=(W'jYA-Bi6<_d+X:\3PE*pL.MgsBqoDPZ%k0Lmr=_o6lDor9"dYb2\KqG-]SLr6W6'i2\4Q"=OR"stnSI=nll(=;erfpZ\q\^XhXrg+gK:N,r-84/Hja&9,&*eP8<YmdlOU)'0%o,k"/9Y3\HJphI9X;aDF)_h^BGt*Vf!a[)aU1@p0SiX`(\;=iPj\`q`o%i7e+A$!L`UD*s^Ta,FgH^2%CA=.V?$"?ZgEaN$dN@Ik%Ss^aqjCT/?Vua^N"tuCN]#n.b("'SV!^HpTc<<OHUji_YRG_c[iJu4mQe^I^_NpNqGFc@$9.KTikn+NCS/Bj5:>^%@pD#eBi)j@-%AK=m1Q19SZPbO:b@+Ac_!c.\]SBl%:I"X)dHUk/:7(`O/?k.i,N(@a6>I^VDmHca5@fdd3Zu%tIe&g7]%_?m1M*mEmh`Cu(O5/S^%rto6PU)OmQ[DY+FR'[1dlsp3gfP/<$/VA>.bI^9sp?m-lZMUhW.4iO2?5Rk:$g:#9+><1)@GAEOZPR.;lfYsKf]aAc0\GXfh':/#%IAJgbhGo3X"nI7q)Q>K2,iR=SMm-Wf'k7\s5l7Sed.ZVrm`2Uo[Pfe>A&n;.YePO<h75Qfmg8W0E*KD,RFp5WW`/>eeVDfNmV=3^%?5ZIgAgn)hX@XP@IT`maCd9sZ'!!OhRUCEUT0*d4ipPW-?(Z_?8Xf\H6Q7e1%e"6O6Cc&X["!p)s%po4hj_^9]<+rb6[N2&LTYst%'tW$Ncptf>Wk\IW,hEcZQ"7pnGKL\>hC%.Lk'cg6R>Wc."+B/a7Ns-kB$H:eBEnW3!egnqVr3S6=>"oLNiZPNSRM-Ge)qr]bs;#(%nH.>-mob7pCD0u/6AqmaJTgOC^'kG/H-2U4n<opqK241R)c"''XslR%*""tH\J>a849_3&IlPZ.I5e<p'0L'TD0sc62QbR<-*\pq%Zktl:pl*>2&l$2uWEBZ'H%8UHLNa;+QsBtb&Qs[Tkcrd6.LPh^J$UTB%bsR>aW(NpGu,W1.RG`F&OQtPWm%^iA'jk'EKP!u#SimV%e.e%05rDD65f7MO&SZbh]hQ5K$).qYl,GtSB\K+^_aS8jM[LfUWlFOBU*LB;<,KR,nbqq:+bUbgXV*5C/$juQqD%%Nf5h?0DTP**%Of_'n<L_I][/+(SeR5_K,u(Q>qSshUYV"M>_lI,fr+^q_=>+C4`b/b@-68mnJRJhf>!^aaj#es"/r$ST=N7*bU$U,^gX3YgbiqPl%L7%)_fuO'CT+7=h6^B\Y(TWa_bfu>u)46dp;-B:j&lCe$MA_Q).hU30o"D,fBh6*_Q46?:E5k).`R\*eTPshCW*2=?0uPOf548cI%JLG(4B;#"i>js?CG!A?cfOjs[2scr*WR7EH^DST"*PN1=Xp&N?>B7d,riHX1.T:t"ad`F\d_T.1--FtIfO#NDf-W+j9-KE&Hd1iP%BYDRRTaCq>ZIsU\p4<4i8^'J,N'-DjA,@t--e5cNTXN?2!o55=1:V3Ff!V8<a*^[C'[Y't^cA:s:JFfp*)_+/_4bWPP]],]n6Q^V%^fZ(8ZU?GV)jUIj<QV<0h'qIcBla1XPh-`33h_Il45\fWBjX&Tn)+#1VFWWW6IWTeD.7>tgqrL%0`HoVjAVJc](W&%8?.6Fecl\,%f==Iub[Fu?N`Sq(4ChD1?u)qKQo[eDXrQ$J^ButQK,*DK9;8m.D_,OXH,HDC^-U;<7J;B-QaqAb\#u]!.P??A:aX1*XZ'Dk`RJ-)%P8((bSd\]D<fmM"[@)OUU>/YHm@Gl-VQ/V8>;utXa\D#OVY8Ji`,Ehn\cVlm3"5<8CoandKeET4iojH5.&fa!eV6'Tp0lj<Q!,aH%!dWf,a>h#.V2ItGAJ&>-#prZ];,P@j7L/WoeIAFi'RA=QWLV%"k+2;c!3%"\.Y6`42eQDLPcjX0hZGEn4;DFJ;>!&VP]mb2.`:4/%?2*ZJL?,#f!3a!ud%enHiIgP#^.eTPnkKeTeQ[]Gd*#''OrEc11\f0pp6LmX>%,`XU,`r$,A6MM1R<P+O"6J@potZ4LOu(9Z"6rH%Uhm>:6cLo-N9uGOD_*AaIG9-5\sEI<qaCdKXA@W8<($g7\QRFIftCCA94X!t[\OOhTGN>QR88\%IiG6MSmK^m,?Y#[QGu2YPR"pH%+;)Bo1')bS'qi%WANY1#A<)!89dfEte!JZiEM_TRR@<;!$u]lp$i#)RAjn=8dn>uio,c4D@i_0a]kJs5*C74kc8b5F%,)r>Ht6@4%6$)HVUu"?pe.ItV^<3=tZA#>qG&S)s<'I.BSn!_)fg/dM<5rd4##J>0c!<.2Xgq@es)Ylhs..u^V&TFCQDLt?nq:&9)&31'obPsW%Se_n8m6tpXmHl-7H20`8mP?:4O80H-cKn)0$=HC1R4#d8+SUbY@$r.m6f)Y0aGl'Wp?QTRRTHRc*gDbBV,Vmqg5QYu%F+eEnQ;6F%LF9$>!TjrLB)jOapbG\J;)I9(20%^8A=PAIoIppU`6Kd<:mEP92UDb@LcH/"5eX=c]78FR.PAT$=/ir!&C*Z:\i8SUHd.@8gClk.%LNWGeX>QTB@/_)A/m`,9/%MRnV)Pj?V&5?`Eb.6GM3uZb<,<=K^V,F35OsPG*sXA!7sR#Ol)4]^9.g%>O)e!$ob-b:5D@tC;n/*q%qMHWUfA"3gSDJpcm&cfn.9d])$_R[kQ=-4/O6=H;0Z9EVL1388Z=='0*<TSOk4s%Pd4^&6+L%4Ie?m#0JRW(<DB\:L`AmT>p.UF-%_TSG!4<,i@lrO>@!EpUhCps$4*+RqH+JLsNH[R?4+(C]"Id<HqRW7leJVlDke\4Z'DHg'P/-[L*6`-U7BIs#!2$h31;4gfb[pmc9%c%EE-lI[DH[q\m$SbL+[1NhI<IYk7@H=^KE.s)UEPo-EA.'Uo,)Qnt"c-!0j0j9jD31Hto4_U2[7haGa2+mkkm4-/qRg3-C)k<$5%%*R)TPerau.nnBY%c=oh1]eM40_hTu#Y+6Cmh2UTH"CrNn/S@ArYQLD`gVQei)KcGL7&`XTEmd/7:bKmY8q9[lheeX$gN+T>%`[?%fQgZ[I>q2lEDlIh$#%-U+r#ei`js6+(F%A2Y&`5<'gY(m2QhE5U]k5J;@pIoJNU*Z>1WfXG`0Y_F8$&:5B;D/XGN9q"+24PS`*oj%Sf[d?p^ZBV2T3781l+:Kr=SZg2.W3T\QRV*D((=+ok0ioAZM6-%HR685*.=0<qH.R#9S][(ZmCq/Zj1H@-UQ0m1V,b(=Z#11ao0S%V0\R+H.M'57LuI4@#nQi5',H/U!(_.c8+uE6ub*SY=&Q\(1E3cmMD4=j9C1o_+Tmk3tRi%rMnN>fF<GE(<ne/nrK3cOGRTB==i)&%`U9Te0AuF/@QVBU'iPZ]U_'^p1FPs/:_Tfk/t0kO"dFop06SY%4<6<Ba-k9aDU0t+\*%BF@%sQoc)XC_7W+7:E2oAe!gU;,OB%]o%ohcTPr2JBB87a&D=gnN&;I6cn@F7'#;.\^IclHR.+IN3s1^lgW-9J$N<f/A&ot"lOV,gle1dnemdSjIs_,,-pb,Uk\=+H#6;ERrQ%R2aUAWgf8c`>qJFUf2@?oKjGd``pPT*AF<MF.VBWTdqiHZ0<-kVW^^l%6<qUOqZS4S=WT(,-'U6H-h>l)YhODijomccn+)m3m1Cl%3bSr1-8h/V]'aZkKRH[T1HQ!$22#E]3$ZsgpFqcU!Fr2;SgrQra6(T!,tkLp@]Y15]]HC:CBLc<\#33\0WNhaKM+pDp9*UM_7`Xt%Un]ZI"l@E8q.`c8&f+(XS!\AYe59lG6oeUjNX-MA4`Z$^obI=t;lfAjL]#`H`jOLfgfcYt;/),6(f8Ms0e)L-k@pH6^ZKS$P)!12%\kOOe_\L-NK64<'5_W;$gVi(eSed&9DY"!1Z5,>l(+)bs[Yiq!Ds4bDges!A]:]t2aPc)hYQd"g5uAaRTbC>C(lQS#Y.]F'0nGq$%'dI<#W!>D-KeV(F//KZokQ!DcQ,T-q`5r@=ZcQdYh'f<0%2))bLQLA"9B.qYb:i8s/c*?M2M`Q^)p"1IM1q?t\,Cl#p(FCLdbBZ%%nqg,K"Hl5.1'.giDH'SFmnmfE*JH=?VgP^DOe[<r$,u@(_hc:j0a9mZrUdr^m<gEP/`DX[Rn35Y(G2^\+Dq?,KBbko?82q.:qVDs%s7r>T5O]Z`>IeMS%^ehn_G%"f]G!C>S4;V5pl#kfJuTl^JPO1b;6DT-6l'p-XR_Je>O1_lK=S]C38X<Vk=lHTjb"Vb);\_N@?uA_%fShs_".@?^eG'u6LB?oqA&W/D/irng_4GT'(jX)&+DO\&3f4E,l^,0blHBM0Fb.YPO0Z7!VrMQe&Os-KKJ>VXh:aaiP89k]lVl,G%S5jm&D^&`Fq6GAgeCdMaT5DBQd["4K2tjh\5:-p]A[<9HdE,V13,m2ifP/B^OSB&52M<6E+cI8d8iM^VQ.4VjN(5njGN/U^@dhsu%'?MuO%cC8QBl1TOfJ>81PO1"-pmI#^dYsYf?BK6Yf%fZB0l.583l=i9V]_(8>IQe'9'4/r<`r7j"d"Y,RhqWMAEAN^K7^hm?:`2o%At0==OljnrSZ8KSQ+YBC)Y<qkk,&If5m?Pf'B+ttTXL*JCNZ'I485/CC(jPf6*cFR<8LuTF%/Xe-5P>$MJF^SH;[#tSFMqrm-)$)%O4mY7iPbCFKm_aXaiopu%G`84mXeU41A?dbGMj\f&o$t::pFu[J[iM_VHEa-mOO:]3ZOjA22l%S`pi.od3tJVKKZ3$@=)[d[_ML7%jYO1J8<2i0COqAlAG(Qs-b4&KM3>$76mBtkLrRt%Ysbm6j/4?&>9b#6bfEeU2V:!q"bh,;:r/%11fQ!Q[V80?R]]4Am\Gt2[SVB9%*Q\,[UHLOd@74Hffc>[`"`/NkS;5KemXBM%!$(cOdudHOil*`/`\1*Vq$[B@7kUYRkb`\-Fqk.J+DqjqB?RSpFMkom+!t:a\-,^K%]l)-U`e2m$O*d5q"W"*4X?rCh;H^e@!8sY/j2iJ[Vbk`?.Sc[VX&PVUJnIulDU)HS-+uc<r)jcO"5WG6kbKj__?[@nDdSBX?)c5/%'df0SPm/,-Y[Q"8/6/qO@'sMXmbX=d7L][(J!bUInr('BWoW\>H%5<.T0Am.)Gn+ZCt[_Bd!O!:_Orf"3CUF\6>X<PFuqgJC5I9\%]s&O=FN-M1&8B9p31/-H!`rVcIQcI?)!CuKH*cmbOBa+ZXCS@43@9-_2ru]I?%kC>LU-p'J-HU2l!bmoGq>38@FFFDS3B(%U/tSQ%/VYACPkhsS)!Ss8CO&$[=1RKXFDX9hTbYWu7Sk@*3skK=OqfsNqh4-i7-q248MiBu]dZ`qAI]6"j9sES=grN9o0&uB]nRpQSS0t-%_:5riUcQCQKBTqIQ:Xg<N@q2fK-Jc2kaUQi;;a(R.#4`ffQP;&A'`Lj9j%\!WKU&!G#jM)k3W-\O2ENP^OFkU47=&ZYJThpR0JkY%lI-k!-u5]BH`cE6*)!:m@io<>L7ABuda6#B0Q*0$4K&e2Q(]Q#e6'M_No0_^49k't#4YG"mnRWKZO_Y;L:)jS&1tB>?<LE*lAW(!%EGD_mlT*\S!KQ[VmghJX@,U$s%d@Fb]]rj#_@T-$VV4Q0q$c&rfh$ctgD).)[QVXD<&86Pi!kuM:eTt86ei8?o5rKN/%>"FK*QeR%jE#Q]+$O_lCr,j'r30HkG9fL\PNoW.Dakjj2Xif<O7?=c7U'gA1.,W8?]CAPZ3tV:-04ZK^M_<H^`PENn3N8aiH9g7RP"<KL**ki%Rh#@"7qCE@6#$pcR1$M=2:T"]m3j.fa>"db-0er_EUlKGW&hFR*E:9&Q&o5I_ECP>JfBLTD_b9Z91i1$>*Rd))$\nuHAc0?n?Ya]%pm#jJLJLrd.O6HPJ+/5!;IMZia,cIZ_B.-ZOj91<TBb*jP_KgJjrZ,;piT(Jg/KA(2k$?^_BJ!WHDu%G^?a8SC8.-29j<(6'i[P.%PcUEo]-O`Y%G-mY4)rl9LnOQ0FaPO%l/b?iZ?7mgWgHr-]iM(iqqnZ5[ST@98FlCB=)[Pd@J$??hnBF"88nAY592WY:;d!AP5IBS%`5=SlGNqeX;35pd@8&=)etm^=jN:9M/<cm&kbsU&7%Un](UAkb:O,%6p+L9=r>shMY`,<QrVc^A,^2ViqsR5^n'+o#:Mh]@^3&&C%44Vf`>3*Dg*M<Nc!XfnU;544<`ra.48kGQ"dIJYn_FDZnO@h.a<g:o:Uh;?u3s4?4)eG.e1m("ppa$)3@b@?7!qV<7B5#!1ln;\M%,:_+No./I@/SmZBpFb5"OK7Qg+TCjg>+MoQ_g*sHZ0dk8'Kf;3PqWc5lM.8^&b(PeeZ<J&oaqk*\"gh)=HY$HV9roQm&)?W59C.K%(^d;$p`cn+U<UL@%>c9C)[=->4O0If>pq(Z=;j#q..8-lO\*0O"gqqZ(td!)[!J)eQuh#m?nQ#0X)6cfjE(bqh8>uj4m73^9J*tg%V"!MJ`X7c3NY\kbnH+$SLuGUca%TQoYE.C=)",+1Hro>oACKS-$DLJ2#,uj8i^i;G--+^N5mFb-AJ65EZI60KDc'B0g\CDfE%>=/%V-k28Q'c519bGM./P^W!(b?ZY"\9P$j@Mq05q)>]1_j&1LZC39/4r#pjp(u<qrpj.5K@G/7:i[cK7;WkJ,bPPk!8W*Dim5T]2S]R%oqi<4>K521!'V5'^t7UceB@$a>mg<FTe<tTo!q>IlFG$<QqU#hF)J>51]-ql?Oe]X7A!G?)ur"M(bg\,<sZPko.Vk(84u;"+IN$5%L7Z=8dT^/URQH\RSOJ^jct$0EGZu!cb9)F.(pCq=3=-9;HJR,lj#PuS$<h(.'06A/Kig$0>/mA45[X`f*@*hn&iM[:$N&15bPG17%E<\iG^s<FBm_%\Y$U&4);_3k4Q!gC3h,u)5Gu:tt3b[bF0$]5#4^lh+XL!HSMb98M%`&d')tltL:0Jk*K.$WRbb7*c]Y&;IA-UHE%'k;5sI*+X4&<TfH00aBre(RL5Sr'Eb_>YbgI'g80HUFk<qNbQ)kjpfF^"GT`p%VE_D\C!Q>BC9d090JeZFT(Qs(HHm$B'n.[mc;T%)jEWAn"`0%q?#3,?s#b/7I+lJ[B\C7NW_:k*3_fGquD@h`h!/D=6V'fP^$tZ;rNO?D+Smg*p^(M.[(j9':CZW0[3G!JiVVE[uIa>%\g3:rWJB^:i&t:qZsL#'='^/0FQjl?<aU_g_A50"_s,o%Kmr-Pr7WR4gTSa!=G-OD$fXCjK"*R?4Kd=e&]:U/SBGp[O&9;p)+3p:%I@[I**AFi3AqZ+o#fZRFbP4eFPo)-%/]$VNK3JMXE!7Z:pi&\qa$t.lq-J>=ZVVE24cESd?P9t&0'$F9UkQN$/J1qNUe5bVhI1YV%OU@Cf=;m5V/3&cn&L#<):OSD'<sF9(TI7._L`GC6:-ru;@eR17T_+p3_%#IcSlX]-2865N/.cJbp`np(DoiD6Z8Q0`As_C^9E!-Y%MOR^u*n'"bh_C[i2lQO;:OOBuA>n%1$/FV"*i%q=!Q6c_*)V!E9-k2i3b_r!R6V2tPH;)B_\hTp<O9RQitU/VI`u=L_s6:dGOWLl%R2VPso<4VZOH+]#_KDKG1W!#.3`\f7SL'rM\X()6U,EQ"n6/l*?9nTF'atFpVRL@a/ddP]7$)d5Jr(VB0e+JqYE4)D8UVDu!hKZ9%NSFFuP4A6j!QNe``'qKM_Tl[=bW++0oo[!%B*i#[ZAs:q6)Xamn>@>MA\^g!!IQ"/^^&9gI%,N1M?=.k^6B5V""C2s\&c[_]KoHQ%a*i:FIFr=Io.9;<QV(X@$Et;@h5eO-O#KMoNC;;NIO"R)qIr%^1k$.<T0"elKPNE^f=(EuGICF<he&ib5%>%H3bnX)ane<2\&&i*%fPi&#+@_M9o`ZQaXX,35\t:3rm'l=[h(oI\NKVVBH(J3eb!@0?($*L347,$I1-W'JE@1BQXLlT[br84?QgEmCS6?JnhG<SUbSp>*%Ne)Eo5RtfXA3IYkb7D_j_7&?-TCS^VDX?sarPVs&R'`\(kt+#B:SB-#SLciA.9%]Q.Q^nT$2,E]GmoYU3377^>t(I9[AhBV]p7P0%!0acC)F/WVnRU[P,#]ORA3SRpA#;""m]rGne7756@d306>L!-FFlsgY-N(bQlR0dKGpCiB!Lua"pS!;V?"h+oXI1!)Qn5.ha@AG5%']8"$ls>!o!RO\&4\MRm-d3R/,^l)i3'O.mLK!1g^6=0q@?FR\8\`i_0uejp$;[Y\0P1Zto^O6T>-j`@[U[4B\$fQq>(K7a2o(9$%B,W"QEC6jehh\)rMOG:e:-.g7Yc)uKQlf$AQ+Uta>ij[(ab>UDkAX#0nYXZCP/]G6).*dM1=GN&=O,8H%#gdi@qbAk?%ZY%q"isc%Mt[[B1pMC^#cci8K6/pUh^GMmbGML^bOGpfXCd/l"B>08bmnJB,E\_C>au:A?dIo&,4]^Knj^.6>^G6"MH-cm7B$oe)HCSV9U/C%%mZNs.=,aE3+\j-51Uu]^3V'!BQ==KM:1aeB>k?*[TT4S-K)AWq+p4#5,L[bZ+^WCo\>CCPk_Es\O=2%])1+O'9"OEMIbT526fT:E%=^aK^nlAj%ShLA&YDp/p00sg6Cap-!)+>M'Sk@70d9i9h^:_3!LH"^]h5B'6,I^-M</\9OO.?CE5T)6s,V>-bN\!YE(*=G"!lJ$C%X:URlU"o$2("FrSbB,9lB9Z>OVRhSH/!PJNWe5s_F;<1)rCCXfRjOL<]P+a8N<-T,\>Pa`8_J@JNpeEGW1)XJ!&C^:6C;EbO\aM,%PTi_[2^"4r%U177Tq;g*n`)#QGl&4e5+)(JDcV9hlo?$[Hj4IKKTX41WEt.0X(MM89qJ72AnsZbdPmqaWLo3>o)iRAi0Mm<AV6hV%%*;d3415F2W=%ZGBOO0,A3aeac3/c]c?Lt.l__<`_WB\8SbqU/Jql=]ntQ=[$<+Gc7R*Tq!kDZ<20+!4!8:b,gG%(EA+HH7f"CCd%_3+7*1I>`D;AGZR@nMkrLb]=Dl,M;6Co'#Vo%7qL[qI_!XO"bR7$WYY<pdEU6?ncQCP9:X7BYjEPk3(^i:QHqaH6'm^WAZm=Pb-A%lf4aCB`"Dss6I:(rg3XJs7p%$mD#7lo'*?-qs`S#0>IFWJ,.^2ra10PbC>$@legRtlbEJ]j'U^Djkp%HpV=QC5N?,-s6JSAqX=IQ%s7k>UhuES'q]Gh[OR^J@r0LdibQ%+I^&.g1NRi*4~>%AI9_PrivateDataEnd